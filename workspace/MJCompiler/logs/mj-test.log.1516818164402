INFO  19:16:51,989 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  19:16:51,993 - #1 program
INFO  19:16:51,993 - #40 P
INFO  19:16:51,993 - #40 const
INFO  19:16:51,993 - #40 int
INFO  19:16:51,993 - #40 size
INFO  19:16:51,993 - #28 =
INFO  19:16:51,993 - #42 10
INFO  19:16:51,993 - #31 ;
INFO  19:16:51,994 - #40 int
INFO  19:16:51,994 - #40 d
INFO  19:16:51,994 - #28 =
INFO  19:16:51,994 - #43 g
INFO  19:16:51,994 - #31 ;
INFO  19:16:51,994 - #8 class
INFO  19:16:51,994 - #40 Table
INFO  19:16:51,994 - #38 {
INFO  19:16:51,994 - #40 int
INFO  19:16:51,994 - #40 pos
INFO  19:16:51,994 - #36 [
INFO  19:16:51,994 - #37 ]
INFO  19:16:51,995 - #32 ,
INFO  19:16:51,995 - #40 neg
INFO  19:16:51,995 - #36 [
INFO  19:16:51,995 - #37 ]
INFO  19:16:51,995 - #31 ;
INFO  19:16:51,995 - #38 {
INFO  19:16:51,995 - #4 void
INFO  19:16:51,995 - #40 putp
INFO  19:16:51,995 - #34 (
INFO  19:16:51,995 - #40 int
INFO  19:16:51,995 - #40 a
INFO  19:16:51,995 - #32 ,
INFO  19:16:51,995 - #40 int
INFO  19:16:51,995 - #40 idx
INFO  19:16:51,995 - #35 )
INFO  19:16:51,995 - #38 {
INFO  19:16:51,995 - #40 this
INFO  19:16:51,996 - #33 .
INFO  19:16:51,996 - #40 pos
INFO  19:16:51,996 - #36 [
INFO  19:16:51,996 - #40 idx
INFO  19:16:51,996 - #37 ]
INFO  19:16:51,996 - #28 =
INFO  19:16:51,996 - #40 a
INFO  19:16:51,996 - #31 ;
INFO  19:16:51,996 - #39 }
INFO  19:16:51,996 - #4 void
INFO  19:16:51,996 - #40 putn
INFO  19:16:51,996 - #34 (
INFO  19:16:51,996 - #40 int
INFO  19:16:51,996 - #40 a
INFO  19:16:51,996 - #32 ,
INFO  19:16:51,996 - #40 int
INFO  19:16:51,996 - #40 idx
INFO  19:16:51,996 - #35 )
INFO  19:16:51,996 - #38 {
INFO  19:16:51,996 - #40 this
INFO  19:16:51,996 - #33 .
INFO  19:16:51,996 - #40 neg
INFO  19:16:51,997 - #36 [
INFO  19:16:51,997 - #40 idx
INFO  19:16:51,997 - #37 ]
INFO  19:16:51,997 - #28 =
INFO  19:16:51,997 - #40 a
INFO  19:16:51,997 - #31 ;
INFO  19:16:51,997 - #39 }
INFO  19:16:51,997 - #40 int
INFO  19:16:51,997 - #40 getp
INFO  19:16:51,997 - #34 (
INFO  19:16:51,997 - #40 int
INFO  19:16:51,997 - #40 idx
INFO  19:16:51,997 - #35 )
INFO  19:16:51,997 - #38 {
INFO  19:16:51,997 - #3 return
INFO  19:16:51,997 - #40 pos
INFO  19:16:51,997 - #36 [
INFO  19:16:51,997 - #40 idx
INFO  19:16:51,997 - #37 ]
INFO  19:16:51,997 - #31 ;
INFO  19:16:51,997 - #39 }
INFO  19:16:51,997 - #40 int
INFO  19:16:51,997 - #40 getn
INFO  19:16:51,998 - #34 (
INFO  19:16:51,998 - #40 int
INFO  19:16:51,998 - #40 idx
INFO  19:16:51,998 - #35 )
INFO  19:16:51,998 - #38 {
INFO  19:16:51,998 - #3 return
INFO  19:16:51,998 - #40 neg
INFO  19:16:51,998 - #36 [
INFO  19:16:51,998 - #40 idx
INFO  19:16:51,998 - #37 ]
INFO  19:16:51,998 - #31 ;
INFO  19:16:51,998 - #39 }
INFO  19:16:51,998 - #39 }
INFO  19:16:51,998 - #39 }
INFO  19:16:51,998 - #40 Table
INFO  19:16:51,998 - #40 val
INFO  19:16:51,998 - #31 ;
INFO  19:16:51,999 - #38 {
INFO  19:16:51,999 - #4 void
INFO  19:16:51,999 - #40 main
INFO  19:16:51,999 - #34 (
INFO  19:16:51,999 - #35 )
INFO  19:16:51,999 - #40 int
INFO  19:16:51,999 - #40 x
INFO  19:16:51,999 - #32 ,
INFO  19:16:51,999 - #40 i
INFO  19:16:51,999 - #31 ;
INFO  19:16:51,999 - #38 {
INFO  19:16:51,999 - #40 val
INFO  19:16:52,000 - #28 =
INFO  19:16:52,000 - #9 new
INFO  19:16:52,000 - #40 Table
INFO  19:16:52,000 - #31 ;
INFO  19:16:52,000 - #40 val
INFO  19:16:52,000 - #33 .
INFO  19:16:52,000 - #40 pos
INFO  19:16:52,000 - #28 =
INFO  19:16:52,000 - #9 new
INFO  19:16:52,000 - #40 int
INFO  19:16:52,000 - #36 [
INFO  19:16:52,000 - #40 size
INFO  19:16:52,000 - #37 ]
INFO  19:16:52,001 - #31 ;
INFO  19:16:52,001 - #40 val
INFO  19:16:52,001 - #33 .
INFO  19:16:52,001 - #40 neg
INFO  19:16:52,002 - #28 =
INFO  19:16:52,002 - #9 new
INFO  19:16:52,002 - #40 int
INFO  19:16:52,002 - #36 [
INFO  19:16:52,003 - #40 size
INFO  19:16:52,004 - #37 ]
INFO  19:16:52,004 - #31 ;
INFO  19:16:52,004 - #40 i
INFO  19:16:52,004 - #28 =
INFO  19:16:52,004 - #42 0
INFO  19:16:52,004 - #31 ;
INFO  19:16:52,004 - #11 do
INFO  19:16:52,004 - #38 {
INFO  19:16:52,004 - #40 val
INFO  19:16:52,004 - #33 .
INFO  19:16:52,004 - #40 putp
INFO  19:16:52,004 - #34 (
INFO  19:16:52,004 - #42 0
INFO  19:16:52,004 - #32 ,
INFO  19:16:52,004 - #40 i
INFO  19:16:52,004 - #35 )
INFO  19:16:52,005 - #31 ;
INFO  19:16:52,005 - #40 val
INFO  19:16:52,005 - #33 .
INFO  19:16:52,005 - #40 putn
INFO  19:16:52,005 - #34 (
INFO  19:16:52,005 - #42 0
INFO  19:16:52,005 - #32 ,
INFO  19:16:52,005 - #40 i
INFO  19:16:52,005 - #35 )
INFO  19:16:52,006 - #31 ;
INFO  19:16:52,006 - #40 i
INFO  19:16:52,006 - #29 ++
INFO  19:16:52,006 - #31 ;
INFO  19:16:52,006 - #39 }
INFO  19:16:52,006 - #12 while
INFO  19:16:52,006 - #34 (
INFO  19:16:52,006 - #40 i
INFO  19:16:52,006 - #24 <
INFO  19:16:52,006 - #40 size
INFO  19:16:52,006 - #35 )
INFO  19:16:52,006 - #31 ;
INFO  19:16:52,006 - #10 read
INFO  19:16:52,006 - #34 (
INFO  19:16:52,006 - #40 x
INFO  19:16:52,006 - #35 )
INFO  19:16:52,006 - #31 ;
INFO  19:16:52,006 - #11 do
INFO  19:16:52,006 - #38 {
INFO  19:16:52,007 - #5 if
INFO  19:16:52,007 - #34 (
INFO  19:16:52,007 - #40 x
INFO  19:16:52,007 - #23 >=
INFO  19:16:52,007 - #40 size
INFO  19:16:52,007 - #35 )
INFO  19:16:52,007 - #7 break
INFO  19:16:52,007 - #31 ;
INFO  19:16:52,007 - #5 if
INFO  19:16:52,007 - #34 (
INFO  19:16:52,007 - #42 0
INFO  19:16:52,008 - #25 <=
INFO  19:16:52,008 - #40 x
INFO  19:16:52,008 - #26 &&
INFO  19:16:52,008 - #40 x
INFO  19:16:52,008 - #24 <
INFO  19:16:52,008 - #40 size
INFO  19:16:52,008 - #35 )
INFO  19:16:52,008 - #38 {
INFO  19:16:52,008 - #40 val
INFO  19:16:52,008 - #33 .
INFO  19:16:52,008 - #40 putp
INFO  19:16:52,008 - #34 (
INFO  19:16:52,008 - #40 val
INFO  19:16:52,008 - #33 .
INFO  19:16:52,008 - #40 getp
INFO  19:16:52,008 - #34 (
INFO  19:16:52,008 - #40 x
INFO  19:16:52,008 - #35 )
INFO  19:16:52,008 - #15 +
INFO  19:16:52,009 - #42 1
INFO  19:16:52,009 - #35 )
INFO  19:16:52,009 - #31 ;
INFO  19:16:52,009 - #39 }
INFO  19:16:52,009 - #6 else
INFO  19:16:52,009 - #5 if
INFO  19:16:52,009 - #34 (
INFO  19:16:52,009 - #16 -
INFO  19:16:52,009 - #40 size
INFO  19:16:52,009 - #24 <
INFO  19:16:52,009 - #40 x
INFO  19:16:52,009 - #26 &&
INFO  19:16:52,009 - #40 x
INFO  19:16:52,009 - #24 <
INFO  19:16:52,009 - #42 0
INFO  19:16:52,009 - #35 )
INFO  19:16:52,009 - #38 {
INFO  19:16:52,009 - #40 val
INFO  19:16:52,009 - #33 .
INFO  19:16:52,009 - #40 putn
INFO  19:16:52,010 - #34 (
INFO  19:16:52,010 - #40 val
INFO  19:16:52,010 - #33 .
INFO  19:16:52,010 - #40 getn
INFO  19:16:52,010 - #34 (
INFO  19:16:52,010 - #16 -
INFO  19:16:52,010 - #40 x
INFO  19:16:52,010 - #35 )
INFO  19:16:52,010 - #15 +
INFO  19:16:52,010 - #42 1
INFO  19:16:52,010 - #35 )
INFO  19:16:52,010 - #31 ;
INFO  19:16:52,010 - #39 }
INFO  19:16:52,010 - #10 read
INFO  19:16:52,011 - #34 (
INFO  19:16:52,011 - #40 x
INFO  19:16:52,011 - #35 )
INFO  19:16:52,011 - #31 ;
INFO  19:16:52,011 - #39 }
INFO  19:16:52,011 - #39 }
INFO  19:16:52,011 - #12 while
INFO  19:16:52,011 - #34 (
INFO  19:16:52,011 - #40 true
INFO  19:16:52,011 - #35 )
INFO  19:16:52,011 - #31 ;
INFO  19:16:52,011 - #39 }
