INFO  15:51:20,709 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  15:51:20,714 - #1 program
INFO  15:51:20,715 - #40 P
INFO  15:51:20,715 - #40 const
INFO  15:51:20,715 - #40 int
INFO  15:51:20,715 - #40 size
INFO  15:51:20,715 - #28 =
INFO  15:51:20,715 - #42 10
INFO  15:51:20,715 - #31 ;
INFO  15:51:20,715 - #43 "
INFO  15:51:20,715 - #43 "
INFO  15:51:20,715 - #8 class
INFO  15:51:20,715 - #40 Table
INFO  15:51:20,715 - #38 {
INFO  15:51:20,715 - #40 int
INFO  15:51:20,716 - #40 pos
INFO  15:51:20,716 - #36 [
INFO  15:51:20,716 - #37 ]
INFO  15:51:20,716 - #32 ,
INFO  15:51:20,716 - #40 neg
INFO  15:51:20,716 - #36 [
INFO  15:51:20,716 - #37 ]
INFO  15:51:20,720 - #31 ;
INFO  15:51:20,720 - #38 {
INFO  15:51:20,720 - #4 void
INFO  15:51:20,720 - #40 putp
INFO  15:51:20,720 - #34 (
INFO  15:51:20,720 - #40 int
INFO  15:51:20,720 - #40 a
INFO  15:51:20,720 - #32 ,
INFO  15:51:20,720 - #40 int
INFO  15:51:20,720 - #40 idx
INFO  15:51:20,720 - #35 )
INFO  15:51:20,721 - #38 {
INFO  15:51:20,721 - #40 this
INFO  15:51:20,721 - #33 .
INFO  15:51:20,721 - #40 pos
INFO  15:51:20,721 - #36 [
INFO  15:51:20,721 - #40 idx
INFO  15:51:20,721 - #37 ]
INFO  15:51:20,721 - #28 =
INFO  15:51:20,721 - #40 a
INFO  15:51:20,721 - #31 ;
INFO  15:51:20,721 - #39 }
INFO  15:51:20,721 - #4 void
INFO  15:51:20,721 - #40 putn
INFO  15:51:20,722 - #34 (
INFO  15:51:20,722 - #40 int
INFO  15:51:20,722 - #40 a
INFO  15:51:20,722 - #32 ,
INFO  15:51:20,722 - #40 int
INFO  15:51:20,722 - #40 idx
INFO  15:51:20,722 - #35 )
INFO  15:51:20,722 - #38 {
INFO  15:51:20,722 - #40 this
INFO  15:51:20,722 - #33 .
INFO  15:51:20,722 - #40 neg
INFO  15:51:20,723 - #36 [
INFO  15:51:20,723 - #40 idx
INFO  15:51:20,723 - #37 ]
INFO  15:51:20,723 - #28 =
INFO  15:51:20,723 - #40 a
INFO  15:51:20,723 - #31 ;
INFO  15:51:20,723 - #39 }
INFO  15:51:20,723 - #40 int
INFO  15:51:20,723 - #40 getp
INFO  15:51:20,723 - #34 (
INFO  15:51:20,723 - #40 int
INFO  15:51:20,723 - #40 idx
INFO  15:51:20,723 - #35 )
INFO  15:51:20,724 - #38 {
INFO  15:51:20,724 - #3 return
INFO  15:51:20,724 - #40 pos
INFO  15:51:20,724 - #36 [
INFO  15:51:20,724 - #40 idx
INFO  15:51:20,724 - #37 ]
INFO  15:51:20,724 - #31 ;
INFO  15:51:20,724 - #39 }
INFO  15:51:20,725 - #40 int
INFO  15:51:20,725 - #40 getn
INFO  15:51:20,725 - #34 (
INFO  15:51:20,725 - #40 int
INFO  15:51:20,725 - #40 idx
INFO  15:51:20,725 - #35 )
INFO  15:51:20,725 - #38 {
INFO  15:51:20,725 - #3 return
INFO  15:51:20,725 - #40 neg
INFO  15:51:20,725 - #36 [
INFO  15:51:20,725 - #40 idx
INFO  15:51:20,726 - #37 ]
INFO  15:51:20,726 - #31 ;
INFO  15:51:20,726 - #39 }
INFO  15:51:20,726 - #39 }
INFO  15:51:20,726 - #39 }
INFO  15:51:20,726 - #40 Table
INFO  15:51:20,726 - #40 val
INFO  15:51:20,729 - #31 ;
INFO  15:51:20,729 - #38 {
INFO  15:51:20,729 - #4 void
INFO  15:51:20,730 - #40 main
INFO  15:51:20,730 - #34 (
INFO  15:51:20,730 - #35 )
INFO  15:51:20,730 - #40 int
INFO  15:51:20,730 - #40 x
INFO  15:51:20,730 - #32 ,
INFO  15:51:20,730 - #40 i
INFO  15:51:20,731 - #31 ;
INFO  15:51:20,731 - #38 {
INFO  15:51:20,731 - #40 val
INFO  15:51:20,732 - #28 =
INFO  15:51:20,732 - #9 new
INFO  15:51:20,732 - #40 Table
INFO  15:51:20,732 - #31 ;
INFO  15:51:20,732 - #40 val
INFO  15:51:20,732 - #33 .
INFO  15:51:20,733 - #40 pos
INFO  15:51:20,733 - #28 =
INFO  15:51:20,733 - #9 new
INFO  15:51:20,733 - #40 int
INFO  15:51:20,733 - #36 [
INFO  15:51:20,733 - #40 size
INFO  15:51:20,733 - #37 ]
INFO  15:51:20,733 - #31 ;
INFO  15:51:20,733 - #40 val
INFO  15:51:20,733 - #33 .
INFO  15:51:20,734 - #40 neg
INFO  15:51:20,734 - #28 =
INFO  15:51:20,739 - #9 new
INFO  15:51:20,740 - #40 int
INFO  15:51:20,740 - #36 [
INFO  15:51:20,740 - #40 size
INFO  15:51:20,740 - #37 ]
INFO  15:51:20,741 - #31 ;
INFO  15:51:20,744 - #40 i
INFO  15:51:20,744 - #28 =
INFO  15:51:20,744 - #42 0
INFO  15:51:20,744 - #31 ;
INFO  15:51:20,744 - #11 do
INFO  15:51:20,744 - #38 {
INFO  15:51:20,744 - #40 val
INFO  15:51:20,744 - #33 .
INFO  15:51:20,744 - #40 putp
INFO  15:51:20,745 - #34 (
INFO  15:51:20,745 - #42 0
INFO  15:51:20,745 - #32 ,
INFO  15:51:20,745 - #40 i
INFO  15:51:20,745 - #35 )
INFO  15:51:20,745 - #31 ;
INFO  15:51:20,745 - #40 val
INFO  15:51:20,745 - #33 .
INFO  15:51:20,745 - #40 putn
INFO  15:51:20,745 - #34 (
INFO  15:51:20,745 - #42 0
INFO  15:51:20,745 - #32 ,
INFO  15:51:20,745 - #40 i
INFO  15:51:20,745 - #35 )
INFO  15:51:20,745 - #31 ;
INFO  15:51:20,745 - #40 i
INFO  15:51:20,745 - #29 ++
INFO  15:51:20,745 - #31 ;
INFO  15:51:20,745 - #39 }
INFO  15:51:20,745 - #12 while
INFO  15:51:20,746 - #34 (
INFO  15:51:20,746 - #40 i
INFO  15:51:20,746 - #24 <
INFO  15:51:20,746 - #40 size
INFO  15:51:20,746 - #35 )
INFO  15:51:20,746 - #31 ;
INFO  15:51:20,746 - #10 read
INFO  15:51:20,746 - #34 (
INFO  15:51:20,746 - #40 x
INFO  15:51:20,746 - #35 )
INFO  15:51:20,747 - #31 ;
INFO  15:51:20,747 - #11 do
INFO  15:51:20,747 - #38 {
INFO  15:51:20,747 - #5 if
INFO  15:51:20,747 - #34 (
INFO  15:51:20,747 - #40 x
INFO  15:51:20,748 - #23 >=
INFO  15:51:20,748 - #40 size
INFO  15:51:20,748 - #35 )
INFO  15:51:20,748 - #7 break
INFO  15:51:20,748 - #31 ;
INFO  15:51:20,748 - #5 if
INFO  15:51:20,748 - #34 (
INFO  15:51:20,748 - #42 0
INFO  15:51:20,748 - #25 <=
INFO  15:51:20,748 - #40 x
INFO  15:51:20,748 - #26 &&
INFO  15:51:20,748 - #40 x
INFO  15:51:20,748 - #24 <
INFO  15:51:20,748 - #40 size
INFO  15:51:20,749 - #35 )
INFO  15:51:20,749 - #38 {
INFO  15:51:20,749 - #40 val
INFO  15:51:20,750 - #33 .
INFO  15:51:20,750 - #40 putp
INFO  15:51:20,750 - #34 (
INFO  15:51:20,750 - #40 val
INFO  15:51:20,750 - #33 .
INFO  15:51:20,750 - #40 getp
INFO  15:51:20,750 - #34 (
INFO  15:51:20,750 - #40 x
INFO  15:51:20,750 - #35 )
INFO  15:51:20,750 - #15 +
INFO  15:51:20,750 - #42 1
INFO  15:51:20,750 - #35 )
INFO  15:51:20,750 - #31 ;
INFO  15:51:20,750 - #39 }
INFO  15:51:20,750 - #6 else
INFO  15:51:20,750 - #5 if
INFO  15:51:20,750 - #34 (
INFO  15:51:20,751 - #16 -
INFO  15:51:20,751 - #40 size
INFO  15:51:20,751 - #24 <
INFO  15:51:20,751 - #40 x
INFO  15:51:20,751 - #26 &&
INFO  15:51:20,751 - #40 x
INFO  15:51:20,751 - #24 <
INFO  15:51:20,751 - #42 0
INFO  15:51:20,751 - #35 )
INFO  15:51:20,751 - #38 {
INFO  15:51:20,751 - #40 val
INFO  15:51:20,751 - #33 .
INFO  15:51:20,752 - #40 putn
INFO  15:51:20,752 - #34 (
INFO  15:51:20,752 - #40 val
INFO  15:51:20,752 - #33 .
INFO  15:51:20,752 - #40 getn
INFO  15:51:20,752 - #34 (
INFO  15:51:20,752 - #16 -
INFO  15:51:20,752 - #40 x
INFO  15:51:20,752 - #35 )
INFO  15:51:20,752 - #15 +
INFO  15:51:20,752 - #42 1
INFO  15:51:20,752 - #35 )
INFO  15:51:20,752 - #31 ;
INFO  15:51:20,752 - #39 }
INFO  15:51:20,752 - #10 read
INFO  15:51:20,752 - #34 (
INFO  15:51:20,752 - #40 x
INFO  15:51:20,752 - #35 )
INFO  15:51:20,752 - #31 ;
INFO  15:51:20,752 - #39 }
INFO  15:51:20,753 - #39 }
INFO  15:51:20,753 - #12 while
INFO  15:51:20,753 - #34 (
INFO  15:51:20,753 - #40 true
INFO  15:51:20,753 - #35 )
INFO  15:51:20,753 - #31 ;
INFO  15:51:20,753 - #39 }
