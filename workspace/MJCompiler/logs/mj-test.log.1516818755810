INFO  19:27:17,890 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  19:27:17,894 - #1 program
INFO  19:27:17,894 - #40 P
INFO  19:27:17,894 - #40 const
INFO  19:27:17,894 - #40 int
INFO  19:27:17,894 - #40 size
INFO  19:27:17,894 - #28 =
INFO  19:27:17,895 - #42 10
INFO  19:27:17,895 - #31 ;
INFO  19:27:17,895 - #40 int
INFO  19:27:17,895 - #40 d
INFO  19:27:17,895 - #28 =
INFO  19:27:17,895 - #43 "gdgdsf"  +   "dsafa"
INFO  19:27:17,895 - #31 ;
INFO  19:27:17,895 - #8 class
INFO  19:27:17,895 - #40 Table
INFO  19:27:17,895 - #38 {
INFO  19:27:17,895 - #40 int
INFO  19:27:17,895 - #40 pos
INFO  19:27:17,895 - #36 [
INFO  19:27:17,895 - #37 ]
INFO  19:27:17,896 - #32 ,
INFO  19:27:17,897 - #40 neg
INFO  19:27:17,897 - #36 [
INFO  19:27:17,897 - #37 ]
INFO  19:27:17,897 - #31 ;
INFO  19:27:17,897 - #38 {
INFO  19:27:17,897 - #4 void
INFO  19:27:17,897 - #40 putp
INFO  19:27:17,897 - #34 (
INFO  19:27:17,897 - #40 int
INFO  19:27:17,897 - #40 a
INFO  19:27:17,897 - #32 ,
INFO  19:27:17,897 - #40 int
INFO  19:27:17,897 - #40 idx
INFO  19:27:17,897 - #35 )
INFO  19:27:17,897 - #38 {
INFO  19:27:17,897 - #40 this
INFO  19:27:17,897 - #33 .
INFO  19:27:17,897 - #40 pos
INFO  19:27:17,897 - #36 [
INFO  19:27:17,897 - #40 idx
INFO  19:27:17,898 - #37 ]
INFO  19:27:17,898 - #28 =
INFO  19:27:17,898 - #40 a
INFO  19:27:17,898 - #31 ;
INFO  19:27:17,898 - #39 }
INFO  19:27:17,898 - #4 void
INFO  19:27:17,898 - #40 putn
INFO  19:27:17,898 - #34 (
INFO  19:27:17,898 - #40 int
INFO  19:27:17,898 - #40 a
INFO  19:27:17,898 - #32 ,
INFO  19:27:17,898 - #40 int
INFO  19:27:17,898 - #40 idx
INFO  19:27:17,898 - #35 )
INFO  19:27:17,898 - #38 {
INFO  19:27:17,898 - #40 this
INFO  19:27:17,898 - #33 .
INFO  19:27:17,899 - #40 neg
INFO  19:27:17,899 - #36 [
INFO  19:27:17,899 - #40 idx
INFO  19:27:17,899 - #37 ]
INFO  19:27:17,899 - #28 =
INFO  19:27:17,899 - #40 a
INFO  19:27:17,899 - #31 ;
INFO  19:27:17,899 - #39 }
INFO  19:27:17,899 - #40 int
INFO  19:27:17,899 - #40 getp
INFO  19:27:17,899 - #34 (
INFO  19:27:17,899 - #40 int
INFO  19:27:17,899 - #40 idx
INFO  19:27:17,900 - #35 )
INFO  19:27:17,900 - #38 {
INFO  19:27:17,900 - #3 return
INFO  19:27:17,900 - #40 pos
INFO  19:27:17,900 - #36 [
INFO  19:27:17,900 - #40 idx
INFO  19:27:17,900 - #37 ]
INFO  19:27:17,900 - #31 ;
INFO  19:27:17,900 - #39 }
INFO  19:27:17,900 - #40 int
INFO  19:27:17,900 - #40 getn
INFO  19:27:17,900 - #34 (
INFO  19:27:17,900 - #40 int
INFO  19:27:17,900 - #40 idx
INFO  19:27:17,900 - #35 )
INFO  19:27:17,900 - #38 {
INFO  19:27:17,900 - #3 return
INFO  19:27:17,901 - #40 neg
INFO  19:27:17,901 - #36 [
INFO  19:27:17,901 - #40 idx
INFO  19:27:17,901 - #37 ]
INFO  19:27:17,901 - #31 ;
INFO  19:27:17,901 - #39 }
INFO  19:27:17,901 - #39 }
INFO  19:27:17,901 - #39 }
INFO  19:27:17,901 - #40 Table
INFO  19:27:17,901 - #40 val
INFO  19:27:17,902 - #31 ;
INFO  19:27:17,902 - #38 {
INFO  19:27:17,902 - #4 void
INFO  19:27:17,902 - #40 main
INFO  19:27:17,902 - #34 (
INFO  19:27:17,902 - #35 )
INFO  19:27:17,902 - #40 int
INFO  19:27:17,902 - #40 x
INFO  19:27:17,902 - #32 ,
INFO  19:27:17,902 - #40 i
INFO  19:27:17,902 - #31 ;
INFO  19:27:17,903 - #38 {
INFO  19:27:17,903 - #40 val
INFO  19:27:17,903 - #28 =
INFO  19:27:17,903 - #9 new
INFO  19:27:17,903 - #40 Table
INFO  19:27:17,903 - #31 ;
INFO  19:27:17,903 - #40 val
INFO  19:27:17,903 - #33 .
INFO  19:27:17,903 - #40 pos
INFO  19:27:17,903 - #28 =
INFO  19:27:17,903 - #9 new
INFO  19:27:17,903 - #40 int
INFO  19:27:17,904 - #36 [
INFO  19:27:17,904 - #40 size
INFO  19:27:17,904 - #37 ]
INFO  19:27:17,904 - #31 ;
INFO  19:27:17,904 - #40 val
INFO  19:27:17,904 - #33 .
INFO  19:27:17,904 - #40 neg
INFO  19:27:17,904 - #28 =
INFO  19:27:17,904 - #9 new
INFO  19:27:17,904 - #40 int
INFO  19:27:17,904 - #36 [
INFO  19:27:17,906 - #40 size
INFO  19:27:17,906 - #37 ]
INFO  19:27:17,907 - #31 ;
INFO  19:27:17,907 - #40 i
INFO  19:27:17,907 - #28 =
INFO  19:27:17,907 - #42 0
INFO  19:27:17,907 - #31 ;
INFO  19:27:17,907 - #11 do
INFO  19:27:17,907 - #38 {
INFO  19:27:17,907 - #40 val
INFO  19:27:17,907 - #33 .
INFO  19:27:17,907 - #40 putp
INFO  19:27:17,907 - #34 (
INFO  19:27:17,907 - #42 0
INFO  19:27:17,907 - #32 ,
INFO  19:27:17,907 - #40 i
INFO  19:27:17,907 - #35 )
INFO  19:27:17,907 - #31 ;
INFO  19:27:17,907 - #40 val
INFO  19:27:17,907 - #33 .
INFO  19:27:17,907 - #40 putn
INFO  19:27:17,907 - #34 (
INFO  19:27:17,908 - #42 0
INFO  19:27:17,908 - #32 ,
INFO  19:27:17,908 - #40 i
INFO  19:27:17,908 - #35 )
INFO  19:27:17,908 - #31 ;
INFO  19:27:17,908 - #40 i
INFO  19:27:17,908 - #29 ++
INFO  19:27:17,908 - #31 ;
INFO  19:27:17,908 - #39 }
INFO  19:27:17,908 - #12 while
INFO  19:27:17,908 - #34 (
INFO  19:27:17,908 - #40 i
INFO  19:27:17,909 - #24 <
INFO  19:27:17,909 - #40 size
INFO  19:27:17,909 - #35 )
INFO  19:27:17,909 - #31 ;
INFO  19:27:17,909 - #10 read
INFO  19:27:17,909 - #34 (
INFO  19:27:17,909 - #40 x
INFO  19:27:17,909 - #35 )
INFO  19:27:17,910 - #31 ;
INFO  19:27:17,910 - #11 do
INFO  19:27:17,910 - #38 {
INFO  19:27:17,910 - #5 if
INFO  19:27:17,910 - #34 (
INFO  19:27:17,910 - #40 x
INFO  19:27:17,910 - #23 >=
INFO  19:27:17,910 - #40 size
INFO  19:27:17,910 - #35 )
INFO  19:27:17,910 - #7 break
INFO  19:27:17,910 - #31 ;
INFO  19:27:17,910 - #5 if
INFO  19:27:17,910 - #34 (
INFO  19:27:17,910 - #42 0
INFO  19:27:17,910 - #25 <=
INFO  19:27:17,910 - #40 x
INFO  19:27:17,910 - #26 &&
INFO  19:27:17,910 - #40 x
INFO  19:27:17,911 - #24 <
INFO  19:27:17,911 - #40 size
INFO  19:27:17,911 - #35 )
INFO  19:27:17,911 - #38 {
INFO  19:27:17,911 - #40 val
INFO  19:27:17,911 - #33 .
INFO  19:27:17,911 - #40 putp
INFO  19:27:17,911 - #34 (
INFO  19:27:17,911 - #40 val
INFO  19:27:17,911 - #33 .
INFO  19:27:17,911 - #40 getp
INFO  19:27:17,911 - #34 (
INFO  19:27:17,911 - #40 x
INFO  19:27:17,911 - #35 )
INFO  19:27:17,911 - #15 +
INFO  19:27:17,911 - #42 1
INFO  19:27:17,911 - #35 )
INFO  19:27:17,911 - #31 ;
INFO  19:27:17,911 - #39 }
INFO  19:27:17,911 - #6 else
INFO  19:27:17,911 - #5 if
INFO  19:27:17,911 - #34 (
INFO  19:27:17,911 - #16 -
INFO  19:27:17,912 - #40 size
INFO  19:27:17,912 - #24 <
INFO  19:27:17,912 - #40 x
INFO  19:27:17,912 - #26 &&
INFO  19:27:17,912 - #40 x
INFO  19:27:17,912 - #24 <
INFO  19:27:17,912 - #42 0
INFO  19:27:17,912 - #35 )
INFO  19:27:17,912 - #38 {
INFO  19:27:17,912 - #40 val
INFO  19:27:17,912 - #33 .
INFO  19:27:17,912 - #40 putn
INFO  19:27:17,912 - #34 (
INFO  19:27:17,912 - #40 val
INFO  19:27:17,912 - #33 .
INFO  19:27:17,912 - #40 getn
INFO  19:27:17,912 - #34 (
INFO  19:27:17,912 - #16 -
INFO  19:27:17,912 - #40 x
INFO  19:27:17,912 - #35 )
INFO  19:27:17,912 - #15 +
INFO  19:27:17,912 - #42 1
INFO  19:27:17,913 - #35 )
INFO  19:27:17,913 - #31 ;
INFO  19:27:17,913 - #39 }
INFO  19:27:17,913 - #10 read
INFO  19:27:17,913 - #34 (
INFO  19:27:17,913 - #40 x
INFO  19:27:17,913 - #35 )
INFO  19:27:17,913 - #31 ;
INFO  19:27:17,913 - #39 }
INFO  19:27:17,913 - #39 }
INFO  19:27:17,913 - #12 while
INFO  19:27:17,913 - #34 (
INFO  19:27:17,913 - #40 true
INFO  19:27:17,913 - #35 )
INFO  19:27:17,913 - #31 ;
INFO  19:27:17,913 - #39 }
