INFO  19:32:35,813 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  19:32:35,818 - #1 program
INFO  19:32:35,818 - #40 P
INFO  19:32:35,818 - #40 const
INFO  19:32:35,818 - #40 int
INFO  19:32:35,818 - #40 size
INFO  19:32:35,818 - #28 =
INFO  19:32:35,818 - #42 10
INFO  19:32:35,818 - #31 ;
INFO  19:32:35,818 - #40 int
INFO  19:32:35,818 - #40 d
INFO  19:32:35,818 - #28 =
INFO  19:32:35,818 - #43 "gdgdsf"
INFO  19:32:35,819 - #15 +
INFO  19:32:35,819 - #43 "dsafa"
INFO  19:32:35,819 - #31 ;
INFO  19:32:35,819 - #8 class
INFO  19:32:35,819 - #40 Table
INFO  19:32:35,819 - #38 {
INFO  19:32:35,819 - #40 int
INFO  19:32:35,819 - #40 pos
INFO  19:32:35,819 - #36 [
INFO  19:32:35,819 - #37 ]
INFO  19:32:35,819 - #32 ,
INFO  19:32:35,819 - #40 neg
INFO  19:32:35,819 - #36 [
INFO  19:32:35,819 - #37 ]
INFO  19:32:35,819 - #31 ;
INFO  19:32:35,819 - #38 {
INFO  19:32:35,819 - #4 void
INFO  19:32:35,819 - #40 putp
INFO  19:32:35,819 - #34 (
INFO  19:32:35,819 - #40 int
INFO  19:32:35,819 - #40 a
INFO  19:32:35,819 - #32 ,
INFO  19:32:35,819 - #40 int
INFO  19:32:35,819 - #40 idx
INFO  19:32:35,819 - #35 )
INFO  19:32:35,819 - #38 {
INFO  19:32:35,819 - #40 this
INFO  19:32:35,819 - #33 .
INFO  19:32:35,819 - #40 pos
INFO  19:32:35,820 - #36 [
INFO  19:32:35,820 - #40 idx
INFO  19:32:35,820 - #37 ]
INFO  19:32:35,820 - #28 =
INFO  19:32:35,820 - #40 a
INFO  19:32:35,820 - #31 ;
INFO  19:32:35,820 - #39 }
INFO  19:32:35,820 - #4 void
INFO  19:32:35,820 - #40 putn
INFO  19:32:35,820 - #34 (
INFO  19:32:35,820 - #40 int
INFO  19:32:35,820 - #40 a
INFO  19:32:35,820 - #32 ,
INFO  19:32:35,820 - #40 int
INFO  19:32:35,820 - #40 idx
INFO  19:32:35,820 - #35 )
INFO  19:32:35,820 - #38 {
INFO  19:32:35,820 - #40 this
INFO  19:32:35,821 - #33 .
INFO  19:32:35,821 - #40 neg
INFO  19:32:35,821 - #36 [
INFO  19:32:35,821 - #40 idx
INFO  19:32:35,822 - #37 ]
INFO  19:32:35,822 - #28 =
INFO  19:32:35,822 - #40 a
INFO  19:32:35,822 - #31 ;
INFO  19:32:35,822 - #39 }
INFO  19:32:35,822 - #40 int
INFO  19:32:35,822 - #40 getp
INFO  19:32:35,822 - #34 (
INFO  19:32:35,822 - #40 int
INFO  19:32:35,822 - #40 idx
INFO  19:32:35,822 - #35 )
INFO  19:32:35,822 - #38 {
INFO  19:32:35,822 - #3 return
INFO  19:32:35,822 - #40 pos
INFO  19:32:35,822 - #36 [
INFO  19:32:35,822 - #40 idx
INFO  19:32:35,822 - #37 ]
INFO  19:32:35,822 - #31 ;
INFO  19:32:35,822 - #39 }
INFO  19:32:35,823 - #40 int
INFO  19:32:35,823 - #40 getn
INFO  19:32:35,823 - #34 (
INFO  19:32:35,823 - #40 int
INFO  19:32:35,823 - #40 idx
INFO  19:32:35,823 - #35 )
INFO  19:32:35,823 - #38 {
INFO  19:32:35,823 - #3 return
INFO  19:32:35,823 - #40 neg
INFO  19:32:35,823 - #36 [
INFO  19:32:35,823 - #40 idx
INFO  19:32:35,823 - #37 ]
INFO  19:32:35,823 - #31 ;
INFO  19:32:35,823 - #39 }
INFO  19:32:35,823 - #39 }
INFO  19:32:35,823 - #39 }
INFO  19:32:35,823 - #40 Table
INFO  19:32:35,824 - #40 val
INFO  19:32:35,824 - #31 ;
INFO  19:32:35,824 - #38 {
INFO  19:32:35,824 - #4 void
INFO  19:32:35,824 - #40 main
INFO  19:32:35,824 - #34 (
INFO  19:32:35,824 - #35 )
INFO  19:32:35,824 - #40 int
INFO  19:32:35,824 - #40 x
INFO  19:32:35,824 - #32 ,
INFO  19:32:35,824 - #40 i
INFO  19:32:35,824 - #31 ;
INFO  19:32:35,824 - #38 {
INFO  19:32:35,825 - #40 val
INFO  19:32:35,825 - #28 =
INFO  19:32:35,825 - #9 new
INFO  19:32:35,825 - #40 Table
INFO  19:32:35,825 - #31 ;
INFO  19:32:35,825 - #40 val
INFO  19:32:35,825 - #33 .
INFO  19:32:35,825 - #40 pos
INFO  19:32:35,825 - #28 =
INFO  19:32:35,825 - #9 new
INFO  19:32:35,825 - #40 int
INFO  19:32:35,825 - #36 [
INFO  19:32:35,825 - #40 size
INFO  19:32:35,825 - #37 ]
INFO  19:32:35,825 - #31 ;
INFO  19:32:35,826 - #40 val
INFO  19:32:35,826 - #33 .
INFO  19:32:35,826 - #40 neg
INFO  19:32:35,826 - #28 =
INFO  19:32:35,826 - #9 new
INFO  19:32:35,826 - #40 int
INFO  19:32:35,826 - #36 [
INFO  19:32:35,826 - #40 size
INFO  19:32:35,826 - #37 ]
INFO  19:32:35,826 - #31 ;
INFO  19:32:35,826 - #40 i
INFO  19:32:35,826 - #28 =
INFO  19:32:35,826 - #42 0
INFO  19:32:35,826 - #31 ;
INFO  19:32:35,827 - #11 do
INFO  19:32:35,827 - #38 {
INFO  19:32:35,827 - #40 val
INFO  19:32:35,827 - #33 .
INFO  19:32:35,827 - #40 putp
INFO  19:32:35,827 - #34 (
INFO  19:32:35,827 - #42 0
INFO  19:32:35,827 - #32 ,
INFO  19:32:35,827 - #40 i
INFO  19:32:35,827 - #35 )
INFO  19:32:35,827 - #31 ;
INFO  19:32:35,827 - #40 val
INFO  19:32:35,827 - #33 .
INFO  19:32:35,827 - #40 putn
INFO  19:32:35,828 - #34 (
INFO  19:32:35,828 - #42 0
INFO  19:32:35,828 - #32 ,
INFO  19:32:35,828 - #40 i
INFO  19:32:35,828 - #35 )
INFO  19:32:35,828 - #31 ;
INFO  19:32:35,828 - #40 i
INFO  19:32:35,828 - #29 ++
INFO  19:32:35,828 - #31 ;
INFO  19:32:35,828 - #39 }
INFO  19:32:35,828 - #12 while
INFO  19:32:35,828 - #34 (
INFO  19:32:35,829 - #40 i
INFO  19:32:35,829 - #24 <
INFO  19:32:35,829 - #40 size
INFO  19:32:35,829 - #35 )
INFO  19:32:35,829 - #31 ;
INFO  19:32:35,829 - #10 read
INFO  19:32:35,830 - #34 (
INFO  19:32:35,830 - #40 x
INFO  19:32:35,830 - #35 )
INFO  19:32:35,830 - #31 ;
INFO  19:32:35,830 - #11 do
INFO  19:32:35,830 - #38 {
INFO  19:32:35,830 - #5 if
INFO  19:32:35,830 - #34 (
INFO  19:32:35,830 - #40 x
INFO  19:32:35,830 - #23 >=
INFO  19:32:35,830 - #40 size
INFO  19:32:35,831 - #35 )
INFO  19:32:35,831 - #7 break
INFO  19:32:35,831 - #31 ;
INFO  19:32:35,831 - #5 if
INFO  19:32:35,831 - #34 (
INFO  19:32:35,831 - #42 0
INFO  19:32:35,831 - #25 <=
INFO  19:32:35,831 - #40 x
INFO  19:32:35,831 - #26 &&
INFO  19:32:35,831 - #40 x
INFO  19:32:35,831 - #24 <
INFO  19:32:35,831 - #40 size
INFO  19:32:35,833 - #35 )
INFO  19:32:35,833 - #38 {
INFO  19:32:35,833 - #40 val
INFO  19:32:35,834 - #33 .
INFO  19:32:35,834 - #40 putp
INFO  19:32:35,834 - #34 (
INFO  19:32:35,834 - #40 val
INFO  19:32:35,834 - #33 .
INFO  19:32:35,834 - #40 getp
INFO  19:32:35,834 - #34 (
INFO  19:32:35,834 - #40 x
INFO  19:32:35,834 - #35 )
INFO  19:32:35,834 - #15 +
INFO  19:32:35,834 - #42 1
INFO  19:32:35,834 - #35 )
INFO  19:32:35,834 - #31 ;
INFO  19:32:35,834 - #39 }
INFO  19:32:35,834 - #6 else
INFO  19:32:35,834 - #5 if
INFO  19:32:35,834 - #34 (
INFO  19:32:35,834 - #16 -
INFO  19:32:35,834 - #40 size
INFO  19:32:35,834 - #24 <
INFO  19:32:35,834 - #40 x
INFO  19:32:35,834 - #26 &&
INFO  19:32:35,834 - #40 x
INFO  19:32:35,834 - #24 <
INFO  19:32:35,834 - #42 0
INFO  19:32:35,834 - #35 )
INFO  19:32:35,834 - #38 {
INFO  19:32:35,834 - #40 val
INFO  19:32:35,834 - #33 .
INFO  19:32:35,834 - #40 putn
INFO  19:32:35,834 - #34 (
INFO  19:32:35,834 - #40 val
INFO  19:32:35,834 - #33 .
INFO  19:32:35,834 - #40 getn
INFO  19:32:35,834 - #34 (
INFO  19:32:35,834 - #16 -
INFO  19:32:35,834 - #40 x
INFO  19:32:35,835 - #35 )
INFO  19:32:35,835 - #15 +
INFO  19:32:35,835 - #42 1
INFO  19:32:35,835 - #35 )
INFO  19:32:35,835 - #31 ;
INFO  19:32:35,835 - #39 }
INFO  19:32:35,835 - #10 read
INFO  19:32:35,835 - #34 (
INFO  19:32:35,835 - #40 x
INFO  19:32:35,835 - #35 )
INFO  19:32:35,835 - #31 ;
INFO  19:32:35,835 - #39 }
INFO  19:32:35,835 - #39 }
INFO  19:32:35,835 - #12 while
INFO  19:32:35,835 - #34 (
INFO  19:32:35,835 - #40 true
INFO  19:32:35,835 - #35 )
INFO  19:32:35,835 - #31 ;
INFO  19:32:35,835 - #39 }
