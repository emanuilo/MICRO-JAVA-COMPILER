INFO  19:26:03,429 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  19:26:03,433 - #1 program
INFO  19:26:03,433 - #40 P
INFO  19:26:03,433 - #40 const
INFO  19:26:03,433 - #40 int
INFO  19:26:03,433 - #40 size
INFO  19:26:03,433 - #28 =
INFO  19:26:03,433 - #42 10
INFO  19:26:03,433 - #31 ;
INFO  19:26:03,433 - #40 int
INFO  19:26:03,433 - #40 d
INFO  19:26:03,433 - #28 =
INFO  19:26:03,434 - #43 "gdgdsf"  +   "dsafa"
INFO  19:26:03,434 - #31 ;
INFO  19:26:03,434 - #8 class
INFO  19:26:03,434 - #40 Table
INFO  19:26:03,434 - #38 {
INFO  19:26:03,434 - #40 int
INFO  19:26:03,434 - #40 pos
INFO  19:26:03,434 - #36 [
INFO  19:26:03,434 - #37 ]
INFO  19:26:03,434 - #32 ,
INFO  19:26:03,435 - #40 neg
INFO  19:26:03,435 - #36 [
INFO  19:26:03,435 - #37 ]
INFO  19:26:03,435 - #31 ;
INFO  19:26:03,435 - #38 {
INFO  19:26:03,435 - #4 void
INFO  19:26:03,435 - #40 putp
INFO  19:26:03,435 - #34 (
INFO  19:26:03,435 - #40 int
INFO  19:26:03,435 - #40 a
INFO  19:26:03,435 - #32 ,
INFO  19:26:03,435 - #40 int
INFO  19:26:03,435 - #40 idx
INFO  19:26:03,435 - #35 )
INFO  19:26:03,435 - #38 {
INFO  19:26:03,435 - #40 this
INFO  19:26:03,436 - #33 .
INFO  19:26:03,436 - #40 pos
INFO  19:26:03,436 - #36 [
INFO  19:26:03,436 - #40 idx
INFO  19:26:03,436 - #37 ]
INFO  19:26:03,436 - #28 =
INFO  19:26:03,436 - #40 a
INFO  19:26:03,436 - #31 ;
INFO  19:26:03,436 - #39 }
INFO  19:26:03,436 - #4 void
INFO  19:26:03,436 - #40 putn
INFO  19:26:03,436 - #34 (
INFO  19:26:03,436 - #40 int
INFO  19:26:03,436 - #40 a
INFO  19:26:03,437 - #32 ,
INFO  19:26:03,437 - #40 int
INFO  19:26:03,437 - #40 idx
INFO  19:26:03,437 - #35 )
INFO  19:26:03,437 - #38 {
INFO  19:26:03,437 - #40 this
INFO  19:26:03,437 - #33 .
INFO  19:26:03,437 - #40 neg
INFO  19:26:03,437 - #36 [
INFO  19:26:03,437 - #40 idx
INFO  19:26:03,437 - #37 ]
INFO  19:26:03,437 - #28 =
INFO  19:26:03,438 - #40 a
INFO  19:26:03,438 - #31 ;
INFO  19:26:03,438 - #39 }
INFO  19:26:03,438 - #40 int
INFO  19:26:03,438 - #40 getp
INFO  19:26:03,438 - #34 (
INFO  19:26:03,438 - #40 int
INFO  19:26:03,438 - #40 idx
INFO  19:26:03,438 - #35 )
INFO  19:26:03,438 - #38 {
INFO  19:26:03,438 - #3 return
INFO  19:26:03,438 - #40 pos
INFO  19:26:03,438 - #36 [
INFO  19:26:03,438 - #40 idx
INFO  19:26:03,438 - #37 ]
INFO  19:26:03,438 - #31 ;
INFO  19:26:03,438 - #39 }
INFO  19:26:03,439 - #40 int
INFO  19:26:03,439 - #40 getn
INFO  19:26:03,439 - #34 (
INFO  19:26:03,439 - #40 int
INFO  19:26:03,439 - #40 idx
INFO  19:26:03,439 - #35 )
INFO  19:26:03,439 - #38 {
INFO  19:26:03,439 - #3 return
INFO  19:26:03,439 - #40 neg
INFO  19:26:03,439 - #36 [
INFO  19:26:03,439 - #40 idx
INFO  19:26:03,439 - #37 ]
INFO  19:26:03,439 - #31 ;
INFO  19:26:03,439 - #39 }
INFO  19:26:03,439 - #39 }
INFO  19:26:03,440 - #39 }
INFO  19:26:03,440 - #40 Table
INFO  19:26:03,440 - #40 val
INFO  19:26:03,440 - #31 ;
INFO  19:26:03,440 - #38 {
INFO  19:26:03,440 - #4 void
INFO  19:26:03,440 - #40 main
INFO  19:26:03,440 - #34 (
INFO  19:26:03,440 - #35 )
INFO  19:26:03,440 - #40 int
INFO  19:26:03,440 - #40 x
INFO  19:26:03,440 - #32 ,
INFO  19:26:03,440 - #40 i
INFO  19:26:03,441 - #31 ;
INFO  19:26:03,441 - #38 {
INFO  19:26:03,441 - #40 val
INFO  19:26:03,441 - #28 =
INFO  19:26:03,441 - #9 new
INFO  19:26:03,441 - #40 Table
INFO  19:26:03,441 - #31 ;
INFO  19:26:03,441 - #40 val
INFO  19:26:03,441 - #33 .
INFO  19:26:03,441 - #40 pos
INFO  19:26:03,441 - #28 =
INFO  19:26:03,441 - #9 new
INFO  19:26:03,441 - #40 int
INFO  19:26:03,441 - #36 [
INFO  19:26:03,441 - #40 size
INFO  19:26:03,441 - #37 ]
INFO  19:26:03,442 - #31 ;
INFO  19:26:03,442 - #40 val
INFO  19:26:03,442 - #33 .
INFO  19:26:03,442 - #40 neg
INFO  19:26:03,442 - #28 =
INFO  19:26:03,442 - #9 new
INFO  19:26:03,442 - #40 int
INFO  19:26:03,443 - #36 [
INFO  19:26:03,445 - #40 size
INFO  19:26:03,445 - #37 ]
INFO  19:26:03,445 - #31 ;
INFO  19:26:03,445 - #40 i
INFO  19:26:03,445 - #28 =
INFO  19:26:03,445 - #42 0
INFO  19:26:03,445 - #31 ;
INFO  19:26:03,445 - #11 do
INFO  19:26:03,446 - #38 {
INFO  19:26:03,446 - #40 val
INFO  19:26:03,446 - #33 .
INFO  19:26:03,446 - #40 putp
INFO  19:26:03,446 - #34 (
INFO  19:26:03,446 - #42 0
INFO  19:26:03,446 - #32 ,
INFO  19:26:03,446 - #40 i
INFO  19:26:03,446 - #35 )
INFO  19:26:03,446 - #31 ;
INFO  19:26:03,446 - #40 val
INFO  19:26:03,446 - #33 .
INFO  19:26:03,446 - #40 putn
INFO  19:26:03,446 - #34 (
INFO  19:26:03,446 - #42 0
INFO  19:26:03,446 - #32 ,
INFO  19:26:03,447 - #40 i
INFO  19:26:03,447 - #35 )
INFO  19:26:03,447 - #31 ;
INFO  19:26:03,447 - #40 i
INFO  19:26:03,447 - #29 ++
INFO  19:26:03,447 - #31 ;
INFO  19:26:03,447 - #39 }
INFO  19:26:03,447 - #12 while
INFO  19:26:03,447 - #34 (
INFO  19:26:03,447 - #40 i
INFO  19:26:03,447 - #24 <
INFO  19:26:03,447 - #40 size
INFO  19:26:03,447 - #35 )
INFO  19:26:03,448 - #31 ;
INFO  19:26:03,448 - #10 read
INFO  19:26:03,448 - #34 (
INFO  19:26:03,448 - #40 x
INFO  19:26:03,448 - #35 )
INFO  19:26:03,448 - #31 ;
INFO  19:26:03,448 - #11 do
INFO  19:26:03,448 - #38 {
INFO  19:26:03,448 - #5 if
INFO  19:26:03,448 - #34 (
INFO  19:26:03,448 - #40 x
INFO  19:26:03,448 - #23 >=
INFO  19:26:03,448 - #40 size
INFO  19:26:03,448 - #35 )
INFO  19:26:03,448 - #7 break
INFO  19:26:03,448 - #31 ;
INFO  19:26:03,449 - #5 if
INFO  19:26:03,449 - #34 (
INFO  19:26:03,449 - #42 0
INFO  19:26:03,449 - #25 <=
INFO  19:26:03,449 - #40 x
INFO  19:26:03,449 - #26 &&
INFO  19:26:03,449 - #40 x
INFO  19:26:03,449 - #24 <
INFO  19:26:03,449 - #40 size
INFO  19:26:03,449 - #35 )
INFO  19:26:03,449 - #38 {
INFO  19:26:03,449 - #40 val
INFO  19:26:03,449 - #33 .
INFO  19:26:03,449 - #40 putp
INFO  19:26:03,449 - #34 (
INFO  19:26:03,449 - #40 val
INFO  19:26:03,449 - #33 .
INFO  19:26:03,449 - #40 getp
INFO  19:26:03,449 - #34 (
INFO  19:26:03,449 - #40 x
INFO  19:26:03,449 - #35 )
INFO  19:26:03,449 - #15 +
INFO  19:26:03,449 - #42 1
INFO  19:26:03,450 - #35 )
INFO  19:26:03,450 - #31 ;
INFO  19:26:03,450 - #39 }
INFO  19:26:03,450 - #6 else
INFO  19:26:03,450 - #5 if
INFO  19:26:03,450 - #34 (
INFO  19:26:03,450 - #16 -
INFO  19:26:03,450 - #40 size
INFO  19:26:03,450 - #24 <
INFO  19:26:03,450 - #40 x
INFO  19:26:03,450 - #26 &&
INFO  19:26:03,450 - #40 x
INFO  19:26:03,450 - #24 <
INFO  19:26:03,450 - #42 0
INFO  19:26:03,450 - #35 )
INFO  19:26:03,450 - #38 {
INFO  19:26:03,450 - #40 val
INFO  19:26:03,450 - #33 .
INFO  19:26:03,450 - #40 putn
INFO  19:26:03,450 - #34 (
INFO  19:26:03,450 - #40 val
INFO  19:26:03,450 - #33 .
INFO  19:26:03,450 - #40 getn
INFO  19:26:03,450 - #34 (
INFO  19:26:03,450 - #16 -
INFO  19:26:03,450 - #40 x
INFO  19:26:03,450 - #35 )
INFO  19:26:03,451 - #15 +
INFO  19:26:03,451 - #42 1
INFO  19:26:03,451 - #35 )
INFO  19:26:03,451 - #31 ;
INFO  19:26:03,451 - #39 }
INFO  19:26:03,451 - #10 read
INFO  19:26:03,451 - #34 (
INFO  19:26:03,451 - #40 x
INFO  19:26:03,451 - #35 )
INFO  19:26:03,451 - #31 ;
INFO  19:26:03,451 - #39 }
INFO  19:26:03,451 - #39 }
INFO  19:26:03,451 - #12 while
INFO  19:26:03,451 - #34 (
INFO  19:26:03,451 - #40 true
INFO  19:26:03,451 - #35 )
INFO  19:26:03,451 - #31 ;
INFO  19:26:03,451 - #39 }
