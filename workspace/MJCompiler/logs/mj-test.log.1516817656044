INFO  19:12:36,073 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  19:12:36,077 - #1 program
INFO  19:12:36,077 - #40 P
INFO  19:12:36,077 - #40 const
INFO  19:12:36,077 - #40 int
INFO  19:12:36,077 - #40 size
INFO  19:12:36,078 - #28 =
INFO  19:12:36,078 - #42 10
INFO  19:12:36,078 - #31 ;
INFO  19:12:36,078 - #40 int
INFO  19:12:36,078 - #40 d
INFO  19:12:36,078 - #28 =
INFO  19:12:36,078 - #43 g
INFO  19:12:36,078 - #31 ;
INFO  19:12:36,078 - #8 class
INFO  19:12:36,078 - #40 Table
INFO  19:12:36,078 - #38 {
INFO  19:12:36,079 - #40 int
INFO  19:12:36,079 - #40 pos
INFO  19:12:36,079 - #36 [
INFO  19:12:36,079 - #37 ]
INFO  19:12:36,079 - #32 ,
INFO  19:12:36,080 - #40 neg
INFO  19:12:36,080 - #36 [
INFO  19:12:36,080 - #37 ]
INFO  19:12:36,080 - #31 ;
INFO  19:12:36,080 - #38 {
INFO  19:12:36,080 - #4 void
INFO  19:12:36,080 - #40 putp
INFO  19:12:36,080 - #34 (
INFO  19:12:36,080 - #40 int
INFO  19:12:36,080 - #40 a
INFO  19:12:36,080 - #32 ,
INFO  19:12:36,080 - #40 int
INFO  19:12:36,080 - #40 idx
INFO  19:12:36,080 - #35 )
INFO  19:12:36,080 - #38 {
INFO  19:12:36,080 - #40 this
INFO  19:12:36,080 - #33 .
INFO  19:12:36,080 - #40 pos
INFO  19:12:36,080 - #36 [
INFO  19:12:36,080 - #40 idx
INFO  19:12:36,080 - #37 ]
INFO  19:12:36,080 - #28 =
INFO  19:12:36,081 - #40 a
INFO  19:12:36,081 - #31 ;
INFO  19:12:36,081 - #39 }
INFO  19:12:36,081 - #4 void
INFO  19:12:36,081 - #40 putn
INFO  19:12:36,081 - #34 (
INFO  19:12:36,081 - #40 int
INFO  19:12:36,081 - #40 a
INFO  19:12:36,081 - #32 ,
INFO  19:12:36,081 - #40 int
INFO  19:12:36,081 - #40 idx
INFO  19:12:36,081 - #35 )
INFO  19:12:36,081 - #38 {
INFO  19:12:36,081 - #40 this
INFO  19:12:36,081 - #33 .
INFO  19:12:36,081 - #40 neg
INFO  19:12:36,081 - #36 [
INFO  19:12:36,081 - #40 idx
INFO  19:12:36,082 - #37 ]
INFO  19:12:36,082 - #28 =
INFO  19:12:36,082 - #40 a
INFO  19:12:36,082 - #31 ;
INFO  19:12:36,082 - #39 }
INFO  19:12:36,082 - #40 int
INFO  19:12:36,082 - #40 getp
INFO  19:12:36,082 - #34 (
INFO  19:12:36,082 - #40 int
INFO  19:12:36,082 - #40 idx
INFO  19:12:36,082 - #35 )
INFO  19:12:36,082 - #38 {
INFO  19:12:36,082 - #3 return
INFO  19:12:36,082 - #40 pos
INFO  19:12:36,082 - #36 [
INFO  19:12:36,082 - #40 idx
INFO  19:12:36,083 - #37 ]
INFO  19:12:36,083 - #31 ;
INFO  19:12:36,083 - #39 }
INFO  19:12:36,083 - #40 int
INFO  19:12:36,083 - #40 getn
INFO  19:12:36,083 - #34 (
INFO  19:12:36,083 - #40 int
INFO  19:12:36,083 - #40 idx
INFO  19:12:36,083 - #35 )
INFO  19:12:36,083 - #38 {
INFO  19:12:36,083 - #3 return
INFO  19:12:36,083 - #40 neg
INFO  19:12:36,083 - #36 [
INFO  19:12:36,083 - #40 idx
INFO  19:12:36,084 - #37 ]
INFO  19:12:36,084 - #31 ;
INFO  19:12:36,084 - #39 }
INFO  19:12:36,084 - #39 }
INFO  19:12:36,084 - #39 }
INFO  19:12:36,084 - #40 Table
INFO  19:12:36,084 - #40 val
INFO  19:12:36,084 - #31 ;
INFO  19:12:36,084 - #38 {
INFO  19:12:36,084 - #4 void
INFO  19:12:36,084 - #40 main
INFO  19:12:36,084 - #34 (
INFO  19:12:36,085 - #35 )
INFO  19:12:36,085 - #40 int
INFO  19:12:36,085 - #40 x
INFO  19:12:36,085 - #32 ,
INFO  19:12:36,085 - #40 i
INFO  19:12:36,085 - #31 ;
INFO  19:12:36,085 - #38 {
INFO  19:12:36,085 - #40 val
INFO  19:12:36,085 - #28 =
INFO  19:12:36,085 - #9 new
INFO  19:12:36,085 - #40 Table
INFO  19:12:36,085 - #31 ;
INFO  19:12:36,085 - #40 val
INFO  19:12:36,085 - #33 .
INFO  19:12:36,085 - #40 pos
INFO  19:12:36,085 - #28 =
INFO  19:12:36,085 - #9 new
INFO  19:12:36,085 - #40 int
INFO  19:12:36,085 - #36 [
INFO  19:12:36,086 - #40 size
INFO  19:12:36,086 - #37 ]
INFO  19:12:36,086 - #31 ;
INFO  19:12:36,086 - #40 val
INFO  19:12:36,086 - #33 .
INFO  19:12:36,086 - #40 neg
INFO  19:12:36,086 - #28 =
INFO  19:12:36,086 - #9 new
INFO  19:12:36,086 - #40 int
INFO  19:12:36,086 - #36 [
INFO  19:12:36,089 - #40 size
INFO  19:12:36,089 - #37 ]
INFO  19:12:36,089 - #31 ;
INFO  19:12:36,089 - #40 i
INFO  19:12:36,089 - #28 =
INFO  19:12:36,089 - #42 0
INFO  19:12:36,089 - #31 ;
INFO  19:12:36,089 - #11 do
INFO  19:12:36,089 - #38 {
INFO  19:12:36,089 - #40 val
INFO  19:12:36,089 - #33 .
INFO  19:12:36,089 - #40 putp
INFO  19:12:36,089 - #34 (
INFO  19:12:36,089 - #42 0
INFO  19:12:36,089 - #32 ,
INFO  19:12:36,089 - #40 i
INFO  19:12:36,089 - #35 )
INFO  19:12:36,089 - #31 ;
INFO  19:12:36,090 - #40 val
INFO  19:12:36,090 - #33 .
INFO  19:12:36,090 - #40 putn
INFO  19:12:36,090 - #34 (
INFO  19:12:36,090 - #42 0
INFO  19:12:36,090 - #32 ,
INFO  19:12:36,090 - #40 i
INFO  19:12:36,090 - #35 )
INFO  19:12:36,090 - #31 ;
INFO  19:12:36,090 - #40 i
INFO  19:12:36,090 - #29 ++
INFO  19:12:36,090 - #31 ;
INFO  19:12:36,090 - #39 }
INFO  19:12:36,091 - #12 while
INFO  19:12:36,091 - #34 (
INFO  19:12:36,091 - #40 i
INFO  19:12:36,091 - #24 <
INFO  19:12:36,091 - #40 size
INFO  19:12:36,091 - #35 )
INFO  19:12:36,091 - #31 ;
INFO  19:12:36,091 - #10 read
INFO  19:12:36,091 - #34 (
INFO  19:12:36,091 - #40 x
INFO  19:12:36,091 - #35 )
INFO  19:12:36,091 - #31 ;
INFO  19:12:36,091 - #11 do
INFO  19:12:36,092 - #38 {
INFO  19:12:36,092 - #5 if
INFO  19:12:36,092 - #34 (
INFO  19:12:36,092 - #40 x
INFO  19:12:36,092 - #23 >=
INFO  19:12:36,092 - #40 size
INFO  19:12:36,092 - #35 )
INFO  19:12:36,092 - #7 break
INFO  19:12:36,092 - #31 ;
INFO  19:12:36,092 - #5 if
INFO  19:12:36,092 - #34 (
INFO  19:12:36,092 - #42 0
INFO  19:12:36,092 - #25 <=
INFO  19:12:36,092 - #40 x
INFO  19:12:36,092 - #26 &&
INFO  19:12:36,092 - #40 x
INFO  19:12:36,092 - #24 <
INFO  19:12:36,092 - #40 size
INFO  19:12:36,092 - #35 )
INFO  19:12:36,092 - #38 {
INFO  19:12:36,093 - #40 val
INFO  19:12:36,093 - #33 .
INFO  19:12:36,093 - #40 putp
INFO  19:12:36,093 - #34 (
INFO  19:12:36,093 - #40 val
INFO  19:12:36,093 - #33 .
INFO  19:12:36,093 - #40 getp
INFO  19:12:36,093 - #34 (
INFO  19:12:36,093 - #40 x
INFO  19:12:36,093 - #35 )
INFO  19:12:36,093 - #15 +
INFO  19:12:36,093 - #42 1
INFO  19:12:36,093 - #35 )
INFO  19:12:36,093 - #31 ;
INFO  19:12:36,093 - #39 }
INFO  19:12:36,093 - #6 else
INFO  19:12:36,093 - #5 if
INFO  19:12:36,093 - #34 (
INFO  19:12:36,093 - #16 -
INFO  19:12:36,093 - #40 size
INFO  19:12:36,093 - #24 <
INFO  19:12:36,094 - #40 x
INFO  19:12:36,094 - #26 &&
INFO  19:12:36,094 - #40 x
INFO  19:12:36,094 - #24 <
INFO  19:12:36,094 - #42 0
INFO  19:12:36,094 - #35 )
INFO  19:12:36,094 - #38 {
INFO  19:12:36,094 - #40 val
INFO  19:12:36,094 - #33 .
INFO  19:12:36,094 - #40 putn
INFO  19:12:36,094 - #34 (
INFO  19:12:36,094 - #40 val
INFO  19:12:36,094 - #33 .
INFO  19:12:36,094 - #40 getn
INFO  19:12:36,094 - #34 (
INFO  19:12:36,094 - #16 -
INFO  19:12:36,094 - #40 x
INFO  19:12:36,094 - #35 )
INFO  19:12:36,094 - #15 +
INFO  19:12:36,094 - #42 1
INFO  19:12:36,094 - #35 )
INFO  19:12:36,094 - #31 ;
INFO  19:12:36,094 - #39 }
INFO  19:12:36,094 - #10 read
INFO  19:12:36,094 - #34 (
INFO  19:12:36,094 - #40 x
INFO  19:12:36,094 - #35 )
INFO  19:12:36,094 - #31 ;
INFO  19:12:36,094 - #39 }
INFO  19:12:36,095 - #39 }
INFO  19:12:36,095 - #12 while
INFO  19:12:36,095 - #34 (
INFO  19:12:36,095 - #40 true
INFO  19:12:36,095 - #35 )
INFO  19:12:36,095 - #31 ;
INFO  19:12:36,095 - #39 }
