INFO  15:56:19,414 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  15:56:19,419 - #1 program
INFO  15:56:19,419 - #40 P
INFO  15:56:19,419 - #40 const
INFO  15:56:19,419 - #40 int
INFO  15:56:19,419 - #40 size
INFO  15:56:19,419 - #28 =
INFO  15:56:19,419 - #42 10
INFO  15:56:19,419 - #31 ;
INFO  15:56:19,419 - #43 "
INFO  15:56:19,420 - #40 g
INFO  15:56:19,420 - #43 "
INFO  15:56:19,420 - #8 class
INFO  15:56:19,420 - #40 Table
INFO  15:56:19,420 - #38 {
INFO  15:56:19,420 - #40 int
INFO  15:56:19,420 - #40 pos
INFO  15:56:19,420 - #36 [
INFO  15:56:19,420 - #37 ]
INFO  15:56:19,420 - #32 ,
INFO  15:56:19,420 - #40 neg
INFO  15:56:19,420 - #36 [
INFO  15:56:19,421 - #37 ]
INFO  15:56:19,421 - #31 ;
INFO  15:56:19,421 - #38 {
INFO  15:56:19,421 - #4 void
INFO  15:56:19,421 - #40 putp
INFO  15:56:19,421 - #34 (
INFO  15:56:19,421 - #40 int
INFO  15:56:19,421 - #40 a
INFO  15:56:19,421 - #32 ,
INFO  15:56:19,421 - #40 int
INFO  15:56:19,421 - #40 idx
INFO  15:56:19,421 - #35 )
INFO  15:56:19,421 - #38 {
INFO  15:56:19,421 - #40 this
INFO  15:56:19,421 - #33 .
INFO  15:56:19,421 - #40 pos
INFO  15:56:19,421 - #36 [
INFO  15:56:19,421 - #40 idx
INFO  15:56:19,421 - #37 ]
INFO  15:56:19,421 - #28 =
INFO  15:56:19,421 - #40 a
INFO  15:56:19,421 - #31 ;
INFO  15:56:19,421 - #39 }
INFO  15:56:19,422 - #4 void
INFO  15:56:19,422 - #40 putn
INFO  15:56:19,422 - #34 (
INFO  15:56:19,422 - #40 int
INFO  15:56:19,422 - #40 a
INFO  15:56:19,422 - #32 ,
INFO  15:56:19,422 - #40 int
INFO  15:56:19,422 - #40 idx
INFO  15:56:19,422 - #35 )
INFO  15:56:19,422 - #38 {
INFO  15:56:19,422 - #40 this
INFO  15:56:19,422 - #33 .
INFO  15:56:19,422 - #40 neg
INFO  15:56:19,422 - #36 [
INFO  15:56:19,422 - #40 idx
INFO  15:56:19,422 - #37 ]
INFO  15:56:19,422 - #28 =
INFO  15:56:19,423 - #40 a
INFO  15:56:19,423 - #31 ;
INFO  15:56:19,423 - #39 }
INFO  15:56:19,423 - #40 int
INFO  15:56:19,423 - #40 getp
INFO  15:56:19,423 - #34 (
INFO  15:56:19,423 - #40 int
INFO  15:56:19,423 - #40 idx
INFO  15:56:19,423 - #35 )
INFO  15:56:19,423 - #38 {
INFO  15:56:19,423 - #3 return
INFO  15:56:19,423 - #40 pos
INFO  15:56:19,423 - #36 [
INFO  15:56:19,423 - #40 idx
INFO  15:56:19,423 - #37 ]
INFO  15:56:19,423 - #31 ;
INFO  15:56:19,423 - #39 }
INFO  15:56:19,423 - #40 int
INFO  15:56:19,423 - #40 getn
INFO  15:56:19,423 - #34 (
INFO  15:56:19,423 - #40 int
INFO  15:56:19,423 - #40 idx
INFO  15:56:19,423 - #35 )
INFO  15:56:19,424 - #38 {
INFO  15:56:19,424 - #3 return
INFO  15:56:19,424 - #40 neg
INFO  15:56:19,424 - #36 [
INFO  15:56:19,424 - #40 idx
INFO  15:56:19,424 - #37 ]
INFO  15:56:19,424 - #31 ;
INFO  15:56:19,424 - #39 }
INFO  15:56:19,424 - #39 }
INFO  15:56:19,424 - #39 }
INFO  15:56:19,424 - #40 Table
INFO  15:56:19,424 - #40 val
INFO  15:56:19,424 - #31 ;
INFO  15:56:19,424 - #38 {
INFO  15:56:19,425 - #4 void
INFO  15:56:19,425 - #40 main
INFO  15:56:19,425 - #34 (
INFO  15:56:19,425 - #35 )
INFO  15:56:19,425 - #40 int
INFO  15:56:19,425 - #40 x
INFO  15:56:19,425 - #32 ,
INFO  15:56:19,425 - #40 i
INFO  15:56:19,425 - #31 ;
INFO  15:56:19,425 - #38 {
INFO  15:56:19,425 - #40 val
INFO  15:56:19,425 - #28 =
INFO  15:56:19,426 - #9 new
INFO  15:56:19,426 - #40 Table
INFO  15:56:19,426 - #31 ;
INFO  15:56:19,426 - #40 val
INFO  15:56:19,426 - #33 .
INFO  15:56:19,426 - #40 pos
INFO  15:56:19,426 - #28 =
INFO  15:56:19,426 - #9 new
INFO  15:56:19,426 - #40 int
INFO  15:56:19,426 - #36 [
INFO  15:56:19,426 - #40 size
INFO  15:56:19,426 - #37 ]
INFO  15:56:19,426 - #31 ;
INFO  15:56:19,426 - #40 val
INFO  15:56:19,426 - #33 .
INFO  15:56:19,426 - #40 neg
INFO  15:56:19,427 - #28 =
INFO  15:56:19,427 - #9 new
INFO  15:56:19,427 - #40 int
INFO  15:56:19,427 - #36 [
INFO  15:56:19,427 - #40 size
INFO  15:56:19,427 - #37 ]
INFO  15:56:19,427 - #31 ;
INFO  15:56:19,427 - #40 i
INFO  15:56:19,427 - #28 =
INFO  15:56:19,427 - #42 0
INFO  15:56:19,427 - #31 ;
INFO  15:56:19,427 - #11 do
INFO  15:56:19,427 - #38 {
INFO  15:56:19,427 - #40 val
INFO  15:56:19,427 - #33 .
INFO  15:56:19,428 - #40 putp
INFO  15:56:19,428 - #34 (
INFO  15:56:19,428 - #42 0
INFO  15:56:19,428 - #32 ,
INFO  15:56:19,428 - #40 i
INFO  15:56:19,428 - #35 )
INFO  15:56:19,428 - #31 ;
INFO  15:56:19,428 - #40 val
INFO  15:56:19,428 - #33 .
INFO  15:56:19,428 - #40 putn
INFO  15:56:19,428 - #34 (
INFO  15:56:19,429 - #42 0
INFO  15:56:19,429 - #32 ,
INFO  15:56:19,429 - #40 i
INFO  15:56:19,429 - #35 )
INFO  15:56:19,429 - #31 ;
INFO  15:56:19,429 - #40 i
INFO  15:56:19,429 - #29 ++
INFO  15:56:19,429 - #31 ;
INFO  15:56:19,430 - #39 }
INFO  15:56:19,430 - #12 while
INFO  15:56:19,430 - #34 (
INFO  15:56:19,430 - #40 i
INFO  15:56:19,431 - #24 <
INFO  15:56:19,431 - #40 size
INFO  15:56:19,431 - #35 )
INFO  15:56:19,431 - #31 ;
INFO  15:56:19,431 - #10 read
INFO  15:56:19,431 - #34 (
INFO  15:56:19,431 - #40 x
INFO  15:56:19,431 - #35 )
INFO  15:56:19,431 - #31 ;
INFO  15:56:19,431 - #11 do
INFO  15:56:19,431 - #38 {
INFO  15:56:19,431 - #5 if
INFO  15:56:19,432 - #34 (
INFO  15:56:19,432 - #40 x
INFO  15:56:19,432 - #23 >=
INFO  15:56:19,432 - #40 size
INFO  15:56:19,432 - #35 )
INFO  15:56:19,432 - #7 break
INFO  15:56:19,432 - #31 ;
INFO  15:56:19,432 - #5 if
INFO  15:56:19,432 - #34 (
INFO  15:56:19,432 - #42 0
INFO  15:56:19,432 - #25 <=
INFO  15:56:19,432 - #40 x
INFO  15:56:19,432 - #26 &&
INFO  15:56:19,432 - #40 x
INFO  15:56:19,433 - #24 <
INFO  15:56:19,433 - #40 size
INFO  15:56:19,433 - #35 )
INFO  15:56:19,433 - #38 {
INFO  15:56:19,433 - #40 val
INFO  15:56:19,433 - #33 .
INFO  15:56:19,434 - #40 putp
INFO  15:56:19,434 - #34 (
INFO  15:56:19,434 - #40 val
INFO  15:56:19,434 - #33 .
INFO  15:56:19,434 - #40 getp
INFO  15:56:19,435 - #34 (
INFO  15:56:19,435 - #40 x
INFO  15:56:19,435 - #35 )
INFO  15:56:19,435 - #15 +
INFO  15:56:19,435 - #42 1
INFO  15:56:19,435 - #35 )
INFO  15:56:19,435 - #31 ;
INFO  15:56:19,435 - #39 }
INFO  15:56:19,435 - #6 else
INFO  15:56:19,435 - #5 if
INFO  15:56:19,435 - #34 (
INFO  15:56:19,435 - #16 -
INFO  15:56:19,435 - #40 size
INFO  15:56:19,435 - #24 <
INFO  15:56:19,435 - #40 x
INFO  15:56:19,435 - #26 &&
INFO  15:56:19,435 - #40 x
INFO  15:56:19,435 - #24 <
INFO  15:56:19,435 - #42 0
INFO  15:56:19,435 - #35 )
INFO  15:56:19,435 - #38 {
INFO  15:56:19,435 - #40 val
INFO  15:56:19,435 - #33 .
INFO  15:56:19,435 - #40 putn
INFO  15:56:19,435 - #34 (
INFO  15:56:19,435 - #40 val
INFO  15:56:19,435 - #33 .
INFO  15:56:19,435 - #40 getn
INFO  15:56:19,435 - #34 (
INFO  15:56:19,435 - #16 -
INFO  15:56:19,435 - #40 x
INFO  15:56:19,435 - #35 )
INFO  15:56:19,436 - #15 +
INFO  15:56:19,436 - #42 1
INFO  15:56:19,436 - #35 )
INFO  15:56:19,436 - #31 ;
INFO  15:56:19,436 - #39 }
INFO  15:56:19,436 - #10 read
INFO  15:56:19,436 - #34 (
INFO  15:56:19,436 - #40 x
INFO  15:56:19,436 - #35 )
INFO  15:56:19,436 - #31 ;
INFO  15:56:19,436 - #39 }
INFO  15:56:19,436 - #39 }
INFO  15:56:19,436 - #12 while
INFO  15:56:19,436 - #34 (
INFO  15:56:19,436 - #40 true
INFO  15:56:19,436 - #35 )
INFO  15:56:19,436 - #31 ;
INFO  15:56:19,436 - #39 }
