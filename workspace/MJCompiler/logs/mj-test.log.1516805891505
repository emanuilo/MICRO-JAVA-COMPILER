INFO  15:57:08,983 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  15:57:08,987 - #1 program
INFO  15:57:08,987 - #40 P
INFO  15:57:08,987 - #40 const
INFO  15:57:08,988 - #40 int
INFO  15:57:08,988 - #40 size
INFO  15:57:08,988 - #28 =
INFO  15:57:08,988 - #42 10
INFO  15:57:08,988 - #31 ;
INFO  15:57:08,988 - #43 "
INFO  15:57:08,988 - #40 g
INFO  15:57:08,988 - #43 "
INFO  15:57:08,988 - #8 class
INFO  15:57:08,988 - #40 Table
INFO  15:57:08,988 - #38 {
INFO  15:57:08,988 - #40 int
INFO  15:57:08,988 - #40 pos
INFO  15:57:08,988 - #36 [
INFO  15:57:08,989 - #37 ]
INFO  15:57:08,989 - #32 ,
INFO  15:57:08,989 - #40 neg
INFO  15:57:08,989 - #36 [
INFO  15:57:08,989 - #37 ]
INFO  15:57:08,989 - #31 ;
INFO  15:57:08,989 - #38 {
INFO  15:57:08,989 - #4 void
INFO  15:57:08,989 - #40 putp
INFO  15:57:08,989 - #34 (
INFO  15:57:08,990 - #40 int
INFO  15:57:08,990 - #40 a
INFO  15:57:08,990 - #32 ,
INFO  15:57:08,990 - #40 int
INFO  15:57:08,990 - #40 idx
INFO  15:57:08,990 - #35 )
INFO  15:57:08,990 - #38 {
INFO  15:57:08,990 - #40 this
INFO  15:57:08,990 - #33 .
INFO  15:57:08,990 - #40 pos
INFO  15:57:08,990 - #36 [
INFO  15:57:08,990 - #40 idx
INFO  15:57:08,990 - #37 ]
INFO  15:57:08,990 - #28 =
INFO  15:57:08,990 - #40 a
INFO  15:57:08,990 - #31 ;
INFO  15:57:08,990 - #39 }
INFO  15:57:08,990 - #4 void
INFO  15:57:08,990 - #40 putn
INFO  15:57:08,990 - #34 (
INFO  15:57:08,990 - #40 int
INFO  15:57:08,990 - #40 a
INFO  15:57:08,990 - #32 ,
INFO  15:57:08,990 - #40 int
INFO  15:57:08,990 - #40 idx
INFO  15:57:08,990 - #35 )
INFO  15:57:08,990 - #38 {
INFO  15:57:08,990 - #40 this
INFO  15:57:08,990 - #33 .
INFO  15:57:08,990 - #40 neg
INFO  15:57:08,990 - #36 [
INFO  15:57:08,990 - #40 idx
INFO  15:57:08,992 - #37 ]
INFO  15:57:08,992 - #28 =
INFO  15:57:08,992 - #40 a
INFO  15:57:08,992 - #31 ;
INFO  15:57:08,992 - #39 }
INFO  15:57:08,992 - #40 int
INFO  15:57:08,992 - #40 getp
INFO  15:57:08,992 - #34 (
INFO  15:57:08,992 - #40 int
INFO  15:57:08,992 - #40 idx
INFO  15:57:08,992 - #35 )
INFO  15:57:08,992 - #38 {
INFO  15:57:08,992 - #3 return
INFO  15:57:08,992 - #40 pos
INFO  15:57:08,992 - #36 [
INFO  15:57:08,992 - #40 idx
INFO  15:57:08,992 - #37 ]
INFO  15:57:08,993 - #31 ;
INFO  15:57:08,993 - #39 }
INFO  15:57:08,993 - #40 int
INFO  15:57:08,993 - #40 getn
INFO  15:57:08,993 - #34 (
INFO  15:57:08,993 - #40 int
INFO  15:57:08,993 - #40 idx
INFO  15:57:08,993 - #35 )
INFO  15:57:08,993 - #38 {
INFO  15:57:08,993 - #3 return
INFO  15:57:08,994 - #40 neg
INFO  15:57:08,994 - #36 [
INFO  15:57:08,994 - #40 idx
INFO  15:57:08,994 - #37 ]
INFO  15:57:08,994 - #31 ;
INFO  15:57:08,994 - #39 }
INFO  15:57:08,994 - #39 }
INFO  15:57:08,994 - #39 }
INFO  15:57:08,994 - #40 Table
INFO  15:57:08,994 - #40 val
INFO  15:57:08,994 - #31 ;
INFO  15:57:08,994 - #38 {
INFO  15:57:08,995 - #4 void
INFO  15:57:08,995 - #40 main
INFO  15:57:08,995 - #34 (
INFO  15:57:08,995 - #35 )
INFO  15:57:08,995 - #40 int
INFO  15:57:08,995 - #40 x
INFO  15:57:08,995 - #32 ,
INFO  15:57:08,995 - #40 i
INFO  15:57:08,995 - #31 ;
INFO  15:57:08,995 - #38 {
INFO  15:57:08,996 - #40 val
INFO  15:57:08,996 - #28 =
INFO  15:57:08,996 - #9 new
INFO  15:57:08,996 - #40 Table
INFO  15:57:08,996 - #31 ;
INFO  15:57:08,996 - #40 val
INFO  15:57:08,996 - #33 .
INFO  15:57:08,996 - #40 pos
INFO  15:57:08,996 - #28 =
INFO  15:57:08,996 - #9 new
INFO  15:57:08,996 - #40 int
INFO  15:57:08,996 - #36 [
INFO  15:57:08,996 - #40 size
INFO  15:57:08,996 - #37 ]
INFO  15:57:08,997 - #31 ;
INFO  15:57:08,997 - #40 val
INFO  15:57:08,997 - #33 .
INFO  15:57:08,997 - #40 neg
INFO  15:57:08,997 - #28 =
INFO  15:57:08,997 - #9 new
INFO  15:57:08,997 - #40 int
INFO  15:57:08,997 - #36 [
INFO  15:57:08,997 - #40 size
INFO  15:57:08,997 - #37 ]
INFO  15:57:09,000 - #31 ;
INFO  15:57:09,000 - #40 i
INFO  15:57:09,000 - #28 =
INFO  15:57:09,000 - #42 0
INFO  15:57:09,000 - #31 ;
INFO  15:57:09,000 - #11 do
INFO  15:57:09,000 - #38 {
INFO  15:57:09,000 - #40 val
INFO  15:57:09,000 - #33 .
INFO  15:57:09,000 - #40 putp
INFO  15:57:09,001 - #34 (
INFO  15:57:09,001 - #42 0
INFO  15:57:09,001 - #32 ,
INFO  15:57:09,001 - #40 i
INFO  15:57:09,001 - #35 )
INFO  15:57:09,001 - #31 ;
INFO  15:57:09,001 - #40 val
INFO  15:57:09,001 - #33 .
INFO  15:57:09,001 - #40 putn
INFO  15:57:09,001 - #34 (
INFO  15:57:09,001 - #42 0
INFO  15:57:09,001 - #32 ,
INFO  15:57:09,001 - #40 i
INFO  15:57:09,001 - #35 )
INFO  15:57:09,001 - #31 ;
INFO  15:57:09,002 - #40 i
INFO  15:57:09,002 - #29 ++
INFO  15:57:09,002 - #31 ;
INFO  15:57:09,002 - #39 }
INFO  15:57:09,002 - #12 while
INFO  15:57:09,002 - #34 (
INFO  15:57:09,002 - #40 i
INFO  15:57:09,002 - #24 <
INFO  15:57:09,002 - #40 size
INFO  15:57:09,002 - #35 )
INFO  15:57:09,002 - #31 ;
INFO  15:57:09,002 - #10 read
INFO  15:57:09,003 - #34 (
INFO  15:57:09,003 - #40 x
INFO  15:57:09,003 - #35 )
INFO  15:57:09,003 - #31 ;
INFO  15:57:09,003 - #11 do
INFO  15:57:09,003 - #38 {
INFO  15:57:09,003 - #5 if
INFO  15:57:09,003 - #34 (
INFO  15:57:09,003 - #40 x
INFO  15:57:09,003 - #23 >=
INFO  15:57:09,003 - #40 size
INFO  15:57:09,003 - #35 )
INFO  15:57:09,003 - #7 break
INFO  15:57:09,003 - #31 ;
INFO  15:57:09,003 - #5 if
INFO  15:57:09,003 - #34 (
INFO  15:57:09,003 - #42 0
INFO  15:57:09,003 - #25 <=
INFO  15:57:09,004 - #40 x
INFO  15:57:09,004 - #26 &&
INFO  15:57:09,004 - #40 x
INFO  15:57:09,004 - #24 <
INFO  15:57:09,004 - #40 size
INFO  15:57:09,004 - #35 )
INFO  15:57:09,004 - #38 {
INFO  15:57:09,004 - #40 val
INFO  15:57:09,004 - #33 .
INFO  15:57:09,004 - #40 putp
INFO  15:57:09,004 - #34 (
INFO  15:57:09,004 - #40 val
INFO  15:57:09,004 - #33 .
INFO  15:57:09,004 - #40 getp
INFO  15:57:09,004 - #34 (
INFO  15:57:09,004 - #40 x
INFO  15:57:09,004 - #35 )
INFO  15:57:09,004 - #15 +
INFO  15:57:09,004 - #42 1
INFO  15:57:09,004 - #35 )
INFO  15:57:09,005 - #31 ;
INFO  15:57:09,005 - #39 }
INFO  15:57:09,005 - #6 else
INFO  15:57:09,005 - #5 if
INFO  15:57:09,005 - #34 (
INFO  15:57:09,005 - #16 -
INFO  15:57:09,005 - #40 size
INFO  15:57:09,005 - #24 <
INFO  15:57:09,005 - #40 x
INFO  15:57:09,005 - #26 &&
INFO  15:57:09,005 - #40 x
INFO  15:57:09,005 - #24 <
INFO  15:57:09,005 - #42 0
INFO  15:57:09,005 - #35 )
INFO  15:57:09,005 - #38 {
INFO  15:57:09,005 - #40 val
INFO  15:57:09,005 - #33 .
INFO  15:57:09,005 - #40 putn
INFO  15:57:09,005 - #34 (
INFO  15:57:09,005 - #40 val
INFO  15:57:09,005 - #33 .
INFO  15:57:09,005 - #40 getn
INFO  15:57:09,006 - #34 (
INFO  15:57:09,006 - #16 -
INFO  15:57:09,006 - #40 x
INFO  15:57:09,006 - #35 )
INFO  15:57:09,006 - #15 +
INFO  15:57:09,006 - #42 1
INFO  15:57:09,006 - #35 )
INFO  15:57:09,006 - #31 ;
INFO  15:57:09,006 - #39 }
INFO  15:57:09,006 - #10 read
INFO  15:57:09,006 - #34 (
INFO  15:57:09,006 - #40 x
INFO  15:57:09,006 - #35 )
INFO  15:57:09,006 - #31 ;
INFO  15:57:09,006 - #39 }
INFO  15:57:09,006 - #39 }
INFO  15:57:09,006 - #12 while
INFO  15:57:09,006 - #34 (
INFO  15:57:09,006 - #40 true
INFO  15:57:09,006 - #35 )
INFO  15:57:09,006 - #31 ;
INFO  15:57:09,006 - #39 }
