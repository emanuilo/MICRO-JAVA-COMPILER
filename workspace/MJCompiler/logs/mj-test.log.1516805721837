INFO  15:53:15,657 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  15:53:15,663 - #1 program
INFO  15:53:15,663 - #40 P
INFO  15:53:15,663 - #40 const
INFO  15:53:15,663 - #40 int
INFO  15:53:15,663 - #40 size
INFO  15:53:15,663 - #28 =
INFO  15:53:15,663 - #42 10
INFO  15:53:15,663 - #31 ;
INFO  15:53:15,663 - #43 "
INFO  15:53:15,663 - #42 5
INFO  15:53:15,664 - #43 "
INFO  15:53:15,664 - #8 class
INFO  15:53:15,664 - #40 Table
INFO  15:53:15,664 - #38 {
INFO  15:53:15,664 - #40 int
INFO  15:53:15,664 - #40 pos
INFO  15:53:15,664 - #36 [
INFO  15:53:15,664 - #37 ]
INFO  15:53:15,664 - #32 ,
INFO  15:53:15,664 - #40 neg
INFO  15:53:15,664 - #36 [
INFO  15:53:15,665 - #37 ]
INFO  15:53:15,665 - #31 ;
INFO  15:53:15,665 - #38 {
INFO  15:53:15,665 - #4 void
INFO  15:53:15,665 - #40 putp
INFO  15:53:15,665 - #34 (
INFO  15:53:15,665 - #40 int
INFO  15:53:15,665 - #40 a
INFO  15:53:15,665 - #32 ,
INFO  15:53:15,665 - #40 int
INFO  15:53:15,665 - #40 idx
INFO  15:53:15,666 - #35 )
INFO  15:53:15,666 - #38 {
INFO  15:53:15,666 - #40 this
INFO  15:53:15,666 - #33 .
INFO  15:53:15,666 - #40 pos
INFO  15:53:15,666 - #36 [
INFO  15:53:15,666 - #40 idx
INFO  15:53:15,666 - #37 ]
INFO  15:53:15,666 - #28 =
INFO  15:53:15,666 - #40 a
INFO  15:53:15,666 - #31 ;
INFO  15:53:15,666 - #39 }
INFO  15:53:15,666 - #4 void
INFO  15:53:15,666 - #40 putn
INFO  15:53:15,666 - #34 (
INFO  15:53:15,666 - #40 int
INFO  15:53:15,667 - #40 a
INFO  15:53:15,667 - #32 ,
INFO  15:53:15,667 - #40 int
INFO  15:53:15,667 - #40 idx
INFO  15:53:15,667 - #35 )
INFO  15:53:15,667 - #38 {
INFO  15:53:15,667 - #40 this
INFO  15:53:15,668 - #33 .
INFO  15:53:15,668 - #40 neg
INFO  15:53:15,668 - #36 [
INFO  15:53:15,668 - #40 idx
INFO  15:53:15,668 - #37 ]
INFO  15:53:15,668 - #28 =
INFO  15:53:15,668 - #40 a
INFO  15:53:15,668 - #31 ;
INFO  15:53:15,668 - #39 }
INFO  15:53:15,668 - #40 int
INFO  15:53:15,668 - #40 getp
INFO  15:53:15,668 - #34 (
INFO  15:53:15,668 - #40 int
INFO  15:53:15,669 - #40 idx
INFO  15:53:15,669 - #35 )
INFO  15:53:15,669 - #38 {
INFO  15:53:15,669 - #3 return
INFO  15:53:15,669 - #40 pos
INFO  15:53:15,669 - #36 [
INFO  15:53:15,669 - #40 idx
INFO  15:53:15,669 - #37 ]
INFO  15:53:15,669 - #31 ;
INFO  15:53:15,669 - #39 }
INFO  15:53:15,670 - #40 int
INFO  15:53:15,670 - #40 getn
INFO  15:53:15,670 - #34 (
INFO  15:53:15,670 - #40 int
INFO  15:53:15,670 - #40 idx
INFO  15:53:15,670 - #35 )
INFO  15:53:15,670 - #38 {
INFO  15:53:15,670 - #3 return
INFO  15:53:15,670 - #40 neg
INFO  15:53:15,670 - #36 [
INFO  15:53:15,670 - #40 idx
INFO  15:53:15,671 - #37 ]
INFO  15:53:15,671 - #31 ;
INFO  15:53:15,671 - #39 }
INFO  15:53:15,671 - #39 }
INFO  15:53:15,671 - #39 }
INFO  15:53:15,671 - #40 Table
INFO  15:53:15,671 - #40 val
INFO  15:53:15,671 - #31 ;
INFO  15:53:15,671 - #38 {
INFO  15:53:15,671 - #4 void
INFO  15:53:15,671 - #40 main
INFO  15:53:15,671 - #34 (
INFO  15:53:15,671 - #35 )
INFO  15:53:15,672 - #40 int
INFO  15:53:15,672 - #40 x
INFO  15:53:15,672 - #32 ,
INFO  15:53:15,672 - #40 i
INFO  15:53:15,672 - #31 ;
INFO  15:53:15,672 - #38 {
INFO  15:53:15,672 - #40 val
INFO  15:53:15,672 - #28 =
INFO  15:53:15,672 - #9 new
INFO  15:53:15,672 - #40 Table
INFO  15:53:15,672 - #31 ;
INFO  15:53:15,672 - #40 val
INFO  15:53:15,672 - #33 .
INFO  15:53:15,672 - #40 pos
INFO  15:53:15,672 - #28 =
INFO  15:53:15,672 - #9 new
INFO  15:53:15,672 - #40 int
INFO  15:53:15,673 - #36 [
INFO  15:53:15,673 - #40 size
INFO  15:53:15,673 - #37 ]
INFO  15:53:15,673 - #31 ;
INFO  15:53:15,673 - #40 val
INFO  15:53:15,673 - #33 .
INFO  15:53:15,673 - #40 neg
INFO  15:53:15,673 - #28 =
INFO  15:53:15,673 - #9 new
INFO  15:53:15,673 - #40 int
INFO  15:53:15,673 - #36 [
INFO  15:53:15,674 - #40 size
INFO  15:53:15,674 - #37 ]
INFO  15:53:15,676 - #31 ;
INFO  15:53:15,676 - #40 i
INFO  15:53:15,676 - #28 =
INFO  15:53:15,676 - #42 0
INFO  15:53:15,676 - #31 ;
INFO  15:53:15,676 - #11 do
INFO  15:53:15,676 - #38 {
INFO  15:53:15,676 - #40 val
INFO  15:53:15,676 - #33 .
INFO  15:53:15,676 - #40 putp
INFO  15:53:15,676 - #34 (
INFO  15:53:15,676 - #42 0
INFO  15:53:15,676 - #32 ,
INFO  15:53:15,676 - #40 i
INFO  15:53:15,676 - #35 )
INFO  15:53:15,676 - #31 ;
INFO  15:53:15,676 - #40 val
INFO  15:53:15,677 - #33 .
INFO  15:53:15,677 - #40 putn
INFO  15:53:15,677 - #34 (
INFO  15:53:15,677 - #42 0
INFO  15:53:15,677 - #32 ,
INFO  15:53:15,677 - #40 i
INFO  15:53:15,677 - #35 )
INFO  15:53:15,677 - #31 ;
INFO  15:53:15,678 - #40 i
INFO  15:53:15,678 - #29 ++
INFO  15:53:15,678 - #31 ;
INFO  15:53:15,678 - #39 }
INFO  15:53:15,678 - #12 while
INFO  15:53:15,678 - #34 (
INFO  15:53:15,678 - #40 i
INFO  15:53:15,678 - #24 <
INFO  15:53:15,678 - #40 size
INFO  15:53:15,678 - #35 )
INFO  15:53:15,678 - #31 ;
INFO  15:53:15,678 - #10 read
INFO  15:53:15,679 - #34 (
INFO  15:53:15,679 - #40 x
INFO  15:53:15,679 - #35 )
INFO  15:53:15,679 - #31 ;
INFO  15:53:15,679 - #11 do
INFO  15:53:15,679 - #38 {
INFO  15:53:15,679 - #5 if
INFO  15:53:15,679 - #34 (
INFO  15:53:15,679 - #40 x
INFO  15:53:15,679 - #23 >=
INFO  15:53:15,679 - #40 size
INFO  15:53:15,679 - #35 )
INFO  15:53:15,680 - #7 break
INFO  15:53:15,680 - #31 ;
INFO  15:53:15,680 - #5 if
INFO  15:53:15,680 - #34 (
INFO  15:53:15,680 - #42 0
INFO  15:53:15,680 - #25 <=
INFO  15:53:15,680 - #40 x
INFO  15:53:15,680 - #26 &&
INFO  15:53:15,680 - #40 x
INFO  15:53:15,680 - #24 <
INFO  15:53:15,680 - #40 size
INFO  15:53:15,680 - #35 )
INFO  15:53:15,680 - #38 {
INFO  15:53:15,680 - #40 val
INFO  15:53:15,680 - #33 .
INFO  15:53:15,680 - #40 putp
INFO  15:53:15,680 - #34 (
INFO  15:53:15,680 - #40 val
INFO  15:53:15,680 - #33 .
INFO  15:53:15,680 - #40 getp
INFO  15:53:15,681 - #34 (
INFO  15:53:15,681 - #40 x
INFO  15:53:15,681 - #35 )
INFO  15:53:15,681 - #15 +
INFO  15:53:15,681 - #42 1
INFO  15:53:15,681 - #35 )
INFO  15:53:15,681 - #31 ;
INFO  15:53:15,681 - #39 }
INFO  15:53:15,681 - #6 else
INFO  15:53:15,681 - #5 if
INFO  15:53:15,681 - #34 (
INFO  15:53:15,681 - #16 -
INFO  15:53:15,681 - #40 size
INFO  15:53:15,681 - #24 <
INFO  15:53:15,681 - #40 x
INFO  15:53:15,681 - #26 &&
INFO  15:53:15,681 - #40 x
INFO  15:53:15,681 - #24 <
INFO  15:53:15,681 - #42 0
INFO  15:53:15,681 - #35 )
INFO  15:53:15,681 - #38 {
INFO  15:53:15,681 - #40 val
INFO  15:53:15,682 - #33 .
INFO  15:53:15,682 - #40 putn
INFO  15:53:15,682 - #34 (
INFO  15:53:15,682 - #40 val
INFO  15:53:15,682 - #33 .
INFO  15:53:15,682 - #40 getn
INFO  15:53:15,682 - #34 (
INFO  15:53:15,682 - #16 -
INFO  15:53:15,682 - #40 x
INFO  15:53:15,682 - #35 )
INFO  15:53:15,682 - #15 +
INFO  15:53:15,682 - #42 1
INFO  15:53:15,682 - #35 )
INFO  15:53:15,682 - #31 ;
INFO  15:53:15,682 - #39 }
INFO  15:53:15,682 - #10 read
INFO  15:53:15,682 - #34 (
INFO  15:53:15,682 - #40 x
INFO  15:53:15,683 - #35 )
INFO  15:53:15,683 - #31 ;
INFO  15:53:15,683 - #39 }
INFO  15:53:15,683 - #39 }
INFO  15:53:15,683 - #12 while
INFO  15:53:15,683 - #34 (
INFO  15:53:15,683 - #40 true
INFO  15:53:15,683 - #35 )
INFO  15:53:15,683 - #31 ;
INFO  15:53:15,683 - #39 }
