INFO  15:29:20,553 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  15:29:20,556 - #1 program
INFO  15:29:20,557 - #40 P
INFO  15:29:20,557 - #40 const
INFO  15:29:20,557 - #40 int
INFO  15:29:20,557 - #40 size
INFO  15:29:20,557 - #28 =
INFO  15:29:20,557 - #42 10
INFO  15:29:20,557 - #31 ;
INFO  15:29:20,557 - #43 "
INFO  15:29:20,557 - #40 ADSF
INFO  15:29:20,557 - #43 "
INFO  15:29:20,557 - #8 class
INFO  15:29:20,557 - #40 Table
INFO  15:29:20,557 - #38 {
INFO  15:29:20,557 - #40 int
INFO  15:29:20,557 - #40 pos
INFO  15:29:20,558 - #36 [
INFO  15:29:20,558 - #37 ]
INFO  15:29:20,558 - #32 ,
INFO  15:29:20,558 - #40 neg
INFO  15:29:20,558 - #36 [
INFO  15:29:20,559 - #37 ]
INFO  15:29:20,559 - #31 ;
INFO  15:29:20,559 - #38 {
INFO  15:29:20,559 - #4 void
INFO  15:29:20,559 - #40 putp
INFO  15:29:20,559 - #34 (
INFO  15:29:20,559 - #40 int
INFO  15:29:20,559 - #40 a
INFO  15:29:20,559 - #32 ,
INFO  15:29:20,559 - #40 int
INFO  15:29:20,559 - #40 idx
INFO  15:29:20,559 - #35 )
INFO  15:29:20,559 - #38 {
INFO  15:29:20,559 - #40 this
INFO  15:29:20,559 - #33 .
INFO  15:29:20,559 - #40 pos
INFO  15:29:20,559 - #36 [
INFO  15:29:20,559 - #40 idx
INFO  15:29:20,559 - #37 ]
INFO  15:29:20,559 - #28 =
INFO  15:29:20,559 - #40 a
INFO  15:29:20,560 - #31 ;
INFO  15:29:20,560 - #39 }
INFO  15:29:20,560 - #4 void
INFO  15:29:20,560 - #40 putn
INFO  15:29:20,560 - #34 (
INFO  15:29:20,560 - #40 int
INFO  15:29:20,560 - #40 a
INFO  15:29:20,560 - #32 ,
INFO  15:29:20,560 - #40 int
INFO  15:29:20,560 - #40 idx
INFO  15:29:20,560 - #35 )
INFO  15:29:20,560 - #38 {
INFO  15:29:20,560 - #40 this
INFO  15:29:20,560 - #33 .
INFO  15:29:20,560 - #40 neg
INFO  15:29:20,560 - #36 [
INFO  15:29:20,560 - #40 idx
INFO  15:29:20,560 - #37 ]
INFO  15:29:20,560 - #28 =
INFO  15:29:20,560 - #40 a
INFO  15:29:20,560 - #31 ;
INFO  15:29:20,561 - #39 }
INFO  15:29:20,561 - #40 int
INFO  15:29:20,561 - #40 getp
INFO  15:29:20,561 - #34 (
INFO  15:29:20,561 - #40 int
INFO  15:29:20,561 - #40 idx
INFO  15:29:20,561 - #35 )
INFO  15:29:20,561 - #38 {
INFO  15:29:20,561 - #3 return
INFO  15:29:20,561 - #40 pos
INFO  15:29:20,561 - #36 [
INFO  15:29:20,561 - #40 idx
INFO  15:29:20,561 - #37 ]
INFO  15:29:20,561 - #31 ;
INFO  15:29:20,561 - #39 }
INFO  15:29:20,561 - #40 int
INFO  15:29:20,561 - #40 getn
INFO  15:29:20,561 - #34 (
INFO  15:29:20,561 - #40 int
INFO  15:29:20,561 - #40 idx
INFO  15:29:20,561 - #35 )
INFO  15:29:20,561 - #38 {
INFO  15:29:20,561 - #3 return
INFO  15:29:20,562 - #40 neg
INFO  15:29:20,562 - #36 [
INFO  15:29:20,562 - #40 idx
INFO  15:29:20,562 - #37 ]
INFO  15:29:20,562 - #31 ;
INFO  15:29:20,562 - #39 }
INFO  15:29:20,562 - #39 }
INFO  15:29:20,562 - #39 }
INFO  15:29:20,562 - #40 Table
INFO  15:29:20,562 - #40 val
INFO  15:29:20,563 - #31 ;
INFO  15:29:20,563 - #38 {
INFO  15:29:20,563 - #4 void
INFO  15:29:20,563 - #40 main
INFO  15:29:20,563 - #34 (
INFO  15:29:20,563 - #35 )
INFO  15:29:20,563 - #40 int
INFO  15:29:20,563 - #40 x
INFO  15:29:20,563 - #32 ,
INFO  15:29:20,563 - #40 i
INFO  15:29:20,564 - #31 ;
INFO  15:29:20,564 - #38 {
INFO  15:29:20,564 - #40 val
INFO  15:29:20,564 - #28 =
INFO  15:29:20,564 - #9 new
INFO  15:29:20,564 - #40 Table
INFO  15:29:20,564 - #31 ;
INFO  15:29:20,564 - #40 val
INFO  15:29:20,564 - #33 .
INFO  15:29:20,564 - #40 pos
INFO  15:29:20,564 - #28 =
INFO  15:29:20,564 - #9 new
INFO  15:29:20,564 - #40 int
INFO  15:29:20,564 - #36 [
INFO  15:29:20,564 - #40 size
INFO  15:29:20,564 - #37 ]
INFO  15:29:20,564 - #31 ;
INFO  15:29:20,565 - #40 val
INFO  15:29:20,565 - #33 .
INFO  15:29:20,565 - #40 neg
INFO  15:29:20,565 - #28 =
INFO  15:29:20,565 - #9 new
INFO  15:29:20,565 - #40 int
INFO  15:29:20,565 - #36 [
INFO  15:29:20,565 - #40 size
INFO  15:29:20,565 - #37 ]
INFO  15:29:20,567 - #31 ;
INFO  15:29:20,567 - #40 i
INFO  15:29:20,567 - #28 =
INFO  15:29:20,567 - #42 0
INFO  15:29:20,567 - #31 ;
INFO  15:29:20,567 - #11 do
INFO  15:29:20,567 - #38 {
INFO  15:29:20,568 - #40 val
INFO  15:29:20,568 - #33 .
INFO  15:29:20,568 - #40 putp
INFO  15:29:20,568 - #34 (
INFO  15:29:20,568 - #42 0
INFO  15:29:20,568 - #32 ,
INFO  15:29:20,568 - #40 i
INFO  15:29:20,568 - #35 )
INFO  15:29:20,568 - #31 ;
INFO  15:29:20,568 - #40 val
INFO  15:29:20,568 - #33 .
INFO  15:29:20,568 - #40 putn
INFO  15:29:20,568 - #34 (
INFO  15:29:20,568 - #42 0
INFO  15:29:20,568 - #32 ,
INFO  15:29:20,568 - #40 i
INFO  15:29:20,568 - #35 )
INFO  15:29:20,569 - #31 ;
INFO  15:29:20,569 - #40 i
INFO  15:29:20,569 - #29 ++
INFO  15:29:20,569 - #31 ;
INFO  15:29:20,569 - #39 }
INFO  15:29:20,569 - #12 while
INFO  15:29:20,569 - #34 (
INFO  15:29:20,569 - #40 i
INFO  15:29:20,569 - #24 <
INFO  15:29:20,569 - #40 size
INFO  15:29:20,569 - #35 )
INFO  15:29:20,570 - #31 ;
INFO  15:29:20,570 - #10 read
INFO  15:29:20,570 - #34 (
INFO  15:29:20,570 - #40 x
INFO  15:29:20,570 - #35 )
INFO  15:29:20,570 - #31 ;
INFO  15:29:20,570 - #11 do
INFO  15:29:20,570 - #38 {
INFO  15:29:20,570 - #5 if
INFO  15:29:20,570 - #34 (
INFO  15:29:20,570 - #40 x
INFO  15:29:20,570 - #23 >=
INFO  15:29:20,570 - #40 size
INFO  15:29:20,570 - #35 )
INFO  15:29:20,570 - #7 break
INFO  15:29:20,570 - #31 ;
INFO  15:29:20,570 - #5 if
INFO  15:29:20,571 - #34 (
INFO  15:29:20,571 - #42 0
INFO  15:29:20,571 - #25 <=
INFO  15:29:20,571 - #40 x
INFO  15:29:20,571 - #26 &&
INFO  15:29:20,571 - #40 x
INFO  15:29:20,571 - #24 <
INFO  15:29:20,571 - #40 size
INFO  15:29:20,571 - #35 )
INFO  15:29:20,571 - #38 {
INFO  15:29:20,571 - #40 val
INFO  15:29:20,571 - #33 .
INFO  15:29:20,571 - #40 putp
INFO  15:29:20,571 - #34 (
INFO  15:29:20,572 - #40 val
INFO  15:29:20,572 - #33 .
INFO  15:29:20,572 - #40 getp
INFO  15:29:20,572 - #34 (
INFO  15:29:20,572 - #40 x
INFO  15:29:20,572 - #35 )
INFO  15:29:20,572 - #15 +
INFO  15:29:20,572 - #42 1
INFO  15:29:20,572 - #35 )
INFO  15:29:20,572 - #31 ;
INFO  15:29:20,572 - #39 }
INFO  15:29:20,572 - #6 else
INFO  15:29:20,572 - #5 if
INFO  15:29:20,572 - #34 (
INFO  15:29:20,572 - #43 â
INFO  15:29:20,572 - #43 €
INFO  15:29:20,572 - #43 ?
INFO  15:29:20,572 - #40 size
INFO  15:29:20,572 - #24 <
INFO  15:29:20,572 - #40 x
INFO  15:29:20,572 - #26 &&
INFO  15:29:20,573 - #40 x
INFO  15:29:20,573 - #24 <
INFO  15:29:20,573 - #42 0
INFO  15:29:20,573 - #35 )
INFO  15:29:20,573 - #38 {
INFO  15:29:20,573 - #40 val
INFO  15:29:20,573 - #33 .
INFO  15:29:20,573 - #40 putn
INFO  15:29:20,573 - #34 (
INFO  15:29:20,573 - #40 val
INFO  15:29:20,573 - #33 .
INFO  15:29:20,573 - #40 getn
INFO  15:29:20,573 - #34 (
INFO  15:29:20,573 - #16 -
INFO  15:29:20,573 - #40 x
INFO  15:29:20,573 - #35 )
INFO  15:29:20,573 - #15 +
INFO  15:29:20,573 - #42 1
INFO  15:29:20,573 - #35 )
INFO  15:29:20,573 - #31 ;
INFO  15:29:20,573 - #39 }
INFO  15:29:20,574 - #10 read
INFO  15:29:20,574 - #34 (
INFO  15:29:20,574 - #40 x
INFO  15:29:20,574 - #35 )
INFO  15:29:20,574 - #31 ;
INFO  15:29:20,574 - #39 }
INFO  15:29:20,574 - #39 }
INFO  15:29:20,574 - #12 while
INFO  15:29:20,574 - #34 (
INFO  15:29:20,574 - #40 true
INFO  15:29:20,574 - #35 )
INFO  15:29:20,574 - #31 ;
INFO  15:29:20,574 - #39 }
