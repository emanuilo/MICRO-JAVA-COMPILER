INFO  19:25:10,956 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  19:25:10,960 - #1 program
INFO  19:25:10,960 - #40 P
INFO  19:25:10,960 - #40 const
INFO  19:25:10,960 - #40 int
INFO  19:25:10,960 - #40 size
INFO  19:25:10,960 - #28 =
INFO  19:25:10,960 - #42 10
INFO  19:25:10,960 - #31 ;
INFO  19:25:10,960 - #40 int
INFO  19:25:10,960 - #40 d
INFO  19:25:10,961 - #28 =
INFO  19:25:10,961 - #43 "g"
INFO  19:25:10,961 - #31 ;
INFO  19:25:10,961 - #8 class
INFO  19:25:10,961 - #40 Table
INFO  19:25:10,961 - #38 {
INFO  19:25:10,961 - #40 int
INFO  19:25:10,961 - #40 pos
INFO  19:25:10,961 - #36 [
INFO  19:25:10,961 - #37 ]
INFO  19:25:10,961 - #32 ,
INFO  19:25:10,962 - #40 neg
INFO  19:25:10,962 - #36 [
INFO  19:25:10,962 - #37 ]
INFO  19:25:10,962 - #31 ;
INFO  19:25:10,962 - #38 {
INFO  19:25:10,962 - #4 void
INFO  19:25:10,962 - #40 putp
INFO  19:25:10,962 - #34 (
INFO  19:25:10,962 - #40 int
INFO  19:25:10,962 - #40 a
INFO  19:25:10,962 - #32 ,
INFO  19:25:10,962 - #40 int
INFO  19:25:10,962 - #40 idx
INFO  19:25:10,962 - #35 )
INFO  19:25:10,962 - #38 {
INFO  19:25:10,962 - #40 this
INFO  19:25:10,962 - #33 .
INFO  19:25:10,962 - #40 pos
INFO  19:25:10,962 - #36 [
INFO  19:25:10,962 - #40 idx
INFO  19:25:10,962 - #37 ]
INFO  19:25:10,963 - #28 =
INFO  19:25:10,963 - #40 a
INFO  19:25:10,963 - #31 ;
INFO  19:25:10,963 - #39 }
INFO  19:25:10,963 - #4 void
INFO  19:25:10,963 - #40 putn
INFO  19:25:10,963 - #34 (
INFO  19:25:10,963 - #40 int
INFO  19:25:10,963 - #40 a
INFO  19:25:10,963 - #32 ,
INFO  19:25:10,963 - #40 int
INFO  19:25:10,963 - #40 idx
INFO  19:25:10,963 - #35 )
INFO  19:25:10,963 - #38 {
INFO  19:25:10,963 - #40 this
INFO  19:25:10,963 - #33 .
INFO  19:25:10,963 - #40 neg
INFO  19:25:10,963 - #36 [
INFO  19:25:10,963 - #40 idx
INFO  19:25:10,964 - #37 ]
INFO  19:25:10,964 - #28 =
INFO  19:25:10,964 - #40 a
INFO  19:25:10,964 - #31 ;
INFO  19:25:10,964 - #39 }
INFO  19:25:10,964 - #40 int
INFO  19:25:10,964 - #40 getp
INFO  19:25:10,964 - #34 (
INFO  19:25:10,964 - #40 int
INFO  19:25:10,964 - #40 idx
INFO  19:25:10,964 - #35 )
INFO  19:25:10,964 - #38 {
INFO  19:25:10,964 - #3 return
INFO  19:25:10,964 - #40 pos
INFO  19:25:10,964 - #36 [
INFO  19:25:10,964 - #40 idx
INFO  19:25:10,964 - #37 ]
INFO  19:25:10,964 - #31 ;
INFO  19:25:10,964 - #39 }
INFO  19:25:10,965 - #40 int
INFO  19:25:10,965 - #40 getn
INFO  19:25:10,965 - #34 (
INFO  19:25:10,965 - #40 int
INFO  19:25:10,965 - #40 idx
INFO  19:25:10,965 - #35 )
INFO  19:25:10,965 - #38 {
INFO  19:25:10,965 - #3 return
INFO  19:25:10,966 - #40 neg
INFO  19:25:10,966 - #36 [
INFO  19:25:10,966 - #40 idx
INFO  19:25:10,966 - #37 ]
INFO  19:25:10,966 - #31 ;
INFO  19:25:10,966 - #39 }
INFO  19:25:10,966 - #39 }
INFO  19:25:10,966 - #39 }
INFO  19:25:10,966 - #40 Table
INFO  19:25:10,966 - #40 val
INFO  19:25:10,966 - #31 ;
INFO  19:25:10,966 - #38 {
INFO  19:25:10,967 - #4 void
INFO  19:25:10,967 - #40 main
INFO  19:25:10,967 - #34 (
INFO  19:25:10,967 - #35 )
INFO  19:25:10,967 - #40 int
INFO  19:25:10,967 - #40 x
INFO  19:25:10,967 - #32 ,
INFO  19:25:10,967 - #40 i
INFO  19:25:10,967 - #31 ;
INFO  19:25:10,967 - #38 {
INFO  19:25:10,967 - #40 val
INFO  19:25:10,967 - #28 =
INFO  19:25:10,967 - #9 new
INFO  19:25:10,968 - #40 Table
INFO  19:25:10,968 - #31 ;
INFO  19:25:10,968 - #40 val
INFO  19:25:10,968 - #33 .
INFO  19:25:10,968 - #40 pos
INFO  19:25:10,968 - #28 =
INFO  19:25:10,968 - #9 new
INFO  19:25:10,968 - #40 int
INFO  19:25:10,968 - #36 [
INFO  19:25:10,968 - #40 size
INFO  19:25:10,968 - #37 ]
INFO  19:25:10,968 - #31 ;
INFO  19:25:10,968 - #40 val
INFO  19:25:10,968 - #33 .
INFO  19:25:10,969 - #40 neg
INFO  19:25:10,969 - #28 =
INFO  19:25:10,969 - #9 new
INFO  19:25:10,969 - #40 int
INFO  19:25:10,969 - #36 [
INFO  19:25:10,971 - #40 size
INFO  19:25:10,971 - #37 ]
INFO  19:25:10,971 - #31 ;
INFO  19:25:10,971 - #40 i
INFO  19:25:10,971 - #28 =
INFO  19:25:10,971 - #42 0
INFO  19:25:10,971 - #31 ;
INFO  19:25:10,971 - #11 do
INFO  19:25:10,971 - #38 {
INFO  19:25:10,971 - #40 val
INFO  19:25:10,971 - #33 .
INFO  19:25:10,971 - #40 putp
INFO  19:25:10,971 - #34 (
INFO  19:25:10,971 - #42 0
INFO  19:25:10,972 - #32 ,
INFO  19:25:10,972 - #40 i
INFO  19:25:10,972 - #35 )
INFO  19:25:10,972 - #31 ;
INFO  19:25:10,972 - #40 val
INFO  19:25:10,972 - #33 .
INFO  19:25:10,972 - #40 putn
INFO  19:25:10,972 - #34 (
INFO  19:25:10,972 - #42 0
INFO  19:25:10,972 - #32 ,
INFO  19:25:10,972 - #40 i
INFO  19:25:10,972 - #35 )
INFO  19:25:10,972 - #31 ;
INFO  19:25:10,973 - #40 i
INFO  19:25:10,973 - #29 ++
INFO  19:25:10,973 - #31 ;
INFO  19:25:10,973 - #39 }
INFO  19:25:10,973 - #12 while
INFO  19:25:10,973 - #34 (
INFO  19:25:10,973 - #40 i
INFO  19:25:10,973 - #24 <
INFO  19:25:10,973 - #40 size
INFO  19:25:10,973 - #35 )
INFO  19:25:10,973 - #31 ;
INFO  19:25:10,973 - #10 read
INFO  19:25:10,974 - #34 (
INFO  19:25:10,974 - #40 x
INFO  19:25:10,974 - #35 )
INFO  19:25:10,974 - #31 ;
INFO  19:25:10,974 - #11 do
INFO  19:25:10,974 - #38 {
INFO  19:25:10,974 - #5 if
INFO  19:25:10,974 - #34 (
INFO  19:25:10,974 - #40 x
INFO  19:25:10,974 - #23 >=
INFO  19:25:10,975 - #40 size
INFO  19:25:10,975 - #35 )
INFO  19:25:10,975 - #7 break
INFO  19:25:10,975 - #31 ;
INFO  19:25:10,975 - #5 if
INFO  19:25:10,975 - #34 (
INFO  19:25:10,975 - #42 0
INFO  19:25:10,975 - #25 <=
INFO  19:25:10,975 - #40 x
INFO  19:25:10,975 - #26 &&
INFO  19:25:10,975 - #40 x
INFO  19:25:10,975 - #24 <
INFO  19:25:10,975 - #40 size
INFO  19:25:10,975 - #35 )
INFO  19:25:10,975 - #38 {
INFO  19:25:10,975 - #40 val
INFO  19:25:10,975 - #33 .
INFO  19:25:10,975 - #40 putp
INFO  19:25:10,975 - #34 (
INFO  19:25:10,975 - #40 val
INFO  19:25:10,976 - #33 .
INFO  19:25:10,976 - #40 getp
INFO  19:25:10,976 - #34 (
INFO  19:25:10,976 - #40 x
INFO  19:25:10,976 - #35 )
INFO  19:25:10,976 - #15 +
INFO  19:25:10,976 - #42 1
INFO  19:25:10,976 - #35 )
INFO  19:25:10,976 - #31 ;
INFO  19:25:10,976 - #39 }
INFO  19:25:10,976 - #6 else
INFO  19:25:10,976 - #5 if
INFO  19:25:10,976 - #34 (
INFO  19:25:10,976 - #16 -
INFO  19:25:10,976 - #40 size
INFO  19:25:10,976 - #24 <
INFO  19:25:10,976 - #40 x
INFO  19:25:10,976 - #26 &&
INFO  19:25:10,976 - #40 x
INFO  19:25:10,976 - #24 <
INFO  19:25:10,976 - #42 0
INFO  19:25:10,977 - #35 )
INFO  19:25:10,977 - #38 {
INFO  19:25:10,977 - #40 val
INFO  19:25:10,977 - #33 .
INFO  19:25:10,977 - #40 putn
INFO  19:25:10,977 - #34 (
INFO  19:25:10,977 - #40 val
INFO  19:25:10,977 - #33 .
INFO  19:25:10,977 - #40 getn
INFO  19:25:10,977 - #34 (
INFO  19:25:10,977 - #16 -
INFO  19:25:10,977 - #40 x
INFO  19:25:10,977 - #35 )
INFO  19:25:10,977 - #15 +
INFO  19:25:10,977 - #42 1
INFO  19:25:10,977 - #35 )
INFO  19:25:10,977 - #31 ;
INFO  19:25:10,977 - #39 }
INFO  19:25:10,977 - #10 read
INFO  19:25:10,978 - #34 (
INFO  19:25:10,978 - #40 x
INFO  19:25:10,978 - #35 )
INFO  19:25:10,978 - #31 ;
INFO  19:25:10,978 - #39 }
INFO  19:25:10,978 - #39 }
INFO  19:25:10,978 - #12 while
INFO  19:25:10,978 - #34 (
INFO  19:25:10,978 - #40 true
INFO  19:25:10,978 - #35 )
INFO  19:25:10,978 - #31 ;
INFO  19:25:10,978 - #39 }
