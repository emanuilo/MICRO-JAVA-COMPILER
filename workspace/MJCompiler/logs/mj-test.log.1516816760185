INFO  16:28:56,310 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  16:28:56,314 - #1 program
INFO  16:28:56,314 - #40 P
INFO  16:28:56,314 - #43 const
INFO  16:28:56,314 - #43 int
INFO  16:28:56,314 - #43 size
INFO  16:28:56,314 - #28 =
INFO  16:28:56,314 - #42 10
INFO  16:28:56,314 - #31 ;
INFO  16:28:56,315 - #43 g
INFO  16:28:56,315 - #8 class
INFO  16:28:56,315 - #40 Table
INFO  16:28:56,315 - #38 {
INFO  16:28:56,315 - #43 int
INFO  16:28:56,315 - #43 pos
INFO  16:28:56,315 - #36 [
INFO  16:28:56,315 - #37 ]
INFO  16:28:56,315 - #32 ,
INFO  16:28:56,315 - #43 neg
INFO  16:28:56,315 - #36 [
INFO  16:28:56,315 - #37 ]
INFO  16:28:56,315 - #31 ;
INFO  16:28:56,316 - #38 {
INFO  16:28:56,316 - #4 void
INFO  16:28:56,316 - #43 putp
INFO  16:28:56,316 - #34 (
INFO  16:28:56,316 - #43 int
INFO  16:28:56,316 - #43 a
INFO  16:28:56,316 - #32 ,
INFO  16:28:56,316 - #43 int
INFO  16:28:56,316 - #43 idx
INFO  16:28:56,316 - #35 )
INFO  16:28:56,316 - #38 {
INFO  16:28:56,316 - #43 this
INFO  16:28:56,316 - #33 .
INFO  16:28:56,316 - #43 pos
INFO  16:28:56,316 - #36 [
INFO  16:28:56,316 - #43 idx
INFO  16:28:56,316 - #37 ]
INFO  16:28:56,316 - #28 =
INFO  16:28:56,316 - #43 a
INFO  16:28:56,316 - #31 ;
INFO  16:28:56,317 - #39 }
INFO  16:28:56,317 - #4 void
INFO  16:28:56,317 - #43 putn
INFO  16:28:56,317 - #34 (
INFO  16:28:56,317 - #43 int
INFO  16:28:56,317 - #43 a
INFO  16:28:56,317 - #32 ,
INFO  16:28:56,317 - #43 int
INFO  16:28:56,317 - #43 idx
INFO  16:28:56,317 - #35 )
INFO  16:28:56,317 - #38 {
INFO  16:28:56,317 - #43 this
INFO  16:28:56,317 - #33 .
INFO  16:28:56,317 - #43 neg
INFO  16:28:56,317 - #36 [
INFO  16:28:56,317 - #43 idx
INFO  16:28:56,317 - #37 ]
INFO  16:28:56,318 - #28 =
INFO  16:28:56,318 - #43 a
INFO  16:28:56,318 - #31 ;
INFO  16:28:56,318 - #39 }
INFO  16:28:56,318 - #43 int
INFO  16:28:56,318 - #43 getp
INFO  16:28:56,318 - #34 (
INFO  16:28:56,318 - #43 int
INFO  16:28:56,318 - #43 idx
INFO  16:28:56,318 - #35 )
INFO  16:28:56,318 - #38 {
INFO  16:28:56,318 - #3 return
INFO  16:28:56,318 - #43 pos
INFO  16:28:56,318 - #36 [
INFO  16:28:56,319 - #43 idx
INFO  16:28:56,319 - #37 ]
INFO  16:28:56,319 - #31 ;
INFO  16:28:56,319 - #39 }
INFO  16:28:56,319 - #43 int
INFO  16:28:56,319 - #43 getn
INFO  16:28:56,319 - #34 (
INFO  16:28:56,319 - #43 int
INFO  16:28:56,319 - #43 idx
INFO  16:28:56,319 - #35 )
INFO  16:28:56,319 - #38 {
INFO  16:28:56,319 - #3 return
INFO  16:28:56,319 - #43 neg
INFO  16:28:56,319 - #36 [
INFO  16:28:56,319 - #43 idx
INFO  16:28:56,319 - #37 ]
INFO  16:28:56,320 - #31 ;
INFO  16:28:56,320 - #39 }
INFO  16:28:56,320 - #39 }
INFO  16:28:56,320 - #39 }
INFO  16:28:56,320 - #40 Table
INFO  16:28:56,320 - #43 val
INFO  16:28:56,320 - #31 ;
INFO  16:28:56,320 - #38 {
INFO  16:28:56,321 - #4 void
INFO  16:28:56,321 - #43 main
INFO  16:28:56,321 - #34 (
INFO  16:28:56,321 - #35 )
INFO  16:28:56,321 - #43 int
INFO  16:28:56,321 - #43 x
INFO  16:28:56,321 - #32 ,
INFO  16:28:56,321 - #43 i
INFO  16:28:56,321 - #31 ;
INFO  16:28:56,321 - #38 {
INFO  16:28:56,322 - #43 val
INFO  16:28:56,322 - #28 =
INFO  16:28:56,322 - #9 new
INFO  16:28:56,322 - #40 Table
INFO  16:28:56,322 - #31 ;
INFO  16:28:56,322 - #43 val
INFO  16:28:56,322 - #33 .
INFO  16:28:56,322 - #43 pos
INFO  16:28:56,322 - #28 =
INFO  16:28:56,322 - #9 new
INFO  16:28:56,322 - #43 int
INFO  16:28:56,322 - #36 [
INFO  16:28:56,323 - #43 size
INFO  16:28:56,323 - #37 ]
INFO  16:28:56,323 - #31 ;
INFO  16:28:56,323 - #43 val
INFO  16:28:56,323 - #33 .
INFO  16:28:56,323 - #43 neg
INFO  16:28:56,323 - #28 =
INFO  16:28:56,323 - #9 new
INFO  16:28:56,323 - #43 int
INFO  16:28:56,323 - #36 [
INFO  16:28:56,323 - #43 size
INFO  16:28:56,323 - #37 ]
INFO  16:28:56,323 - #31 ;
INFO  16:28:56,323 - #43 i
INFO  16:28:56,326 - #28 =
INFO  16:28:56,326 - #42 0
INFO  16:28:56,326 - #31 ;
INFO  16:28:56,326 - #11 do
INFO  16:28:56,326 - #38 {
INFO  16:28:56,326 - #43 val
INFO  16:28:56,326 - #33 .
INFO  16:28:56,326 - #43 putp
INFO  16:28:56,326 - #34 (
INFO  16:28:56,326 - #42 0
INFO  16:28:56,326 - #32 ,
INFO  16:28:56,326 - #43 i
INFO  16:28:56,326 - #35 )
INFO  16:28:56,326 - #31 ;
INFO  16:28:56,326 - #43 val
INFO  16:28:56,326 - #33 .
INFO  16:28:56,326 - #43 putn
INFO  16:28:56,326 - #34 (
INFO  16:28:56,327 - #42 0
INFO  16:28:56,327 - #32 ,
INFO  16:28:56,327 - #43 i
INFO  16:28:56,327 - #35 )
INFO  16:28:56,327 - #31 ;
INFO  16:28:56,327 - #43 i
INFO  16:28:56,327 - #29 ++
INFO  16:28:56,327 - #31 ;
INFO  16:28:56,327 - #39 }
INFO  16:28:56,327 - #12 while
INFO  16:28:56,327 - #34 (
INFO  16:28:56,327 - #43 i
INFO  16:28:56,327 - #24 <
INFO  16:28:56,328 - #43 size
INFO  16:28:56,328 - #35 )
INFO  16:28:56,328 - #31 ;
INFO  16:28:56,328 - #10 read
INFO  16:28:56,328 - #34 (
INFO  16:28:56,328 - #43 x
INFO  16:28:56,328 - #35 )
INFO  16:28:56,328 - #31 ;
INFO  16:28:56,328 - #11 do
INFO  16:28:56,328 - #38 {
INFO  16:28:56,328 - #5 if
INFO  16:28:56,328 - #34 (
INFO  16:28:56,328 - #43 x
INFO  16:28:56,328 - #23 >=
INFO  16:28:56,328 - #43 size
INFO  16:28:56,329 - #35 )
INFO  16:28:56,329 - #7 break
INFO  16:28:56,329 - #31 ;
INFO  16:28:56,329 - #5 if
INFO  16:28:56,329 - #34 (
INFO  16:28:56,329 - #42 0
INFO  16:28:56,329 - #25 <=
INFO  16:28:56,329 - #43 x
INFO  16:28:56,329 - #26 &&
INFO  16:28:56,329 - #43 x
INFO  16:28:56,329 - #24 <
INFO  16:28:56,329 - #43 size
INFO  16:28:56,329 - #35 )
INFO  16:28:56,329 - #38 {
INFO  16:28:56,329 - #43 val
INFO  16:28:56,329 - #33 .
INFO  16:28:56,329 - #43 putp
INFO  16:28:56,329 - #34 (
INFO  16:28:56,330 - #43 val
INFO  16:28:56,330 - #33 .
INFO  16:28:56,330 - #43 getp
INFO  16:28:56,330 - #34 (
INFO  16:28:56,330 - #43 x
INFO  16:28:56,330 - #35 )
INFO  16:28:56,330 - #15 +
INFO  16:28:56,330 - #42 1
INFO  16:28:56,330 - #35 )
INFO  16:28:56,330 - #31 ;
INFO  16:28:56,330 - #39 }
INFO  16:28:56,330 - #6 else
INFO  16:28:56,330 - #5 if
INFO  16:28:56,330 - #34 (
INFO  16:28:56,330 - #16 -
INFO  16:28:56,330 - #43 size
INFO  16:28:56,330 - #24 <
INFO  16:28:56,330 - #43 x
INFO  16:28:56,330 - #26 &&
INFO  16:28:56,330 - #43 x
INFO  16:28:56,330 - #24 <
INFO  16:28:56,330 - #42 0
INFO  16:28:56,331 - #35 )
INFO  16:28:56,331 - #38 {
INFO  16:28:56,331 - #43 val
INFO  16:28:56,331 - #33 .
INFO  16:28:56,331 - #43 putn
INFO  16:28:56,331 - #34 (
INFO  16:28:56,331 - #43 val
INFO  16:28:56,331 - #33 .
INFO  16:28:56,331 - #43 getn
INFO  16:28:56,331 - #34 (
INFO  16:28:56,331 - #16 -
INFO  16:28:56,331 - #43 x
INFO  16:28:56,331 - #35 )
INFO  16:28:56,331 - #15 +
INFO  16:28:56,331 - #42 1
INFO  16:28:56,331 - #35 )
INFO  16:28:56,331 - #31 ;
INFO  16:28:56,331 - #39 }
INFO  16:28:56,331 - #10 read
INFO  16:28:56,331 - #34 (
INFO  16:28:56,331 - #43 x
INFO  16:28:56,331 - #35 )
INFO  16:28:56,332 - #31 ;
INFO  16:28:56,332 - #39 }
INFO  16:28:56,332 - #39 }
INFO  16:28:56,332 - #12 while
INFO  16:28:56,332 - #34 (
INFO  16:28:56,332 - #43 true
INFO  16:28:56,332 - #35 )
INFO  16:28:56,332 - #31 ;
INFO  16:28:56,332 - #39 }
