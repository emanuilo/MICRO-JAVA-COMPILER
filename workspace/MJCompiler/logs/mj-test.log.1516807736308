INFO  16:26:40,632 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  16:26:40,636 - #1 program
INFO  16:26:40,637 - #40 P
INFO  16:26:40,637 - #40 const
INFO  16:26:40,637 - #40 int
INFO  16:26:40,637 - #40 size
INFO  16:26:40,637 - #28 =
INFO  16:26:40,637 - #42 10
INFO  16:26:40,637 - #31 ;
INFO  16:26:40,637 - #40 g
INFO  16:26:40,637 - #8 class
INFO  16:26:40,637 - #40 Table
INFO  16:26:40,637 - #38 {
INFO  16:26:40,637 - #40 int
INFO  16:26:40,638 - #40 pos
INFO  16:26:40,638 - #36 [
INFO  16:26:40,638 - #37 ]
INFO  16:26:40,638 - #32 ,
INFO  16:26:40,638 - #40 neg
INFO  16:26:40,638 - #36 [
INFO  16:26:40,638 - #37 ]
INFO  16:26:40,638 - #31 ;
INFO  16:26:40,638 - #38 {
INFO  16:26:40,638 - #4 void
INFO  16:26:40,638 - #40 putp
INFO  16:26:40,638 - #34 (
INFO  16:26:40,638 - #40 int
INFO  16:26:40,638 - #40 a
INFO  16:26:40,638 - #32 ,
INFO  16:26:40,639 - #40 int
INFO  16:26:40,639 - #40 idx
INFO  16:26:40,639 - #35 )
INFO  16:26:40,639 - #38 {
INFO  16:26:40,639 - #40 this
INFO  16:26:40,639 - #33 .
INFO  16:26:40,639 - #40 pos
INFO  16:26:40,639 - #36 [
INFO  16:26:40,639 - #40 idx
INFO  16:26:40,639 - #37 ]
INFO  16:26:40,639 - #28 =
INFO  16:26:40,639 - #40 a
INFO  16:26:40,639 - #31 ;
INFO  16:26:40,639 - #39 }
INFO  16:26:40,639 - #4 void
INFO  16:26:40,639 - #40 putn
INFO  16:26:40,639 - #34 (
INFO  16:26:40,639 - #40 int
INFO  16:26:40,639 - #40 a
INFO  16:26:40,639 - #32 ,
INFO  16:26:40,639 - #40 int
INFO  16:26:40,639 - #40 idx
INFO  16:26:40,640 - #35 )
INFO  16:26:40,640 - #38 {
INFO  16:26:40,640 - #40 this
INFO  16:26:40,640 - #33 .
INFO  16:26:40,640 - #40 neg
INFO  16:26:40,640 - #36 [
INFO  16:26:40,640 - #40 idx
INFO  16:26:40,640 - #37 ]
INFO  16:26:40,640 - #28 =
INFO  16:26:40,640 - #40 a
INFO  16:26:40,640 - #31 ;
INFO  16:26:40,640 - #39 }
INFO  16:26:40,640 - #40 int
INFO  16:26:40,640 - #40 getp
INFO  16:26:40,641 - #34 (
INFO  16:26:40,641 - #40 int
INFO  16:26:40,641 - #40 idx
INFO  16:26:40,641 - #35 )
INFO  16:26:40,641 - #38 {
INFO  16:26:40,641 - #3 return
INFO  16:26:40,641 - #40 pos
INFO  16:26:40,641 - #36 [
INFO  16:26:40,641 - #40 idx
INFO  16:26:40,641 - #37 ]
INFO  16:26:40,641 - #31 ;
INFO  16:26:40,641 - #39 }
INFO  16:26:40,641 - #40 int
INFO  16:26:40,641 - #40 getn
INFO  16:26:40,641 - #34 (
INFO  16:26:40,641 - #40 int
INFO  16:26:40,641 - #40 idx
INFO  16:26:40,641 - #35 )
INFO  16:26:40,641 - #38 {
INFO  16:26:40,642 - #3 return
INFO  16:26:40,642 - #40 neg
INFO  16:26:40,642 - #36 [
INFO  16:26:40,642 - #40 idx
INFO  16:26:40,642 - #37 ]
INFO  16:26:40,643 - #31 ;
INFO  16:26:40,643 - #39 }
INFO  16:26:40,643 - #39 }
INFO  16:26:40,643 - #39 }
INFO  16:26:40,643 - #40 Table
INFO  16:26:40,643 - #40 val
INFO  16:26:40,643 - #31 ;
INFO  16:26:40,643 - #38 {
INFO  16:26:40,644 - #4 void
INFO  16:26:40,644 - #40 main
INFO  16:26:40,644 - #34 (
INFO  16:26:40,644 - #35 )
INFO  16:26:40,644 - #40 int
INFO  16:26:40,644 - #40 x
INFO  16:26:40,644 - #32 ,
INFO  16:26:40,644 - #40 i
INFO  16:26:40,644 - #31 ;
INFO  16:26:40,644 - #38 {
INFO  16:26:40,645 - #40 val
INFO  16:26:40,645 - #28 =
INFO  16:26:40,645 - #9 new
INFO  16:26:40,645 - #40 Table
INFO  16:26:40,645 - #31 ;
INFO  16:26:40,645 - #40 val
INFO  16:26:40,645 - #33 .
INFO  16:26:40,645 - #40 pos
INFO  16:26:40,645 - #28 =
INFO  16:26:40,645 - #9 new
INFO  16:26:40,645 - #40 int
INFO  16:26:40,645 - #36 [
INFO  16:26:40,645 - #40 size
INFO  16:26:40,645 - #37 ]
INFO  16:26:40,646 - #31 ;
INFO  16:26:40,646 - #40 val
INFO  16:26:40,646 - #33 .
INFO  16:26:40,646 - #40 neg
INFO  16:26:40,646 - #28 =
INFO  16:26:40,646 - #9 new
INFO  16:26:40,646 - #40 int
INFO  16:26:40,646 - #36 [
INFO  16:26:40,646 - #40 size
INFO  16:26:40,646 - #37 ]
INFO  16:26:40,646 - #31 ;
INFO  16:26:40,646 - #40 i
INFO  16:26:40,648 - #28 =
INFO  16:26:40,648 - #42 0
INFO  16:26:40,648 - #31 ;
INFO  16:26:40,648 - #11 do
INFO  16:26:40,648 - #38 {
INFO  16:26:40,648 - #40 val
INFO  16:26:40,648 - #33 .
INFO  16:26:40,649 - #40 putp
INFO  16:26:40,649 - #34 (
INFO  16:26:40,649 - #42 0
INFO  16:26:40,649 - #32 ,
INFO  16:26:40,649 - #40 i
INFO  16:26:40,649 - #35 )
INFO  16:26:40,649 - #31 ;
INFO  16:26:40,649 - #40 val
INFO  16:26:40,649 - #33 .
INFO  16:26:40,649 - #40 putn
INFO  16:26:40,649 - #34 (
INFO  16:26:40,649 - #42 0
INFO  16:26:40,649 - #32 ,
INFO  16:26:40,649 - #40 i
INFO  16:26:40,649 - #35 )
INFO  16:26:40,649 - #31 ;
INFO  16:26:40,650 - #40 i
INFO  16:26:40,650 - #29 ++
INFO  16:26:40,650 - #31 ;
INFO  16:26:40,650 - #39 }
INFO  16:26:40,650 - #12 while
INFO  16:26:40,650 - #34 (
INFO  16:26:40,650 - #40 i
INFO  16:26:40,650 - #24 <
INFO  16:26:40,650 - #40 size
INFO  16:26:40,650 - #35 )
INFO  16:26:40,650 - #31 ;
INFO  16:26:40,651 - #10 read
INFO  16:26:40,651 - #34 (
INFO  16:26:40,651 - #40 x
INFO  16:26:40,651 - #35 )
INFO  16:26:40,651 - #31 ;
INFO  16:26:40,651 - #11 do
INFO  16:26:40,651 - #38 {
INFO  16:26:40,651 - #5 if
INFO  16:26:40,651 - #34 (
INFO  16:26:40,651 - #40 x
INFO  16:26:40,651 - #23 >=
INFO  16:26:40,651 - #40 size
INFO  16:26:40,651 - #35 )
INFO  16:26:40,651 - #7 break
INFO  16:26:40,651 - #31 ;
INFO  16:26:40,651 - #5 if
INFO  16:26:40,651 - #34 (
INFO  16:26:40,651 - #42 0
INFO  16:26:40,652 - #25 <=
INFO  16:26:40,652 - #40 x
INFO  16:26:40,652 - #26 &&
INFO  16:26:40,652 - #40 x
INFO  16:26:40,652 - #24 <
INFO  16:26:40,652 - #40 size
INFO  16:26:40,652 - #35 )
INFO  16:26:40,652 - #38 {
INFO  16:26:40,652 - #40 val
INFO  16:26:40,652 - #33 .
INFO  16:26:40,652 - #40 putp
INFO  16:26:40,652 - #34 (
INFO  16:26:40,652 - #40 val
INFO  16:26:40,652 - #33 .
INFO  16:26:40,652 - #40 getp
INFO  16:26:40,652 - #34 (
INFO  16:26:40,652 - #40 x
INFO  16:26:40,652 - #35 )
INFO  16:26:40,652 - #15 +
INFO  16:26:40,652 - #42 1
INFO  16:26:40,652 - #35 )
INFO  16:26:40,652 - #31 ;
INFO  16:26:40,653 - #39 }
INFO  16:26:40,653 - #6 else
INFO  16:26:40,653 - #5 if
INFO  16:26:40,653 - #34 (
INFO  16:26:40,653 - #16 -
INFO  16:26:40,653 - #40 size
INFO  16:26:40,653 - #24 <
INFO  16:26:40,653 - #40 x
INFO  16:26:40,653 - #26 &&
INFO  16:26:40,653 - #40 x
INFO  16:26:40,653 - #24 <
INFO  16:26:40,653 - #42 0
INFO  16:26:40,653 - #35 )
INFO  16:26:40,653 - #38 {
INFO  16:26:40,653 - #40 val
INFO  16:26:40,653 - #33 .
INFO  16:26:40,653 - #40 putn
INFO  16:26:40,653 - #34 (
INFO  16:26:40,654 - #40 val
INFO  16:26:40,654 - #33 .
INFO  16:26:40,654 - #40 getn
INFO  16:26:40,654 - #34 (
INFO  16:26:40,654 - #16 -
INFO  16:26:40,654 - #40 x
INFO  16:26:40,654 - #35 )
INFO  16:26:40,654 - #15 +
INFO  16:26:40,654 - #42 1
INFO  16:26:40,654 - #35 )
INFO  16:26:40,654 - #31 ;
INFO  16:26:40,654 - #39 }
INFO  16:26:40,654 - #10 read
INFO  16:26:40,654 - #34 (
INFO  16:26:40,654 - #40 x
INFO  16:26:40,654 - #35 )
INFO  16:26:40,654 - #31 ;
INFO  16:26:40,654 - #39 }
INFO  16:26:40,654 - #39 }
INFO  16:26:40,654 - #12 while
INFO  16:26:40,654 - #34 (
INFO  16:26:40,654 - #40 true
INFO  16:26:40,654 - #35 )
INFO  16:26:40,654 - #31 ;
INFO  16:26:40,654 - #39 }
