INFO  19:14:16,047 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  19:14:16,051 - #1 program
INFO  19:14:16,051 - #40 P
INFO  19:14:16,051 - #40 const
INFO  19:14:16,051 - #40 int
INFO  19:14:16,051 - #40 size
INFO  19:14:16,051 - #28 =
INFO  19:14:16,051 - #42 10
INFO  19:14:16,051 - #31 ;
INFO  19:14:16,051 - #40 int
INFO  19:14:16,052 - #40 d
INFO  19:14:16,052 - #28 =
INFO  19:14:16,052 - #43 g
INFO  19:14:16,052 - #31 ;
INFO  19:14:16,052 - #8 class
INFO  19:14:16,052 - #40 Table
INFO  19:14:16,052 - #38 {
INFO  19:14:16,052 - #40 int
INFO  19:14:16,052 - #40 pos
INFO  19:14:16,052 - #36 [
INFO  19:14:16,052 - #37 ]
INFO  19:14:16,052 - #32 ,
INFO  19:14:16,053 - #40 neg
INFO  19:14:16,053 - #36 [
INFO  19:14:16,053 - #37 ]
INFO  19:14:16,053 - #31 ;
INFO  19:14:16,053 - #38 {
INFO  19:14:16,053 - #4 void
INFO  19:14:16,053 - #40 putp
INFO  19:14:16,053 - #34 (
INFO  19:14:16,053 - #40 int
INFO  19:14:16,053 - #40 a
INFO  19:14:16,053 - #32 ,
INFO  19:14:16,053 - #40 int
INFO  19:14:16,053 - #40 idx
INFO  19:14:16,053 - #35 )
INFO  19:14:16,053 - #38 {
INFO  19:14:16,053 - #40 this
INFO  19:14:16,053 - #33 .
INFO  19:14:16,053 - #40 pos
INFO  19:14:16,053 - #36 [
INFO  19:14:16,053 - #40 idx
INFO  19:14:16,054 - #37 ]
INFO  19:14:16,054 - #28 =
INFO  19:14:16,054 - #40 a
INFO  19:14:16,054 - #31 ;
INFO  19:14:16,054 - #39 }
INFO  19:14:16,054 - #4 void
INFO  19:14:16,054 - #40 putn
INFO  19:14:16,054 - #34 (
INFO  19:14:16,054 - #40 int
INFO  19:14:16,054 - #40 a
INFO  19:14:16,054 - #32 ,
INFO  19:14:16,054 - #40 int
INFO  19:14:16,054 - #40 idx
INFO  19:14:16,054 - #35 )
INFO  19:14:16,054 - #38 {
INFO  19:14:16,054 - #40 this
INFO  19:14:16,054 - #33 .
INFO  19:14:16,054 - #40 neg
INFO  19:14:16,054 - #36 [
INFO  19:14:16,054 - #40 idx
INFO  19:14:16,055 - #37 ]
INFO  19:14:16,055 - #28 =
INFO  19:14:16,055 - #40 a
INFO  19:14:16,055 - #31 ;
INFO  19:14:16,055 - #39 }
INFO  19:14:16,055 - #40 int
INFO  19:14:16,055 - #40 getp
INFO  19:14:16,055 - #34 (
INFO  19:14:16,055 - #40 int
INFO  19:14:16,055 - #40 idx
INFO  19:14:16,055 - #35 )
INFO  19:14:16,055 - #38 {
INFO  19:14:16,055 - #3 return
INFO  19:14:16,055 - #40 pos
INFO  19:14:16,055 - #36 [
INFO  19:14:16,055 - #40 idx
INFO  19:14:16,055 - #37 ]
INFO  19:14:16,055 - #31 ;
INFO  19:14:16,055 - #39 }
INFO  19:14:16,055 - #40 int
INFO  19:14:16,056 - #40 getn
INFO  19:14:16,056 - #34 (
INFO  19:14:16,056 - #40 int
INFO  19:14:16,056 - #40 idx
INFO  19:14:16,056 - #35 )
INFO  19:14:16,056 - #38 {
INFO  19:14:16,056 - #3 return
INFO  19:14:16,056 - #40 neg
INFO  19:14:16,056 - #36 [
INFO  19:14:16,056 - #40 idx
INFO  19:14:16,056 - #37 ]
INFO  19:14:16,056 - #31 ;
INFO  19:14:16,056 - #39 }
INFO  19:14:16,057 - #39 }
INFO  19:14:16,057 - #39 }
INFO  19:14:16,057 - #40 Table
INFO  19:14:16,057 - #40 val
INFO  19:14:16,058 - #31 ;
INFO  19:14:16,058 - #38 {
INFO  19:14:16,058 - #4 void
INFO  19:14:16,058 - #40 main
INFO  19:14:16,059 - #34 (
INFO  19:14:16,059 - #35 )
INFO  19:14:16,059 - #40 int
INFO  19:14:16,059 - #40 x
INFO  19:14:16,059 - #32 ,
INFO  19:14:16,059 - #40 i
INFO  19:14:16,059 - #31 ;
INFO  19:14:16,059 - #38 {
INFO  19:14:16,059 - #40 val
INFO  19:14:16,059 - #28 =
INFO  19:14:16,059 - #9 new
INFO  19:14:16,059 - #40 Table
INFO  19:14:16,059 - #31 ;
INFO  19:14:16,059 - #40 val
INFO  19:14:16,059 - #33 .
INFO  19:14:16,059 - #40 pos
INFO  19:14:16,059 - #28 =
INFO  19:14:16,059 - #9 new
INFO  19:14:16,059 - #40 int
INFO  19:14:16,060 - #36 [
INFO  19:14:16,060 - #40 size
INFO  19:14:16,060 - #37 ]
INFO  19:14:16,060 - #31 ;
INFO  19:14:16,060 - #40 val
INFO  19:14:16,060 - #33 .
INFO  19:14:16,060 - #40 neg
INFO  19:14:16,060 - #28 =
INFO  19:14:16,060 - #9 new
INFO  19:14:16,060 - #40 int
INFO  19:14:16,060 - #36 [
INFO  19:14:16,063 - #40 size
INFO  19:14:16,063 - #37 ]
INFO  19:14:16,063 - #31 ;
INFO  19:14:16,063 - #40 i
INFO  19:14:16,063 - #28 =
INFO  19:14:16,063 - #42 0
INFO  19:14:16,063 - #31 ;
INFO  19:14:16,063 - #11 do
INFO  19:14:16,063 - #38 {
INFO  19:14:16,064 - #40 val
INFO  19:14:16,064 - #33 .
INFO  19:14:16,064 - #40 putp
INFO  19:14:16,064 - #34 (
INFO  19:14:16,064 - #42 0
INFO  19:14:16,064 - #32 ,
INFO  19:14:16,064 - #40 i
INFO  19:14:16,064 - #35 )
INFO  19:14:16,064 - #31 ;
INFO  19:14:16,064 - #40 val
INFO  19:14:16,064 - #33 .
INFO  19:14:16,064 - #40 putn
INFO  19:14:16,064 - #34 (
INFO  19:14:16,064 - #42 0
INFO  19:14:16,064 - #32 ,
INFO  19:14:16,064 - #40 i
INFO  19:14:16,064 - #35 )
INFO  19:14:16,065 - #31 ;
INFO  19:14:16,065 - #40 i
INFO  19:14:16,065 - #29 ++
INFO  19:14:16,065 - #31 ;
INFO  19:14:16,065 - #39 }
INFO  19:14:16,065 - #12 while
INFO  19:14:16,065 - #34 (
INFO  19:14:16,065 - #40 i
INFO  19:14:16,065 - #24 <
INFO  19:14:16,065 - #40 size
INFO  19:14:16,065 - #35 )
INFO  19:14:16,065 - #31 ;
INFO  19:14:16,065 - #10 read
INFO  19:14:16,065 - #34 (
INFO  19:14:16,065 - #40 x
INFO  19:14:16,066 - #35 )
INFO  19:14:16,066 - #31 ;
INFO  19:14:16,066 - #11 do
INFO  19:14:16,066 - #38 {
INFO  19:14:16,066 - #5 if
INFO  19:14:16,066 - #34 (
INFO  19:14:16,066 - #40 x
INFO  19:14:16,066 - #23 >=
INFO  19:14:16,066 - #40 size
INFO  19:14:16,066 - #35 )
INFO  19:14:16,066 - #7 break
INFO  19:14:16,066 - #31 ;
INFO  19:14:16,066 - #5 if
INFO  19:14:16,066 - #34 (
INFO  19:14:16,066 - #42 0
INFO  19:14:16,066 - #25 <=
INFO  19:14:16,066 - #40 x
INFO  19:14:16,066 - #26 &&
INFO  19:14:16,066 - #40 x
INFO  19:14:16,066 - #24 <
INFO  19:14:16,066 - #40 size
INFO  19:14:16,066 - #35 )
INFO  19:14:16,066 - #38 {
INFO  19:14:16,067 - #40 val
INFO  19:14:16,067 - #33 .
INFO  19:14:16,067 - #40 putp
INFO  19:14:16,067 - #34 (
INFO  19:14:16,067 - #40 val
INFO  19:14:16,067 - #33 .
INFO  19:14:16,067 - #40 getp
INFO  19:14:16,067 - #34 (
INFO  19:14:16,067 - #40 x
INFO  19:14:16,067 - #35 )
INFO  19:14:16,067 - #15 +
INFO  19:14:16,067 - #42 1
INFO  19:14:16,067 - #35 )
INFO  19:14:16,067 - #31 ;
INFO  19:14:16,067 - #39 }
INFO  19:14:16,067 - #6 else
INFO  19:14:16,067 - #5 if
INFO  19:14:16,067 - #34 (
INFO  19:14:16,067 - #16 -
INFO  19:14:16,067 - #40 size
INFO  19:14:16,067 - #24 <
INFO  19:14:16,067 - #40 x
INFO  19:14:16,067 - #26 &&
INFO  19:14:16,067 - #40 x
INFO  19:14:16,067 - #24 <
INFO  19:14:16,067 - #42 0
INFO  19:14:16,067 - #35 )
INFO  19:14:16,067 - #38 {
INFO  19:14:16,068 - #40 val
INFO  19:14:16,068 - #33 .
INFO  19:14:16,068 - #40 putn
INFO  19:14:16,068 - #34 (
INFO  19:14:16,068 - #40 val
INFO  19:14:16,068 - #33 .
INFO  19:14:16,068 - #40 getn
INFO  19:14:16,068 - #34 (
INFO  19:14:16,068 - #16 -
INFO  19:14:16,068 - #40 x
INFO  19:14:16,068 - #35 )
INFO  19:14:16,068 - #15 +
INFO  19:14:16,068 - #42 1
INFO  19:14:16,068 - #35 )
INFO  19:14:16,068 - #31 ;
INFO  19:14:16,068 - #39 }
INFO  19:14:16,068 - #10 read
INFO  19:14:16,068 - #34 (
INFO  19:14:16,068 - #40 x
INFO  19:14:16,068 - #35 )
INFO  19:14:16,068 - #31 ;
INFO  19:14:16,068 - #39 }
INFO  19:14:16,068 - #39 }
INFO  19:14:16,068 - #12 while
INFO  19:14:16,068 - #34 (
INFO  19:14:16,068 - #40 true
INFO  19:14:16,068 - #35 )
INFO  19:14:16,069 - #31 ;
INFO  19:14:16,069 - #39 }
