INFO  15:58:11,508 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  15:58:11,512 - #1 program
INFO  15:58:11,512 - #43 P
INFO  15:58:11,512 - #40 const
INFO  15:58:11,512 - #40 int
INFO  15:58:11,512 - #40 size
INFO  15:58:11,512 - #28 =
INFO  15:58:11,512 - #42 10
INFO  15:58:11,512 - #31 ;
INFO  15:58:11,512 - #43 "
INFO  15:58:11,512 - #43 g
INFO  15:58:11,512 - #43 "
INFO  15:58:11,512 - #8 class
INFO  15:58:11,512 - #40 Table
INFO  15:58:11,513 - #38 {
INFO  15:58:11,513 - #40 int
INFO  15:58:11,513 - #40 pos
INFO  15:58:11,513 - #36 [
INFO  15:58:11,513 - #37 ]
INFO  15:58:11,513 - #32 ,
INFO  15:58:11,513 - #40 neg
INFO  15:58:11,513 - #36 [
INFO  15:58:11,513 - #37 ]
INFO  15:58:11,513 - #31 ;
INFO  15:58:11,513 - #38 {
INFO  15:58:11,513 - #4 void
INFO  15:58:11,513 - #40 putp
INFO  15:58:11,513 - #34 (
INFO  15:58:11,513 - #40 int
INFO  15:58:11,514 - #43 a
INFO  15:58:11,514 - #32 ,
INFO  15:58:11,514 - #40 int
INFO  15:58:11,514 - #40 idx
INFO  15:58:11,514 - #35 )
INFO  15:58:11,514 - #38 {
INFO  15:58:11,514 - #40 this
INFO  15:58:11,514 - #33 .
INFO  15:58:11,514 - #40 pos
INFO  15:58:11,514 - #36 [
INFO  15:58:11,514 - #40 idx
INFO  15:58:11,514 - #37 ]
INFO  15:58:11,514 - #28 =
INFO  15:58:11,514 - #43 a
INFO  15:58:11,514 - #31 ;
INFO  15:58:11,514 - #39 }
INFO  15:58:11,514 - #4 void
INFO  15:58:11,514 - #40 putn
INFO  15:58:11,514 - #34 (
INFO  15:58:11,515 - #40 int
INFO  15:58:11,515 - #43 a
INFO  15:58:11,515 - #32 ,
INFO  15:58:11,515 - #40 int
INFO  15:58:11,515 - #40 idx
INFO  15:58:11,515 - #35 )
INFO  15:58:11,515 - #38 {
INFO  15:58:11,515 - #40 this
INFO  15:58:11,515 - #33 .
INFO  15:58:11,515 - #40 neg
INFO  15:58:11,515 - #36 [
INFO  15:58:11,515 - #40 idx
INFO  15:58:11,515 - #37 ]
INFO  15:58:11,515 - #28 =
INFO  15:58:11,515 - #43 a
INFO  15:58:11,515 - #31 ;
INFO  15:58:11,515 - #39 }
INFO  15:58:11,515 - #40 int
INFO  15:58:11,515 - #40 getp
INFO  15:58:11,515 - #34 (
INFO  15:58:11,515 - #40 int
INFO  15:58:11,516 - #40 idx
INFO  15:58:11,516 - #35 )
INFO  15:58:11,516 - #38 {
INFO  15:58:11,516 - #3 return
INFO  15:58:11,516 - #40 pos
INFO  15:58:11,516 - #36 [
INFO  15:58:11,516 - #40 idx
INFO  15:58:11,516 - #37 ]
INFO  15:58:11,516 - #31 ;
INFO  15:58:11,516 - #39 }
INFO  15:58:11,516 - #40 int
INFO  15:58:11,516 - #40 getn
INFO  15:58:11,516 - #34 (
INFO  15:58:11,516 - #40 int
INFO  15:58:11,516 - #40 idx
INFO  15:58:11,516 - #35 )
INFO  15:58:11,516 - #38 {
INFO  15:58:11,516 - #3 return
INFO  15:58:11,516 - #40 neg
INFO  15:58:11,516 - #36 [
INFO  15:58:11,516 - #40 idx
INFO  15:58:11,517 - #37 ]
INFO  15:58:11,517 - #31 ;
INFO  15:58:11,517 - #39 }
INFO  15:58:11,517 - #39 }
INFO  15:58:11,517 - #39 }
INFO  15:58:11,517 - #40 Table
INFO  15:58:11,517 - #40 val
INFO  15:58:11,517 - #31 ;
INFO  15:58:11,517 - #38 {
INFO  15:58:11,517 - #4 void
INFO  15:58:11,517 - #40 main
INFO  15:58:11,517 - #34 (
INFO  15:58:11,518 - #35 )
INFO  15:58:11,518 - #40 int
INFO  15:58:11,518 - #43 x
INFO  15:58:11,518 - #32 ,
INFO  15:58:11,518 - #43 i
INFO  15:58:11,518 - #31 ;
INFO  15:58:11,518 - #38 {
INFO  15:58:11,518 - #40 val
INFO  15:58:11,518 - #28 =
INFO  15:58:11,518 - #9 new
INFO  15:58:11,518 - #40 Table
INFO  15:58:11,518 - #31 ;
INFO  15:58:11,519 - #40 val
INFO  15:58:11,519 - #33 .
INFO  15:58:11,519 - #40 pos
INFO  15:58:11,519 - #28 =
INFO  15:58:11,519 - #9 new
INFO  15:58:11,519 - #40 int
INFO  15:58:11,519 - #36 [
INFO  15:58:11,519 - #40 size
INFO  15:58:11,519 - #37 ]
INFO  15:58:11,519 - #31 ;
INFO  15:58:11,519 - #40 val
INFO  15:58:11,519 - #33 .
INFO  15:58:11,519 - #40 neg
INFO  15:58:11,519 - #28 =
INFO  15:58:11,520 - #9 new
INFO  15:58:11,520 - #40 int
INFO  15:58:11,520 - #36 [
INFO  15:58:11,520 - #40 size
INFO  15:58:11,520 - #37 ]
INFO  15:58:11,523 - #31 ;
INFO  15:58:11,523 - #43 i
INFO  15:58:11,523 - #28 =
INFO  15:58:11,523 - #43 0
INFO  15:58:11,523 - #31 ;
INFO  15:58:11,523 - #11 do
INFO  15:58:11,523 - #38 {
INFO  15:58:11,523 - #40 val
INFO  15:58:11,523 - #33 .
INFO  15:58:11,523 - #40 putp
INFO  15:58:11,523 - #34 (
INFO  15:58:11,523 - #43 0
INFO  15:58:11,523 - #32 ,
INFO  15:58:11,524 - #43 i
INFO  15:58:11,524 - #35 )
INFO  15:58:11,524 - #31 ;
INFO  15:58:11,524 - #40 val
INFO  15:58:11,524 - #33 .
INFO  15:58:11,524 - #40 putn
INFO  15:58:11,524 - #34 (
INFO  15:58:11,524 - #43 0
INFO  15:58:11,524 - #32 ,
INFO  15:58:11,524 - #43 i
INFO  15:58:11,524 - #35 )
INFO  15:58:11,524 - #31 ;
INFO  15:58:11,524 - #43 i
INFO  15:58:11,525 - #29 ++
INFO  15:58:11,525 - #31 ;
INFO  15:58:11,525 - #39 }
INFO  15:58:11,525 - #12 while
INFO  15:58:11,525 - #34 (
INFO  15:58:11,525 - #43 i
INFO  15:58:11,525 - #24 <
INFO  15:58:11,525 - #40 size
INFO  15:58:11,525 - #35 )
INFO  15:58:11,525 - #31 ;
INFO  15:58:11,525 - #10 read
INFO  15:58:11,525 - #34 (
INFO  15:58:11,526 - #43 x
INFO  15:58:11,526 - #35 )
INFO  15:58:11,526 - #31 ;
INFO  15:58:11,526 - #11 do
INFO  15:58:11,526 - #38 {
INFO  15:58:11,526 - #5 if
INFO  15:58:11,526 - #34 (
INFO  15:58:11,526 - #43 x
INFO  15:58:11,526 - #23 >=
INFO  15:58:11,526 - #40 size
INFO  15:58:11,526 - #35 )
INFO  15:58:11,526 - #7 break
INFO  15:58:11,526 - #31 ;
INFO  15:58:11,526 - #5 if
INFO  15:58:11,526 - #34 (
INFO  15:58:11,526 - #43 0
INFO  15:58:11,526 - #25 <=
INFO  15:58:11,527 - #43 x
INFO  15:58:11,527 - #26 &&
INFO  15:58:11,527 - #43 x
INFO  15:58:11,527 - #24 <
INFO  15:58:11,527 - #40 size
INFO  15:58:11,527 - #35 )
INFO  15:58:11,527 - #38 {
INFO  15:58:11,527 - #40 val
INFO  15:58:11,527 - #33 .
INFO  15:58:11,527 - #40 putp
INFO  15:58:11,527 - #34 (
INFO  15:58:11,527 - #40 val
INFO  15:58:11,527 - #33 .
INFO  15:58:11,527 - #40 getp
INFO  15:58:11,527 - #34 (
INFO  15:58:11,527 - #43 x
INFO  15:58:11,527 - #35 )
INFO  15:58:11,527 - #15 +
INFO  15:58:11,527 - #43 1
INFO  15:58:11,527 - #35 )
INFO  15:58:11,527 - #31 ;
INFO  15:58:11,528 - #39 }
INFO  15:58:11,528 - #6 else
INFO  15:58:11,528 - #5 if
INFO  15:58:11,528 - #34 (
INFO  15:58:11,528 - #16 -
INFO  15:58:11,528 - #40 size
INFO  15:58:11,528 - #24 <
INFO  15:58:11,528 - #43 x
INFO  15:58:11,528 - #26 &&
INFO  15:58:11,528 - #43 x
INFO  15:58:11,528 - #24 <
INFO  15:58:11,528 - #43 0
INFO  15:58:11,528 - #35 )
INFO  15:58:11,528 - #38 {
INFO  15:58:11,528 - #40 val
INFO  15:58:11,528 - #33 .
INFO  15:58:11,528 - #40 putn
INFO  15:58:11,528 - #34 (
INFO  15:58:11,528 - #40 val
INFO  15:58:11,528 - #33 .
INFO  15:58:11,528 - #40 getn
INFO  15:58:11,529 - #34 (
INFO  15:58:11,529 - #16 -
INFO  15:58:11,529 - #43 x
INFO  15:58:11,529 - #35 )
INFO  15:58:11,529 - #15 +
INFO  15:58:11,529 - #43 1
INFO  15:58:11,529 - #35 )
INFO  15:58:11,529 - #31 ;
INFO  15:58:11,529 - #39 }
INFO  15:58:11,529 - #10 read
INFO  15:58:11,529 - #34 (
INFO  15:58:11,529 - #43 x
INFO  15:58:11,529 - #35 )
INFO  15:58:11,529 - #31 ;
INFO  15:58:11,529 - #39 }
INFO  15:58:11,529 - #39 }
INFO  15:58:11,529 - #12 while
INFO  15:58:11,529 - #34 (
INFO  15:58:11,529 - #40 true
INFO  15:58:11,529 - #35 )
INFO  15:58:11,529 - #31 ;
INFO  15:58:11,529 - #39 }
