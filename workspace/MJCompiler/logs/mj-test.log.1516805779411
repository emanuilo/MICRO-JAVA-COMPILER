INFO  15:55:58,721 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  15:55:58,724 - #1 program
INFO  15:55:58,724 - #40 P
INFO  15:55:58,724 - #40 const
INFO  15:55:58,724 - #40 int
INFO  15:55:58,724 - #40 size
INFO  15:55:58,725 - #28 =
INFO  15:55:58,725 - #42 10
INFO  15:55:58,725 - #31 ;
INFO  15:55:58,725 - #43 "
INFO  15:55:58,725 - #42 5
INFO  15:55:58,725 - #43 "
INFO  15:55:58,725 - #8 class
INFO  15:55:58,725 - #40 Table
INFO  15:55:58,725 - #38 {
INFO  15:55:58,725 - #40 int
INFO  15:55:58,725 - #40 pos
INFO  15:55:58,725 - #36 [
INFO  15:55:58,725 - #37 ]
INFO  15:55:58,725 - #32 ,
INFO  15:55:58,725 - #40 neg
INFO  15:55:58,726 - #36 [
INFO  15:55:58,726 - #37 ]
INFO  15:55:58,726 - #31 ;
INFO  15:55:58,726 - #38 {
INFO  15:55:58,726 - #4 void
INFO  15:55:58,726 - #40 putp
INFO  15:55:58,726 - #34 (
INFO  15:55:58,726 - #40 int
INFO  15:55:58,726 - #40 a
INFO  15:55:58,726 - #32 ,
INFO  15:55:58,726 - #40 int
INFO  15:55:58,726 - #40 idx
INFO  15:55:58,726 - #35 )
INFO  15:55:58,726 - #38 {
INFO  15:55:58,726 - #40 this
INFO  15:55:58,726 - #33 .
INFO  15:55:58,726 - #40 pos
INFO  15:55:58,726 - #36 [
INFO  15:55:58,727 - #40 idx
INFO  15:55:58,727 - #37 ]
INFO  15:55:58,727 - #28 =
INFO  15:55:58,727 - #40 a
INFO  15:55:58,727 - #31 ;
INFO  15:55:58,727 - #39 }
INFO  15:55:58,727 - #4 void
INFO  15:55:58,727 - #40 putn
INFO  15:55:58,727 - #34 (
INFO  15:55:58,727 - #40 int
INFO  15:55:58,727 - #40 a
INFO  15:55:58,727 - #32 ,
INFO  15:55:58,728 - #40 int
INFO  15:55:58,728 - #40 idx
INFO  15:55:58,728 - #35 )
INFO  15:55:58,728 - #38 {
INFO  15:55:58,728 - #40 this
INFO  15:55:58,728 - #33 .
INFO  15:55:58,728 - #40 neg
INFO  15:55:58,728 - #36 [
INFO  15:55:58,728 - #40 idx
INFO  15:55:58,728 - #37 ]
INFO  15:55:58,728 - #28 =
INFO  15:55:58,728 - #40 a
INFO  15:55:58,728 - #31 ;
INFO  15:55:58,728 - #39 }
INFO  15:55:58,728 - #40 int
INFO  15:55:58,728 - #40 getp
INFO  15:55:58,728 - #34 (
INFO  15:55:58,729 - #40 int
INFO  15:55:58,729 - #40 idx
INFO  15:55:58,729 - #35 )
INFO  15:55:58,729 - #38 {
INFO  15:55:58,729 - #3 return
INFO  15:55:58,729 - #40 pos
INFO  15:55:58,729 - #36 [
INFO  15:55:58,729 - #40 idx
INFO  15:55:58,729 - #37 ]
INFO  15:55:58,729 - #31 ;
INFO  15:55:58,729 - #39 }
INFO  15:55:58,729 - #40 int
INFO  15:55:58,729 - #40 getn
INFO  15:55:58,729 - #34 (
INFO  15:55:58,729 - #40 int
INFO  15:55:58,729 - #40 idx
INFO  15:55:58,729 - #35 )
INFO  15:55:58,729 - #38 {
INFO  15:55:58,729 - #3 return
INFO  15:55:58,729 - #40 neg
INFO  15:55:58,729 - #36 [
INFO  15:55:58,729 - #40 idx
INFO  15:55:58,729 - #37 ]
INFO  15:55:58,729 - #31 ;
INFO  15:55:58,730 - #39 }
INFO  15:55:58,730 - #39 }
INFO  15:55:58,730 - #39 }
INFO  15:55:58,730 - #40 Table
INFO  15:55:58,730 - #40 val
INFO  15:55:58,730 - #31 ;
INFO  15:55:58,730 - #38 {
INFO  15:55:58,730 - #4 void
INFO  15:55:58,730 - #40 main
INFO  15:55:58,730 - #34 (
INFO  15:55:58,730 - #35 )
INFO  15:55:58,731 - #40 int
INFO  15:55:58,731 - #40 x
INFO  15:55:58,731 - #32 ,
INFO  15:55:58,731 - #40 i
INFO  15:55:58,731 - #31 ;
INFO  15:55:58,731 - #38 {
INFO  15:55:58,731 - #40 val
INFO  15:55:58,731 - #28 =
INFO  15:55:58,731 - #9 new
INFO  15:55:58,731 - #40 Table
INFO  15:55:58,731 - #31 ;
INFO  15:55:58,732 - #40 val
INFO  15:55:58,732 - #33 .
INFO  15:55:58,732 - #40 pos
INFO  15:55:58,732 - #28 =
INFO  15:55:58,732 - #9 new
INFO  15:55:58,732 - #40 int
INFO  15:55:58,732 - #36 [
INFO  15:55:58,732 - #40 size
INFO  15:55:58,732 - #37 ]
INFO  15:55:58,732 - #31 ;
INFO  15:55:58,732 - #40 val
INFO  15:55:58,732 - #33 .
INFO  15:55:58,732 - #40 neg
INFO  15:55:58,732 - #28 =
INFO  15:55:58,733 - #9 new
INFO  15:55:58,733 - #40 int
INFO  15:55:58,733 - #36 [
INFO  15:55:58,733 - #40 size
INFO  15:55:58,733 - #37 ]
INFO  15:55:58,735 - #31 ;
INFO  15:55:58,735 - #40 i
INFO  15:55:58,735 - #28 =
INFO  15:55:58,735 - #42 0
INFO  15:55:58,735 - #31 ;
INFO  15:55:58,735 - #11 do
INFO  15:55:58,735 - #38 {
INFO  15:55:58,736 - #40 val
INFO  15:55:58,736 - #33 .
INFO  15:55:58,736 - #40 putp
INFO  15:55:58,736 - #34 (
INFO  15:55:58,736 - #42 0
INFO  15:55:58,736 - #32 ,
INFO  15:55:58,736 - #40 i
INFO  15:55:58,736 - #35 )
INFO  15:55:58,736 - #31 ;
INFO  15:55:58,736 - #40 val
INFO  15:55:58,736 - #33 .
INFO  15:55:58,736 - #40 putn
INFO  15:55:58,736 - #34 (
INFO  15:55:58,736 - #42 0
INFO  15:55:58,736 - #32 ,
INFO  15:55:58,736 - #40 i
INFO  15:55:58,736 - #35 )
INFO  15:55:58,737 - #31 ;
INFO  15:55:58,737 - #40 i
INFO  15:55:58,737 - #29 ++
INFO  15:55:58,737 - #31 ;
INFO  15:55:58,737 - #39 }
INFO  15:55:58,737 - #12 while
INFO  15:55:58,737 - #34 (
INFO  15:55:58,737 - #40 i
INFO  15:55:58,737 - #24 <
INFO  15:55:58,737 - #40 size
INFO  15:55:58,737 - #35 )
INFO  15:55:58,738 - #31 ;
INFO  15:55:58,738 - #10 read
INFO  15:55:58,738 - #34 (
INFO  15:55:58,738 - #40 x
INFO  15:55:58,738 - #35 )
INFO  15:55:58,738 - #31 ;
INFO  15:55:58,738 - #11 do
INFO  15:55:58,738 - #38 {
INFO  15:55:58,738 - #5 if
INFO  15:55:58,738 - #34 (
INFO  15:55:58,739 - #40 x
INFO  15:55:58,739 - #23 >=
INFO  15:55:58,739 - #40 size
INFO  15:55:58,739 - #35 )
INFO  15:55:58,739 - #7 break
INFO  15:55:58,739 - #31 ;
INFO  15:55:58,739 - #5 if
INFO  15:55:58,739 - #34 (
INFO  15:55:58,739 - #42 0
INFO  15:55:58,739 - #25 <=
INFO  15:55:58,740 - #40 x
INFO  15:55:58,740 - #26 &&
INFO  15:55:58,740 - #40 x
INFO  15:55:58,740 - #24 <
INFO  15:55:58,740 - #40 size
INFO  15:55:58,740 - #35 )
INFO  15:55:58,740 - #38 {
INFO  15:55:58,740 - #40 val
INFO  15:55:58,740 - #33 .
INFO  15:55:58,740 - #40 putp
INFO  15:55:58,740 - #34 (
INFO  15:55:58,740 - #40 val
INFO  15:55:58,740 - #33 .
INFO  15:55:58,740 - #40 getp
INFO  15:55:58,740 - #34 (
INFO  15:55:58,740 - #40 x
INFO  15:55:58,740 - #35 )
INFO  15:55:58,740 - #15 +
INFO  15:55:58,740 - #42 1
INFO  15:55:58,740 - #35 )
INFO  15:55:58,740 - #31 ;
INFO  15:55:58,741 - #39 }
INFO  15:55:58,741 - #6 else
INFO  15:55:58,741 - #5 if
INFO  15:55:58,741 - #34 (
INFO  15:55:58,741 - #16 -
INFO  15:55:58,741 - #40 size
INFO  15:55:58,741 - #24 <
INFO  15:55:58,741 - #40 x
INFO  15:55:58,741 - #26 &&
INFO  15:55:58,741 - #40 x
INFO  15:55:58,741 - #24 <
INFO  15:55:58,741 - #42 0
INFO  15:55:58,741 - #35 )
INFO  15:55:58,741 - #38 {
INFO  15:55:58,741 - #40 val
INFO  15:55:58,741 - #33 .
INFO  15:55:58,741 - #40 putn
INFO  15:55:58,741 - #34 (
INFO  15:55:58,741 - #40 val
INFO  15:55:58,741 - #33 .
INFO  15:55:58,741 - #40 getn
INFO  15:55:58,741 - #34 (
INFO  15:55:58,741 - #16 -
INFO  15:55:58,741 - #40 x
INFO  15:55:58,741 - #35 )
INFO  15:55:58,741 - #15 +
INFO  15:55:58,741 - #42 1
INFO  15:55:58,742 - #35 )
INFO  15:55:58,742 - #31 ;
INFO  15:55:58,742 - #39 }
INFO  15:55:58,742 - #10 read
INFO  15:55:58,742 - #34 (
INFO  15:55:58,742 - #40 x
INFO  15:55:58,742 - #35 )
INFO  15:55:58,742 - #31 ;
INFO  15:55:58,742 - #39 }
INFO  15:55:58,742 - #39 }
INFO  15:55:58,742 - #12 while
INFO  15:55:58,742 - #34 (
INFO  15:55:58,742 - #40 true
INFO  15:55:58,742 - #35 )
INFO  15:55:58,742 - #31 ;
INFO  15:55:58,742 - #39 }
