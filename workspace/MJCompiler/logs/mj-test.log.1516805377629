INFO  15:49:08,263 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  15:49:08,267 - #1 program
INFO  15:49:08,267 - #40 P
INFO  15:49:08,267 - #40 const
INFO  15:49:08,267 - #40 int
INFO  15:49:08,267 - #40 size
INFO  15:49:08,267 - #28 =
INFO  15:49:08,267 - #42 10
INFO  15:49:08,267 - #31 ;
INFO  15:49:08,267 - #43 "
INFO  15:49:08,267 - #40 ADSF
INFO  15:49:08,267 - #43 "
INFO  15:49:08,267 - #8 class
INFO  15:49:08,267 - #40 Table
INFO  15:49:08,267 - #38 {
INFO  15:49:08,267 - #40 int
INFO  15:49:08,268 - #40 pos
INFO  15:49:08,268 - #36 [
INFO  15:49:08,268 - #37 ]
INFO  15:49:08,268 - #32 ,
INFO  15:49:08,268 - #40 neg
INFO  15:49:08,268 - #36 [
INFO  15:49:08,268 - #37 ]
INFO  15:49:08,268 - #31 ;
INFO  15:49:08,268 - #38 {
INFO  15:49:08,268 - #4 void
INFO  15:49:08,268 - #40 putp
INFO  15:49:08,268 - #34 (
INFO  15:49:08,268 - #40 int
INFO  15:49:08,268 - #40 a
INFO  15:49:08,268 - #32 ,
INFO  15:49:08,268 - #40 int
INFO  15:49:08,269 - #40 idx
INFO  15:49:08,269 - #35 )
INFO  15:49:08,269 - #38 {
INFO  15:49:08,269 - #40 this
INFO  15:49:08,269 - #33 .
INFO  15:49:08,269 - #40 pos
INFO  15:49:08,269 - #36 [
INFO  15:49:08,269 - #40 idx
INFO  15:49:08,269 - #37 ]
INFO  15:49:08,269 - #28 =
INFO  15:49:08,269 - #40 a
INFO  15:49:08,269 - #31 ;
INFO  15:49:08,269 - #39 }
INFO  15:49:08,269 - #4 void
INFO  15:49:08,269 - #40 putn
INFO  15:49:08,269 - #34 (
INFO  15:49:08,269 - #40 int
INFO  15:49:08,269 - #40 a
INFO  15:49:08,270 - #32 ,
INFO  15:49:08,270 - #40 int
INFO  15:49:08,270 - #40 idx
INFO  15:49:08,270 - #35 )
INFO  15:49:08,270 - #38 {
INFO  15:49:08,270 - #40 this
INFO  15:49:08,270 - #33 .
INFO  15:49:08,270 - #40 neg
INFO  15:49:08,270 - #36 [
INFO  15:49:08,270 - #40 idx
INFO  15:49:08,270 - #37 ]
INFO  15:49:08,270 - #28 =
INFO  15:49:08,270 - #40 a
INFO  15:49:08,271 - #31 ;
INFO  15:49:08,271 - #39 }
INFO  15:49:08,271 - #40 int
INFO  15:49:08,271 - #40 getp
INFO  15:49:08,271 - #34 (
INFO  15:49:08,271 - #40 int
INFO  15:49:08,271 - #40 idx
INFO  15:49:08,271 - #35 )
INFO  15:49:08,271 - #38 {
INFO  15:49:08,271 - #3 return
INFO  15:49:08,271 - #40 pos
INFO  15:49:08,271 - #36 [
INFO  15:49:08,271 - #40 idx
INFO  15:49:08,271 - #37 ]
INFO  15:49:08,271 - #31 ;
INFO  15:49:08,271 - #39 }
INFO  15:49:08,271 - #40 int
INFO  15:49:08,271 - #40 getn
INFO  15:49:08,271 - #34 (
INFO  15:49:08,272 - #40 int
INFO  15:49:08,272 - #40 idx
INFO  15:49:08,272 - #35 )
INFO  15:49:08,272 - #38 {
INFO  15:49:08,272 - #3 return
INFO  15:49:08,272 - #40 neg
INFO  15:49:08,272 - #36 [
INFO  15:49:08,272 - #40 idx
INFO  15:49:08,272 - #37 ]
INFO  15:49:08,272 - #31 ;
INFO  15:49:08,272 - #39 }
INFO  15:49:08,272 - #39 }
INFO  15:49:08,272 - #39 }
INFO  15:49:08,272 - #40 Table
INFO  15:49:08,272 - #40 val
INFO  15:49:08,272 - #31 ;
INFO  15:49:08,273 - #38 {
INFO  15:49:08,273 - #4 void
INFO  15:49:08,273 - #40 main
INFO  15:49:08,273 - #34 (
INFO  15:49:08,273 - #35 )
INFO  15:49:08,273 - #40 int
INFO  15:49:08,273 - #40 x
INFO  15:49:08,273 - #32 ,
INFO  15:49:08,273 - #40 i
INFO  15:49:08,273 - #31 ;
INFO  15:49:08,273 - #38 {
INFO  15:49:08,273 - #40 val
INFO  15:49:08,274 - #28 =
INFO  15:49:08,274 - #9 new
INFO  15:49:08,274 - #40 Table
INFO  15:49:08,274 - #31 ;
INFO  15:49:08,274 - #40 val
INFO  15:49:08,274 - #33 .
INFO  15:49:08,274 - #40 pos
INFO  15:49:08,274 - #28 =
INFO  15:49:08,274 - #9 new
INFO  15:49:08,274 - #40 int
INFO  15:49:08,274 - #36 [
INFO  15:49:08,274 - #40 size
INFO  15:49:08,274 - #37 ]
INFO  15:49:08,274 - #31 ;
INFO  15:49:08,274 - #40 val
INFO  15:49:08,274 - #33 .
INFO  15:49:08,274 - #40 neg
INFO  15:49:08,275 - #28 =
INFO  15:49:08,275 - #9 new
INFO  15:49:08,275 - #40 int
INFO  15:49:08,275 - #36 [
INFO  15:49:08,275 - #40 size
INFO  15:49:08,275 - #37 ]
INFO  15:49:08,275 - #31 ;
INFO  15:49:08,275 - #40 i
INFO  15:49:08,275 - #28 =
INFO  15:49:08,275 - #42 0
INFO  15:49:08,275 - #31 ;
INFO  15:49:08,275 - #11 do
INFO  15:49:08,275 - #38 {
INFO  15:49:08,275 - #40 val
INFO  15:49:08,275 - #33 .
INFO  15:49:08,275 - #40 putp
INFO  15:49:08,276 - #34 (
INFO  15:49:08,276 - #42 0
INFO  15:49:08,276 - #32 ,
INFO  15:49:08,276 - #40 i
INFO  15:49:08,276 - #35 )
INFO  15:49:08,276 - #31 ;
INFO  15:49:08,276 - #40 val
INFO  15:49:08,276 - #33 .
INFO  15:49:08,276 - #40 putn
INFO  15:49:08,277 - #34 (
INFO  15:49:08,277 - #42 0
INFO  15:49:08,277 - #32 ,
INFO  15:49:08,277 - #40 i
INFO  15:49:08,277 - #35 )
INFO  15:49:08,277 - #31 ;
INFO  15:49:08,277 - #40 i
INFO  15:49:08,277 - #29 ++
INFO  15:49:08,277 - #31 ;
INFO  15:49:08,277 - #39 }
INFO  15:49:08,277 - #12 while
INFO  15:49:08,278 - #34 (
INFO  15:49:08,278 - #40 i
INFO  15:49:08,278 - #24 <
INFO  15:49:08,278 - #40 size
INFO  15:49:08,278 - #35 )
INFO  15:49:08,278 - #31 ;
INFO  15:49:08,278 - #10 read
INFO  15:49:08,278 - #34 (
INFO  15:49:08,278 - #40 x
INFO  15:49:08,278 - #35 )
INFO  15:49:08,278 - #31 ;
INFO  15:49:08,279 - #11 do
INFO  15:49:08,279 - #38 {
INFO  15:49:08,279 - #5 if
INFO  15:49:08,279 - #34 (
INFO  15:49:08,279 - #40 x
INFO  15:49:08,279 - #23 >=
INFO  15:49:08,279 - #40 size
INFO  15:49:08,279 - #35 )
INFO  15:49:08,279 - #7 break
INFO  15:49:08,279 - #31 ;
INFO  15:49:08,279 - #5 if
INFO  15:49:08,279 - #34 (
INFO  15:49:08,280 - #42 0
INFO  15:49:08,280 - #25 <=
INFO  15:49:08,280 - #40 x
INFO  15:49:08,280 - #26 &&
INFO  15:49:08,280 - #40 x
INFO  15:49:08,280 - #24 <
INFO  15:49:08,280 - #40 size
INFO  15:49:08,280 - #35 )
INFO  15:49:08,280 - #38 {
INFO  15:49:08,280 - #40 val
INFO  15:49:08,280 - #33 .
INFO  15:49:08,283 - #40 putp
INFO  15:49:08,283 - #34 (
INFO  15:49:08,283 - #40 val
INFO  15:49:08,283 - #33 .
INFO  15:49:08,283 - #40 getp
INFO  15:49:08,283 - #34 (
INFO  15:49:08,283 - #40 x
INFO  15:49:08,283 - #35 )
INFO  15:49:08,283 - #15 +
INFO  15:49:08,283 - #42 1
INFO  15:49:08,283 - #35 )
INFO  15:49:08,283 - #31 ;
INFO  15:49:08,283 - #39 }
INFO  15:49:08,283 - #6 else
INFO  15:49:08,283 - #5 if
INFO  15:49:08,283 - #34 (
INFO  15:49:08,283 - #16 -
INFO  15:49:08,283 - #40 size
INFO  15:49:08,283 - #24 <
INFO  15:49:08,283 - #40 x
INFO  15:49:08,284 - #26 &&
INFO  15:49:08,284 - #40 x
INFO  15:49:08,284 - #24 <
INFO  15:49:08,284 - #42 0
INFO  15:49:08,284 - #35 )
INFO  15:49:08,284 - #38 {
INFO  15:49:08,284 - #40 val
INFO  15:49:08,284 - #33 .
INFO  15:49:08,284 - #40 putn
INFO  15:49:08,284 - #34 (
INFO  15:49:08,284 - #40 val
INFO  15:49:08,284 - #33 .
INFO  15:49:08,284 - #40 getn
INFO  15:49:08,284 - #34 (
INFO  15:49:08,284 - #16 -
INFO  15:49:08,284 - #40 x
INFO  15:49:08,284 - #35 )
INFO  15:49:08,284 - #15 +
INFO  15:49:08,284 - #42 1
INFO  15:49:08,284 - #35 )
INFO  15:49:08,284 - #31 ;
INFO  15:49:08,284 - #39 }
INFO  15:49:08,284 - #10 read
INFO  15:49:08,284 - #34 (
INFO  15:49:08,284 - #40 x
INFO  15:49:08,284 - #35 )
INFO  15:49:08,284 - #31 ;
INFO  15:49:08,284 - #39 }
INFO  15:49:08,284 - #39 }
INFO  15:49:08,284 - #12 while
INFO  15:49:08,284 - #34 (
INFO  15:49:08,284 - #40 true
INFO  15:49:08,285 - #35 )
INFO  15:49:08,285 - #31 ;
INFO  15:49:08,285 - #39 }
