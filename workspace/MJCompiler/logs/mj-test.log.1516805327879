INFO  15:47:42,127 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  15:47:42,132 - #1 program
INFO  15:47:42,132 - #40 P
INFO  15:47:42,133 - #40 const
INFO  15:47:42,133 - #40 int
INFO  15:47:42,133 - #40 size
INFO  15:47:42,133 - #28 =
INFO  15:47:42,133 - #42 10
INFO  15:47:42,133 - #31 ;
INFO  15:47:42,133 - #43 "
INFO  15:47:42,133 - #40 ADSF
INFO  15:47:42,133 - #43 "
INFO  15:47:42,133 - #8 class
INFO  15:47:42,133 - #40 Table
INFO  15:47:42,133 - #38 {
INFO  15:47:42,134 - #40 int
INFO  15:47:42,134 - #40 pos
INFO  15:47:42,134 - #36 [
INFO  15:47:42,134 - #37 ]
INFO  15:47:42,134 - #32 ,
INFO  15:47:42,134 - #40 neg
INFO  15:47:42,134 - #36 [
INFO  15:47:42,134 - #37 ]
INFO  15:47:42,134 - #31 ;
INFO  15:47:42,134 - #38 {
INFO  15:47:42,134 - #4 void
INFO  15:47:42,134 - #40 putp
INFO  15:47:42,134 - #34 (
INFO  15:47:42,134 - #40 int
INFO  15:47:42,134 - #40 a
INFO  15:47:42,135 - #32 ,
INFO  15:47:42,135 - #40 int
INFO  15:47:42,135 - #40 idx
INFO  15:47:42,135 - #35 )
INFO  15:47:42,135 - #38 {
INFO  15:47:42,135 - #40 this
INFO  15:47:42,135 - #33 .
INFO  15:47:42,135 - #40 pos
INFO  15:47:42,135 - #36 [
INFO  15:47:42,135 - #40 idx
INFO  15:47:42,135 - #37 ]
INFO  15:47:42,135 - #28 =
INFO  15:47:42,135 - #40 a
INFO  15:47:42,135 - #31 ;
INFO  15:47:42,135 - #39 }
INFO  15:47:42,135 - #4 void
INFO  15:47:42,135 - #40 putn
INFO  15:47:42,135 - #34 (
INFO  15:47:42,136 - #40 int
INFO  15:47:42,136 - #40 a
INFO  15:47:42,136 - #32 ,
INFO  15:47:42,136 - #40 int
INFO  15:47:42,136 - #40 idx
INFO  15:47:42,136 - #35 )
INFO  15:47:42,136 - #38 {
INFO  15:47:42,136 - #40 this
INFO  15:47:42,136 - #33 .
INFO  15:47:42,136 - #40 neg
INFO  15:47:42,136 - #36 [
INFO  15:47:42,136 - #40 idx
INFO  15:47:42,136 - #37 ]
INFO  15:47:42,136 - #28 =
INFO  15:47:42,136 - #40 a
INFO  15:47:42,136 - #31 ;
INFO  15:47:42,137 - #39 }
INFO  15:47:42,137 - #40 int
INFO  15:47:42,137 - #40 getp
INFO  15:47:42,137 - #34 (
INFO  15:47:42,137 - #40 int
INFO  15:47:42,139 - #40 idx
INFO  15:47:42,139 - #35 )
INFO  15:47:42,139 - #38 {
INFO  15:47:42,139 - #3 return
INFO  15:47:42,139 - #40 pos
INFO  15:47:42,139 - #36 [
INFO  15:47:42,139 - #40 idx
INFO  15:47:42,139 - #37 ]
INFO  15:47:42,139 - #31 ;
INFO  15:47:42,139 - #39 }
INFO  15:47:42,139 - #40 int
INFO  15:47:42,139 - #40 getn
INFO  15:47:42,139 - #34 (
INFO  15:47:42,139 - #40 int
INFO  15:47:42,139 - #40 idx
INFO  15:47:42,139 - #35 )
INFO  15:47:42,140 - #38 {
INFO  15:47:42,140 - #3 return
INFO  15:47:42,140 - #40 neg
INFO  15:47:42,140 - #36 [
INFO  15:47:42,140 - #40 idx
INFO  15:47:42,140 - #37 ]
INFO  15:47:42,140 - #31 ;
INFO  15:47:42,140 - #39 }
INFO  15:47:42,140 - #39 }
INFO  15:47:42,140 - #39 }
INFO  15:47:42,140 - #40 Table
INFO  15:47:42,140 - #40 val
INFO  15:47:42,140 - #31 ;
INFO  15:47:42,140 - #38 {
INFO  15:47:42,141 - #4 void
INFO  15:47:42,141 - #40 main
INFO  15:47:42,141 - #34 (
INFO  15:47:42,141 - #35 )
INFO  15:47:42,141 - #40 int
INFO  15:47:42,141 - #40 x
INFO  15:47:42,141 - #32 ,
INFO  15:47:42,141 - #40 i
INFO  15:47:42,141 - #31 ;
INFO  15:47:42,141 - #38 {
INFO  15:47:42,142 - #40 val
INFO  15:47:42,142 - #28 =
INFO  15:47:42,142 - #9 new
INFO  15:47:42,142 - #40 Table
INFO  15:47:42,142 - #31 ;
INFO  15:47:42,142 - #40 val
INFO  15:47:42,142 - #33 .
INFO  15:47:42,142 - #40 pos
INFO  15:47:42,142 - #28 =
INFO  15:47:42,142 - #9 new
INFO  15:47:42,142 - #40 int
INFO  15:47:42,142 - #36 [
INFO  15:47:42,142 - #40 size
INFO  15:47:42,142 - #37 ]
INFO  15:47:42,142 - #31 ;
INFO  15:47:42,142 - #40 val
INFO  15:47:42,143 - #33 .
INFO  15:47:42,143 - #40 neg
INFO  15:47:42,143 - #28 =
INFO  15:47:42,143 - #9 new
INFO  15:47:42,143 - #40 int
INFO  15:47:42,143 - #36 [
INFO  15:47:42,143 - #40 size
INFO  15:47:42,143 - #37 ]
INFO  15:47:42,143 - #31 ;
INFO  15:47:42,143 - #40 i
INFO  15:47:42,143 - #28 =
INFO  15:47:42,143 - #42 0
INFO  15:47:42,143 - #31 ;
INFO  15:47:42,144 - #11 do
INFO  15:47:42,144 - #38 {
INFO  15:47:42,144 - #40 val
INFO  15:47:42,144 - #33 .
INFO  15:47:42,144 - #40 putp
INFO  15:47:42,144 - #34 (
INFO  15:47:42,144 - #42 0
INFO  15:47:42,144 - #32 ,
INFO  15:47:42,144 - #40 i
INFO  15:47:42,144 - #35 )
INFO  15:47:42,144 - #31 ;
INFO  15:47:42,144 - #40 val
INFO  15:47:42,144 - #33 .
INFO  15:47:42,144 - #40 putn
INFO  15:47:42,144 - #34 (
INFO  15:47:42,145 - #42 0
INFO  15:47:42,145 - #32 ,
INFO  15:47:42,145 - #40 i
INFO  15:47:42,145 - #35 )
INFO  15:47:42,145 - #31 ;
INFO  15:47:42,145 - #40 i
INFO  15:47:42,145 - #29 ++
INFO  15:47:42,145 - #31 ;
INFO  15:47:42,145 - #39 }
INFO  15:47:42,145 - #12 while
INFO  15:47:42,145 - #34 (
INFO  15:47:42,146 - #40 i
INFO  15:47:42,146 - #24 <
INFO  15:47:42,146 - #40 size
INFO  15:47:42,146 - #35 )
INFO  15:47:42,146 - #31 ;
INFO  15:47:42,146 - #10 read
INFO  15:47:42,146 - #34 (
INFO  15:47:42,146 - #40 x
INFO  15:47:42,146 - #35 )
INFO  15:47:42,146 - #31 ;
INFO  15:47:42,146 - #11 do
INFO  15:47:42,147 - #38 {
INFO  15:47:42,147 - #5 if
INFO  15:47:42,147 - #34 (
INFO  15:47:42,147 - #40 x
INFO  15:47:42,147 - #23 >=
INFO  15:47:42,147 - #40 size
INFO  15:47:42,147 - #35 )
INFO  15:47:42,147 - #7 break
INFO  15:47:42,147 - #31 ;
INFO  15:47:42,147 - #5 if
INFO  15:47:42,147 - #34 (
INFO  15:47:42,147 - #42 0
INFO  15:47:42,147 - #25 <=
INFO  15:47:42,147 - #40 x
INFO  15:47:42,148 - #26 &&
INFO  15:47:42,148 - #40 x
INFO  15:47:42,148 - #24 <
INFO  15:47:42,148 - #40 size
INFO  15:47:42,148 - #35 )
INFO  15:47:42,148 - #38 {
INFO  15:47:42,148 - #40 val
INFO  15:47:42,148 - #33 .
INFO  15:47:42,148 - #40 putp
INFO  15:47:42,148 - #34 (
INFO  15:47:42,148 - #40 val
INFO  15:47:42,148 - #33 .
INFO  15:47:42,148 - #40 getp
INFO  15:47:42,148 - #34 (
INFO  15:47:42,148 - #40 x
INFO  15:47:42,149 - #35 )
INFO  15:47:42,149 - #15 +
INFO  15:47:42,149 - #42 1
INFO  15:47:42,149 - #35 )
INFO  15:47:42,150 - #31 ;
INFO  15:47:42,150 - #39 }
INFO  15:47:42,150 - #6 else
INFO  15:47:42,150 - #5 if
INFO  15:47:42,150 - #34 (
INFO  15:47:42,150 - #16 -
INFO  15:47:42,150 - #40 size
INFO  15:47:42,150 - #24 <
INFO  15:47:42,150 - #40 x
INFO  15:47:42,150 - #26 &&
INFO  15:47:42,150 - #40 x
INFO  15:47:42,150 - #24 <
INFO  15:47:42,150 - #42 0
INFO  15:47:42,150 - #35 )
INFO  15:47:42,150 - #38 {
INFO  15:47:42,150 - #40 val
INFO  15:47:42,150 - #33 .
INFO  15:47:42,150 - #40 putn
INFO  15:47:42,150 - #34 (
INFO  15:47:42,150 - #40 val
INFO  15:47:42,151 - #33 .
INFO  15:47:42,151 - #40 getn
INFO  15:47:42,151 - #34 (
INFO  15:47:42,151 - #16 -
INFO  15:47:42,151 - #40 x
INFO  15:47:42,151 - #35 )
INFO  15:47:42,151 - #15 +
INFO  15:47:42,151 - #42 1
INFO  15:47:42,151 - #35 )
INFO  15:47:42,151 - #31 ;
INFO  15:47:42,151 - #39 }
INFO  15:47:42,151 - #10 read
INFO  15:47:42,151 - #34 (
INFO  15:47:42,151 - #40 x
INFO  15:47:42,151 - #35 )
INFO  15:47:42,152 - #31 ;
INFO  15:47:42,152 - #39 }
INFO  15:47:42,152 - #39 }
INFO  15:47:42,152 - #12 while
INFO  15:47:42,152 - #34 (
INFO  15:47:42,152 - #40 true
INFO  15:47:42,152 - #35 )
INFO  15:47:42,152 - #31 ;
INFO  15:47:42,152 - #39 }
