INFO  15:48:47,882 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  15:48:47,886 - #1 program
INFO  15:48:47,886 - #40 P
INFO  15:48:47,886 - #40 const
INFO  15:48:47,886 - #40 int
INFO  15:48:47,886 - #40 size
INFO  15:48:47,886 - #28 =
INFO  15:48:47,886 - #42 10
INFO  15:48:47,886 - #31 ;
INFO  15:48:47,886 - #43 "
INFO  15:48:47,886 - #40 ADSF
INFO  15:48:47,886 - #43 "
INFO  15:48:47,886 - #8 class
INFO  15:48:47,887 - #40 Table
INFO  15:48:47,887 - #38 {
INFO  15:48:47,887 - #40 int
INFO  15:48:47,887 - #40 pos
INFO  15:48:47,887 - #36 [
INFO  15:48:47,887 - #37 ]
INFO  15:48:47,887 - #32 ,
INFO  15:48:47,887 - #40 neg
INFO  15:48:47,887 - #36 [
INFO  15:48:47,887 - #37 ]
INFO  15:48:47,887 - #31 ;
INFO  15:48:47,887 - #38 {
INFO  15:48:47,887 - #4 void
INFO  15:48:47,887 - #40 putp
INFO  15:48:47,887 - #34 (
INFO  15:48:47,887 - #40 int
INFO  15:48:47,887 - #40 a
INFO  15:48:47,887 - #32 ,
INFO  15:48:47,887 - #40 int
INFO  15:48:47,888 - #40 idx
INFO  15:48:47,888 - #35 )
INFO  15:48:47,888 - #38 {
INFO  15:48:47,888 - #40 this
INFO  15:48:47,888 - #33 .
INFO  15:48:47,888 - #40 pos
INFO  15:48:47,888 - #36 [
INFO  15:48:47,888 - #40 idx
INFO  15:48:47,888 - #37 ]
INFO  15:48:47,888 - #28 =
INFO  15:48:47,888 - #40 a
INFO  15:48:47,888 - #31 ;
INFO  15:48:47,888 - #39 }
INFO  15:48:47,888 - #4 void
INFO  15:48:47,888 - #40 putn
INFO  15:48:47,888 - #34 (
INFO  15:48:47,888 - #40 int
INFO  15:48:47,888 - #40 a
INFO  15:48:47,888 - #32 ,
INFO  15:48:47,888 - #40 int
INFO  15:48:47,889 - #40 idx
INFO  15:48:47,889 - #35 )
INFO  15:48:47,889 - #38 {
INFO  15:48:47,889 - #40 this
INFO  15:48:47,889 - #33 .
INFO  15:48:47,889 - #40 neg
INFO  15:48:47,889 - #36 [
INFO  15:48:47,889 - #40 idx
INFO  15:48:47,889 - #37 ]
INFO  15:48:47,889 - #28 =
INFO  15:48:47,889 - #40 a
INFO  15:48:47,889 - #31 ;
INFO  15:48:47,889 - #39 }
INFO  15:48:47,889 - #40 int
INFO  15:48:47,889 - #40 getp
INFO  15:48:47,889 - #34 (
INFO  15:48:47,889 - #40 int
INFO  15:48:47,890 - #40 idx
INFO  15:48:47,890 - #35 )
INFO  15:48:47,890 - #38 {
INFO  15:48:47,890 - #3 return
INFO  15:48:47,890 - #40 pos
INFO  15:48:47,890 - #36 [
INFO  15:48:47,890 - #40 idx
INFO  15:48:47,890 - #37 ]
INFO  15:48:47,890 - #31 ;
INFO  15:48:47,890 - #39 }
INFO  15:48:47,890 - #40 int
INFO  15:48:47,890 - #40 getn
INFO  15:48:47,890 - #34 (
INFO  15:48:47,890 - #40 int
INFO  15:48:47,890 - #40 idx
INFO  15:48:47,890 - #35 )
INFO  15:48:47,890 - #38 {
INFO  15:48:47,890 - #3 return
INFO  15:48:47,890 - #40 neg
INFO  15:48:47,891 - #36 [
INFO  15:48:47,891 - #40 idx
INFO  15:48:47,891 - #37 ]
INFO  15:48:47,891 - #31 ;
INFO  15:48:47,891 - #39 }
INFO  15:48:47,891 - #39 }
INFO  15:48:47,891 - #39 }
INFO  15:48:47,891 - #40 Table
INFO  15:48:47,891 - #40 val
INFO  15:48:47,891 - #31 ;
INFO  15:48:47,891 - #38 {
INFO  15:48:47,891 - #4 void
INFO  15:48:47,892 - #40 main
INFO  15:48:47,892 - #34 (
INFO  15:48:47,892 - #35 )
INFO  15:48:47,892 - #40 int
INFO  15:48:47,892 - #40 x
INFO  15:48:47,892 - #32 ,
INFO  15:48:47,892 - #40 i
INFO  15:48:47,892 - #31 ;
INFO  15:48:47,892 - #38 {
INFO  15:48:47,892 - #40 val
INFO  15:48:47,892 - #28 =
INFO  15:48:47,892 - #9 new
INFO  15:48:47,892 - #40 Table
INFO  15:48:47,892 - #31 ;
INFO  15:48:47,893 - #40 val
INFO  15:48:47,893 - #33 .
INFO  15:48:47,893 - #40 pos
INFO  15:48:47,893 - #28 =
INFO  15:48:47,893 - #9 new
INFO  15:48:47,893 - #40 int
INFO  15:48:47,893 - #36 [
INFO  15:48:47,893 - #40 size
INFO  15:48:47,893 - #37 ]
INFO  15:48:47,893 - #31 ;
INFO  15:48:47,893 - #40 val
INFO  15:48:47,894 - #33 .
INFO  15:48:47,894 - #40 neg
INFO  15:48:47,894 - #28 =
INFO  15:48:47,894 - #9 new
INFO  15:48:47,894 - #40 int
INFO  15:48:47,894 - #36 [
INFO  15:48:47,894 - #40 size
INFO  15:48:47,894 - #37 ]
INFO  15:48:47,897 - #31 ;
INFO  15:48:47,897 - #40 i
INFO  15:48:47,897 - #28 =
INFO  15:48:47,897 - #42 0
INFO  15:48:47,897 - #31 ;
INFO  15:48:47,897 - #11 do
INFO  15:48:47,897 - #38 {
INFO  15:48:47,897 - #40 val
INFO  15:48:47,897 - #33 .
INFO  15:48:47,897 - #40 putp
INFO  15:48:47,897 - #34 (
INFO  15:48:47,897 - #42 0
INFO  15:48:47,897 - #32 ,
INFO  15:48:47,897 - #40 i
INFO  15:48:47,897 - #35 )
INFO  15:48:47,897 - #31 ;
INFO  15:48:47,897 - #40 val
INFO  15:48:47,898 - #33 .
INFO  15:48:47,898 - #40 putn
INFO  15:48:47,898 - #34 (
INFO  15:48:47,898 - #42 0
INFO  15:48:47,899 - #32 ,
INFO  15:48:47,899 - #40 i
INFO  15:48:47,899 - #35 )
INFO  15:48:47,899 - #31 ;
INFO  15:48:47,899 - #40 i
INFO  15:48:47,899 - #29 ++
INFO  15:48:47,900 - #31 ;
INFO  15:48:47,900 - #39 }
INFO  15:48:47,900 - #12 while
INFO  15:48:47,900 - #34 (
INFO  15:48:47,900 - #40 i
INFO  15:48:47,900 - #24 <
INFO  15:48:47,900 - #40 size
INFO  15:48:47,900 - #35 )
INFO  15:48:47,900 - #31 ;
INFO  15:48:47,900 - #10 read
INFO  15:48:47,900 - #34 (
INFO  15:48:47,900 - #40 x
INFO  15:48:47,900 - #35 )
INFO  15:48:47,900 - #31 ;
INFO  15:48:47,900 - #11 do
INFO  15:48:47,900 - #38 {
INFO  15:48:47,901 - #5 if
INFO  15:48:47,901 - #34 (
INFO  15:48:47,901 - #40 x
INFO  15:48:47,901 - #23 >=
INFO  15:48:47,901 - #40 size
INFO  15:48:47,901 - #35 )
INFO  15:48:47,901 - #7 break
INFO  15:48:47,901 - #31 ;
INFO  15:48:47,901 - #5 if
INFO  15:48:47,901 - #34 (
INFO  15:48:47,901 - #42 0
INFO  15:48:47,901 - #25 <=
INFO  15:48:47,901 - #40 x
INFO  15:48:47,901 - #26 &&
INFO  15:48:47,901 - #40 x
INFO  15:48:47,901 - #24 <
INFO  15:48:47,901 - #40 size
INFO  15:48:47,901 - #35 )
INFO  15:48:47,901 - #38 {
INFO  15:48:47,902 - #40 val
INFO  15:48:47,902 - #33 .
INFO  15:48:47,902 - #40 putp
INFO  15:48:47,902 - #34 (
INFO  15:48:47,902 - #40 val
INFO  15:48:47,902 - #33 .
INFO  15:48:47,902 - #40 getp
INFO  15:48:47,902 - #34 (
INFO  15:48:47,902 - #40 x
INFO  15:48:47,902 - #35 )
INFO  15:48:47,902 - #15 +
INFO  15:48:47,902 - #42 1
INFO  15:48:47,902 - #35 )
INFO  15:48:47,902 - #31 ;
INFO  15:48:47,902 - #39 }
INFO  15:48:47,903 - #6 else
INFO  15:48:47,903 - #5 if
INFO  15:48:47,903 - #34 (
INFO  15:48:47,903 - #16 -
INFO  15:48:47,903 - #40 size
INFO  15:48:47,903 - #24 <
INFO  15:48:47,903 - #40 x
INFO  15:48:47,903 - #26 &&
INFO  15:48:47,903 - #40 x
INFO  15:48:47,903 - #24 <
INFO  15:48:47,903 - #42 0
INFO  15:48:47,903 - #35 )
INFO  15:48:47,904 - #38 {
INFO  15:48:47,904 - #40 val
INFO  15:48:47,904 - #33 .
INFO  15:48:47,904 - #40 putn
INFO  15:48:47,904 - #34 (
INFO  15:48:47,904 - #40 val
INFO  15:48:47,904 - #33 .
INFO  15:48:47,904 - #40 getn
INFO  15:48:47,904 - #34 (
INFO  15:48:47,904 - #16 -
INFO  15:48:47,904 - #40 x
INFO  15:48:47,904 - #35 )
INFO  15:48:47,904 - #15 +
INFO  15:48:47,904 - #42 1
INFO  15:48:47,904 - #35 )
INFO  15:48:47,904 - #31 ;
INFO  15:48:47,904 - #39 }
INFO  15:48:47,904 - #10 read
INFO  15:48:47,904 - #34 (
INFO  15:48:47,904 - #40 x
INFO  15:48:47,904 - #35 )
INFO  15:48:47,904 - #31 ;
INFO  15:48:47,904 - #39 }
INFO  15:48:47,904 - #39 }
INFO  15:48:47,904 - #12 while
INFO  15:48:47,904 - #34 (
INFO  15:48:47,904 - #40 true
INFO  15:48:47,905 - #35 )
INFO  15:48:47,905 - #31 ;
INFO  15:48:47,905 - #39 }
