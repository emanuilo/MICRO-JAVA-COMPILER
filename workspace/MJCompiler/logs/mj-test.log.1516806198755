INFO  16:02:45,346 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  16:02:45,349 - #1 program
INFO  16:02:45,349 - #43 P
INFO  16:02:45,349 - #40 const
INFO  16:02:45,349 - #40 int
INFO  16:02:45,350 - #40 size
INFO  16:02:45,350 - #28 =
INFO  16:02:45,350 - #42 10
INFO  16:02:45,350 - #31 ;
INFO  16:02:45,350 - #43 "
INFO  16:02:45,350 - #43 g
INFO  16:02:45,350 - #43 "
INFO  16:02:45,350 - #8 class
INFO  16:02:45,350 - #40 Table
INFO  16:02:45,350 - #38 {
INFO  16:02:45,350 - #40 int
INFO  16:02:45,350 - #40 pos
INFO  16:02:45,350 - #36 [
INFO  16:02:45,351 - #37 ]
INFO  16:02:45,351 - #32 ,
INFO  16:02:45,351 - #40 neg
INFO  16:02:45,351 - #36 [
INFO  16:02:45,351 - #37 ]
INFO  16:02:45,351 - #31 ;
INFO  16:02:45,351 - #38 {
INFO  16:02:45,351 - #4 void
INFO  16:02:45,351 - #40 putp
INFO  16:02:45,351 - #34 (
INFO  16:02:45,351 - #40 int
INFO  16:02:45,351 - #43 a
INFO  16:02:45,352 - #32 ,
INFO  16:02:45,352 - #40 int
INFO  16:02:45,352 - #40 idx
INFO  16:02:45,352 - #35 )
INFO  16:02:45,352 - #38 {
INFO  16:02:45,352 - #40 this
INFO  16:02:45,352 - #33 .
INFO  16:02:45,352 - #40 pos
INFO  16:02:45,352 - #36 [
INFO  16:02:45,352 - #40 idx
INFO  16:02:45,352 - #37 ]
INFO  16:02:45,352 - #28 =
INFO  16:02:45,352 - #43 a
INFO  16:02:45,353 - #31 ;
INFO  16:02:45,353 - #39 }
INFO  16:02:45,353 - #4 void
INFO  16:02:45,353 - #40 putn
INFO  16:02:45,353 - #34 (
INFO  16:02:45,353 - #40 int
INFO  16:02:45,353 - #43 a
INFO  16:02:45,353 - #32 ,
INFO  16:02:45,353 - #40 int
INFO  16:02:45,354 - #40 idx
INFO  16:02:45,354 - #35 )
INFO  16:02:45,354 - #38 {
INFO  16:02:45,354 - #40 this
INFO  16:02:45,354 - #33 .
INFO  16:02:45,354 - #40 neg
INFO  16:02:45,354 - #36 [
INFO  16:02:45,354 - #40 idx
INFO  16:02:45,354 - #37 ]
INFO  16:02:45,355 - #28 =
INFO  16:02:45,355 - #43 a
INFO  16:02:45,355 - #31 ;
INFO  16:02:45,355 - #39 }
INFO  16:02:45,355 - #40 int
INFO  16:02:45,355 - #40 getp
INFO  16:02:45,355 - #34 (
INFO  16:02:45,355 - #40 int
INFO  16:02:45,355 - #40 idx
INFO  16:02:45,356 - #35 )
INFO  16:02:45,356 - #38 {
INFO  16:02:45,356 - #3 return
INFO  16:02:45,356 - #40 pos
INFO  16:02:45,356 - #36 [
INFO  16:02:45,356 - #40 idx
INFO  16:02:45,356 - #37 ]
INFO  16:02:45,356 - #31 ;
INFO  16:02:45,356 - #39 }
INFO  16:02:45,356 - #40 int
INFO  16:02:45,357 - #40 getn
INFO  16:02:45,357 - #34 (
INFO  16:02:45,357 - #40 int
INFO  16:02:45,357 - #40 idx
INFO  16:02:45,357 - #35 )
INFO  16:02:45,357 - #38 {
INFO  16:02:45,357 - #3 return
INFO  16:02:45,357 - #40 neg
INFO  16:02:45,357 - #36 [
INFO  16:02:45,357 - #40 idx
INFO  16:02:45,357 - #37 ]
INFO  16:02:45,357 - #31 ;
INFO  16:02:45,357 - #39 }
INFO  16:02:45,357 - #39 }
INFO  16:02:45,358 - #39 }
INFO  16:02:45,358 - #40 Table
INFO  16:02:45,358 - #40 val
INFO  16:02:45,359 - #31 ;
INFO  16:02:45,359 - #38 {
INFO  16:02:45,359 - #4 void
INFO  16:02:45,359 - #40 main
INFO  16:02:45,360 - #34 (
INFO  16:02:45,360 - #35 )
INFO  16:02:45,360 - #40 int
INFO  16:02:45,360 - #43 x
INFO  16:02:45,360 - #32 ,
INFO  16:02:45,360 - #43 i
INFO  16:02:45,361 - #31 ;
INFO  16:02:45,361 - #38 {
INFO  16:02:45,361 - #40 val
INFO  16:02:45,361 - #28 =
INFO  16:02:45,361 - #9 new
INFO  16:02:45,361 - #40 Table
INFO  16:02:45,361 - #31 ;
INFO  16:02:45,361 - #40 val
INFO  16:02:45,361 - #33 .
INFO  16:02:45,361 - #40 pos
INFO  16:02:45,362 - #28 =
INFO  16:02:45,362 - #9 new
INFO  16:02:45,362 - #40 int
INFO  16:02:45,362 - #36 [
INFO  16:02:45,362 - #40 size
INFO  16:02:45,363 - #37 ]
INFO  16:02:45,363 - #31 ;
INFO  16:02:45,363 - #40 val
INFO  16:02:45,363 - #33 .
INFO  16:02:45,363 - #40 neg
INFO  16:02:45,363 - #28 =
INFO  16:02:45,364 - #9 new
INFO  16:02:45,364 - #40 int
INFO  16:02:45,365 - #36 [
INFO  16:02:45,365 - #40 size
INFO  16:02:45,365 - #37 ]
INFO  16:02:45,369 - #31 ;
INFO  16:02:45,369 - #43 i
INFO  16:02:45,369 - #28 =
INFO  16:02:45,370 - #42 0
INFO  16:02:45,370 - #31 ;
INFO  16:02:45,370 - #11 do
INFO  16:02:45,370 - #38 {
INFO  16:02:45,370 - #40 val
INFO  16:02:45,370 - #33 .
INFO  16:02:45,370 - #40 putp
INFO  16:02:45,370 - #34 (
INFO  16:02:45,370 - #42 0
INFO  16:02:45,371 - #32 ,
INFO  16:02:45,371 - #43 i
INFO  16:02:45,371 - #35 )
INFO  16:02:45,371 - #31 ;
INFO  16:02:45,371 - #40 val
INFO  16:02:45,371 - #33 .
INFO  16:02:45,371 - #40 putn
INFO  16:02:45,371 - #34 (
INFO  16:02:45,371 - #42 0
INFO  16:02:45,372 - #32 ,
INFO  16:02:45,372 - #43 i
INFO  16:02:45,372 - #35 )
INFO  16:02:45,373 - #31 ;
INFO  16:02:45,373 - #43 i
INFO  16:02:45,373 - #29 ++
INFO  16:02:45,373 - #31 ;
INFO  16:02:45,373 - #39 }
INFO  16:02:45,373 - #12 while
INFO  16:02:45,373 - #34 (
INFO  16:02:45,373 - #43 i
INFO  16:02:45,373 - #24 <
INFO  16:02:45,374 - #40 size
INFO  16:02:45,374 - #35 )
INFO  16:02:45,374 - #31 ;
INFO  16:02:45,374 - #10 read
INFO  16:02:45,374 - #34 (
INFO  16:02:45,374 - #43 x
INFO  16:02:45,375 - #35 )
INFO  16:02:45,375 - #31 ;
INFO  16:02:45,375 - #11 do
INFO  16:02:45,375 - #38 {
INFO  16:02:45,375 - #5 if
INFO  16:02:45,375 - #34 (
INFO  16:02:45,375 - #43 x
INFO  16:02:45,375 - #23 >=
INFO  16:02:45,375 - #40 size
INFO  16:02:45,375 - #35 )
INFO  16:02:45,375 - #7 break
INFO  16:02:45,375 - #31 ;
INFO  16:02:45,376 - #5 if
INFO  16:02:45,376 - #34 (
INFO  16:02:45,376 - #42 0
INFO  16:02:45,376 - #25 <=
INFO  16:02:45,376 - #43 x
INFO  16:02:45,376 - #26 &&
INFO  16:02:45,376 - #43 x
INFO  16:02:45,376 - #24 <
INFO  16:02:45,376 - #40 size
INFO  16:02:45,376 - #35 )
INFO  16:02:45,376 - #38 {
INFO  16:02:45,377 - #40 val
INFO  16:02:45,377 - #33 .
INFO  16:02:45,377 - #40 putp
INFO  16:02:45,377 - #34 (
INFO  16:02:45,377 - #40 val
INFO  16:02:45,377 - #33 .
INFO  16:02:45,377 - #40 getp
INFO  16:02:45,377 - #34 (
INFO  16:02:45,377 - #43 x
INFO  16:02:45,377 - #35 )
INFO  16:02:45,377 - #15 +
INFO  16:02:45,377 - #42 1
INFO  16:02:45,377 - #35 )
INFO  16:02:45,377 - #31 ;
INFO  16:02:45,378 - #39 }
INFO  16:02:45,378 - #6 else
INFO  16:02:45,378 - #5 if
INFO  16:02:45,378 - #34 (
INFO  16:02:45,378 - #16 -
INFO  16:02:45,378 - #40 size
INFO  16:02:45,378 - #24 <
INFO  16:02:45,379 - #43 x
INFO  16:02:45,379 - #26 &&
INFO  16:02:45,379 - #43 x
INFO  16:02:45,379 - #24 <
INFO  16:02:45,379 - #42 0
INFO  16:02:45,379 - #35 )
INFO  16:02:45,379 - #38 {
INFO  16:02:45,379 - #40 val
INFO  16:02:45,379 - #33 .
INFO  16:02:45,379 - #40 putn
INFO  16:02:45,379 - #34 (
INFO  16:02:45,379 - #40 val
INFO  16:02:45,380 - #33 .
INFO  16:02:45,380 - #40 getn
INFO  16:02:45,380 - #34 (
INFO  16:02:45,380 - #16 -
INFO  16:02:45,380 - #43 x
INFO  16:02:45,380 - #35 )
INFO  16:02:45,380 - #15 +
INFO  16:02:45,380 - #42 1
INFO  16:02:45,380 - #35 )
INFO  16:02:45,380 - #31 ;
INFO  16:02:45,380 - #39 }
INFO  16:02:45,380 - #10 read
INFO  16:02:45,380 - #34 (
INFO  16:02:45,380 - #43 x
INFO  16:02:45,381 - #35 )
INFO  16:02:45,381 - #31 ;
INFO  16:02:45,381 - #39 }
INFO  16:02:45,381 - #39 }
INFO  16:02:45,381 - #12 while
INFO  16:02:45,381 - #34 (
INFO  16:02:45,381 - #40 true
INFO  16:02:45,381 - #35 )
INFO  16:02:45,381 - #31 ;
INFO  16:02:45,381 - #39 }
