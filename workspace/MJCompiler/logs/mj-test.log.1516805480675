INFO  15:50:38,124 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  15:50:38,128 - #1 program
INFO  15:50:38,128 - #40 P
INFO  15:50:38,128 - #40 const
INFO  15:50:38,128 - #40 int
INFO  15:50:38,128 - #40 size
INFO  15:50:38,128 - #28 =
INFO  15:50:38,128 - #42 10
INFO  15:50:38,128 - #31 ;
INFO  15:50:38,128 - #43 "
INFO  15:50:38,128 - #40 ADSF
INFO  15:50:38,128 - #43 "
INFO  15:50:38,128 - #8 class
INFO  15:50:38,128 - #40 Table
INFO  15:50:38,128 - #38 {
INFO  15:50:38,129 - #40 int
INFO  15:50:38,129 - #40 pos
INFO  15:50:38,129 - #36 [
INFO  15:50:38,129 - #37 ]
INFO  15:50:38,129 - #32 ,
INFO  15:50:38,129 - #40 neg
INFO  15:50:38,129 - #36 [
INFO  15:50:38,129 - #37 ]
INFO  15:50:38,129 - #31 ;
INFO  15:50:38,129 - #38 {
INFO  15:50:38,129 - #4 void
INFO  15:50:38,129 - #40 putp
INFO  15:50:38,129 - #34 (
INFO  15:50:38,129 - #40 int
INFO  15:50:38,129 - #40 a
INFO  15:50:38,129 - #32 ,
INFO  15:50:38,129 - #40 int
INFO  15:50:38,130 - #40 idx
INFO  15:50:38,130 - #35 )
INFO  15:50:38,130 - #38 {
INFO  15:50:38,130 - #40 this
INFO  15:50:38,130 - #33 .
INFO  15:50:38,130 - #40 pos
INFO  15:50:38,130 - #36 [
INFO  15:50:38,130 - #40 idx
INFO  15:50:38,130 - #37 ]
INFO  15:50:38,130 - #28 =
INFO  15:50:38,130 - #40 a
INFO  15:50:38,130 - #31 ;
INFO  15:50:38,130 - #39 }
INFO  15:50:38,130 - #4 void
INFO  15:50:38,130 - #40 putn
INFO  15:50:38,130 - #34 (
INFO  15:50:38,130 - #40 int
INFO  15:50:38,130 - #40 a
INFO  15:50:38,130 - #32 ,
INFO  15:50:38,130 - #40 int
INFO  15:50:38,131 - #40 idx
INFO  15:50:38,131 - #35 )
INFO  15:50:38,131 - #38 {
INFO  15:50:38,131 - #40 this
INFO  15:50:38,131 - #33 .
INFO  15:50:38,131 - #40 neg
INFO  15:50:38,131 - #36 [
INFO  15:50:38,131 - #40 idx
INFO  15:50:38,131 - #37 ]
INFO  15:50:38,131 - #28 =
INFO  15:50:38,131 - #40 a
INFO  15:50:38,131 - #31 ;
INFO  15:50:38,131 - #39 }
INFO  15:50:38,131 - #40 int
INFO  15:50:38,131 - #40 getp
INFO  15:50:38,131 - #34 (
INFO  15:50:38,132 - #40 int
INFO  15:50:38,132 - #40 idx
INFO  15:50:38,132 - #35 )
INFO  15:50:38,132 - #38 {
INFO  15:50:38,132 - #3 return
INFO  15:50:38,132 - #40 pos
INFO  15:50:38,132 - #36 [
INFO  15:50:38,132 - #40 idx
INFO  15:50:38,132 - #37 ]
INFO  15:50:38,132 - #31 ;
INFO  15:50:38,132 - #39 }
INFO  15:50:38,132 - #40 int
INFO  15:50:38,132 - #40 getn
INFO  15:50:38,132 - #34 (
INFO  15:50:38,132 - #40 int
INFO  15:50:38,132 - #40 idx
INFO  15:50:38,132 - #35 )
INFO  15:50:38,132 - #38 {
INFO  15:50:38,133 - #3 return
INFO  15:50:38,133 - #40 neg
INFO  15:50:38,133 - #36 [
INFO  15:50:38,133 - #40 idx
INFO  15:50:38,133 - #37 ]
INFO  15:50:38,133 - #31 ;
INFO  15:50:38,133 - #39 }
INFO  15:50:38,133 - #39 }
INFO  15:50:38,133 - #39 }
INFO  15:50:38,133 - #40 Table
INFO  15:50:38,133 - #40 val
INFO  15:50:38,133 - #31 ;
INFO  15:50:38,134 - #38 {
INFO  15:50:38,134 - #4 void
INFO  15:50:38,134 - #40 main
INFO  15:50:38,134 - #34 (
INFO  15:50:38,134 - #35 )
INFO  15:50:38,134 - #40 int
INFO  15:50:38,134 - #40 x
INFO  15:50:38,134 - #32 ,
INFO  15:50:38,134 - #40 i
INFO  15:50:38,134 - #31 ;
INFO  15:50:38,134 - #38 {
INFO  15:50:38,134 - #40 val
INFO  15:50:38,134 - #28 =
INFO  15:50:38,135 - #9 new
INFO  15:50:38,135 - #40 Table
INFO  15:50:38,135 - #31 ;
INFO  15:50:38,135 - #40 val
INFO  15:50:38,135 - #33 .
INFO  15:50:38,135 - #40 pos
INFO  15:50:38,135 - #28 =
INFO  15:50:38,135 - #9 new
INFO  15:50:38,135 - #40 int
INFO  15:50:38,135 - #36 [
INFO  15:50:38,135 - #40 size
INFO  15:50:38,135 - #37 ]
INFO  15:50:38,135 - #31 ;
INFO  15:50:38,135 - #40 val
INFO  15:50:38,135 - #33 .
INFO  15:50:38,136 - #40 neg
INFO  15:50:38,136 - #28 =
INFO  15:50:38,136 - #9 new
INFO  15:50:38,136 - #40 int
INFO  15:50:38,136 - #36 [
INFO  15:50:38,136 - #40 size
INFO  15:50:38,136 - #37 ]
INFO  15:50:38,138 - #31 ;
INFO  15:50:38,138 - #40 i
INFO  15:50:38,138 - #28 =
INFO  15:50:38,138 - #42 0
INFO  15:50:38,139 - #31 ;
INFO  15:50:38,139 - #11 do
INFO  15:50:38,139 - #38 {
INFO  15:50:38,139 - #40 val
INFO  15:50:38,139 - #33 .
INFO  15:50:38,139 - #40 putp
INFO  15:50:38,139 - #34 (
INFO  15:50:38,139 - #42 0
INFO  15:50:38,139 - #32 ,
INFO  15:50:38,139 - #40 i
INFO  15:50:38,139 - #35 )
INFO  15:50:38,139 - #31 ;
INFO  15:50:38,139 - #40 val
INFO  15:50:38,139 - #33 .
INFO  15:50:38,139 - #40 putn
INFO  15:50:38,139 - #34 (
INFO  15:50:38,139 - #42 0
INFO  15:50:38,140 - #32 ,
INFO  15:50:38,140 - #40 i
INFO  15:50:38,140 - #35 )
INFO  15:50:38,140 - #31 ;
INFO  15:50:38,140 - #40 i
INFO  15:50:38,140 - #29 ++
INFO  15:50:38,140 - #31 ;
INFO  15:50:38,140 - #39 }
INFO  15:50:38,140 - #12 while
INFO  15:50:38,140 - #34 (
INFO  15:50:38,140 - #40 i
INFO  15:50:38,140 - #24 <
INFO  15:50:38,140 - #40 size
INFO  15:50:38,140 - #35 )
INFO  15:50:38,141 - #31 ;
INFO  15:50:38,141 - #10 read
INFO  15:50:38,141 - #34 (
INFO  15:50:38,141 - #40 x
INFO  15:50:38,141 - #35 )
INFO  15:50:38,141 - #31 ;
INFO  15:50:38,141 - #11 do
INFO  15:50:38,141 - #38 {
INFO  15:50:38,141 - #5 if
INFO  15:50:38,141 - #34 (
INFO  15:50:38,141 - #40 x
INFO  15:50:38,141 - #23 >=
INFO  15:50:38,141 - #40 size
INFO  15:50:38,141 - #35 )
INFO  15:50:38,141 - #7 break
INFO  15:50:38,141 - #31 ;
INFO  15:50:38,141 - #5 if
INFO  15:50:38,141 - #34 (
INFO  15:50:38,141 - #42 0
INFO  15:50:38,141 - #25 <=
INFO  15:50:38,142 - #40 x
INFO  15:50:38,142 - #26 &&
INFO  15:50:38,142 - #40 x
INFO  15:50:38,142 - #24 <
INFO  15:50:38,142 - #40 size
INFO  15:50:38,142 - #35 )
INFO  15:50:38,142 - #38 {
INFO  15:50:38,142 - #40 val
INFO  15:50:38,142 - #33 .
INFO  15:50:38,142 - #40 putp
INFO  15:50:38,142 - #34 (
INFO  15:50:38,142 - #40 val
INFO  15:50:38,142 - #33 .
INFO  15:50:38,142 - #40 getp
INFO  15:50:38,142 - #34 (
INFO  15:50:38,142 - #40 x
INFO  15:50:38,142 - #35 )
INFO  15:50:38,142 - #15 +
INFO  15:50:38,143 - #42 1
INFO  15:50:38,143 - #35 )
INFO  15:50:38,143 - #31 ;
INFO  15:50:38,143 - #39 }
INFO  15:50:38,143 - #6 else
INFO  15:50:38,143 - #5 if
INFO  15:50:38,143 - #34 (
INFO  15:50:38,143 - #16 -
INFO  15:50:38,143 - #40 size
INFO  15:50:38,143 - #24 <
INFO  15:50:38,143 - #40 x
INFO  15:50:38,143 - #26 &&
INFO  15:50:38,143 - #40 x
INFO  15:50:38,143 - #24 <
INFO  15:50:38,143 - #42 0
INFO  15:50:38,143 - #35 )
INFO  15:50:38,143 - #38 {
INFO  15:50:38,143 - #40 val
INFO  15:50:38,143 - #33 .
INFO  15:50:38,143 - #40 putn
INFO  15:50:38,143 - #34 (
INFO  15:50:38,144 - #40 val
INFO  15:50:38,144 - #33 .
INFO  15:50:38,144 - #40 getn
INFO  15:50:38,144 - #34 (
INFO  15:50:38,144 - #16 -
INFO  15:50:38,144 - #40 x
INFO  15:50:38,144 - #35 )
INFO  15:50:38,144 - #15 +
INFO  15:50:38,144 - #42 1
INFO  15:50:38,144 - #35 )
INFO  15:50:38,144 - #31 ;
INFO  15:50:38,144 - #39 }
INFO  15:50:38,144 - #10 read
INFO  15:50:38,144 - #34 (
INFO  15:50:38,144 - #40 x
INFO  15:50:38,144 - #35 )
INFO  15:50:38,144 - #31 ;
INFO  15:50:38,144 - #39 }
INFO  15:50:38,144 - #39 }
INFO  15:50:38,144 - #12 while
INFO  15:50:38,144 - #34 (
INFO  15:50:38,144 - #40 true
INFO  15:50:38,144 - #35 )
INFO  15:50:38,144 - #31 ;
INFO  15:50:38,145 - #39 }
