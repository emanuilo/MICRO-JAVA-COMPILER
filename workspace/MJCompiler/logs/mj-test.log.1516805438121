INFO  15:49:37,632 - Compiling source file: E:\Faks\IV\IV-1-PP1\Projekat\Projekat\workspace\MJCompiler\test\program.mj
INFO  15:49:37,636 - #1 program
INFO  15:49:37,636 - #40 P
INFO  15:49:37,636 - #40 const
INFO  15:49:37,636 - #40 int
INFO  15:49:37,636 - #40 size
INFO  15:49:37,636 - #28 =
INFO  15:49:37,636 - #42 10
INFO  15:49:37,637 - #31 ;
INFO  15:49:37,637 - #43 "
INFO  15:49:37,637 - #40 ADSF
INFO  15:49:37,637 - #43 "
INFO  15:49:37,637 - #8 class
INFO  15:49:37,637 - #40 Table
INFO  15:49:37,637 - #38 {
INFO  15:49:37,637 - #40 int
INFO  15:49:37,637 - #40 pos
INFO  15:49:37,637 - #36 [
INFO  15:49:37,637 - #37 ]
INFO  15:49:37,637 - #32 ,
INFO  15:49:37,637 - #40 neg
INFO  15:49:37,637 - #36 [
INFO  15:49:37,638 - #37 ]
INFO  15:49:37,638 - #31 ;
INFO  15:49:37,638 - #38 {
INFO  15:49:37,638 - #4 void
INFO  15:49:37,638 - #40 putp
INFO  15:49:37,638 - #34 (
INFO  15:49:37,638 - #40 int
INFO  15:49:37,638 - #40 a
INFO  15:49:37,638 - #32 ,
INFO  15:49:37,638 - #40 int
INFO  15:49:37,638 - #40 idx
INFO  15:49:37,638 - #35 )
INFO  15:49:37,638 - #38 {
INFO  15:49:37,638 - #40 this
INFO  15:49:37,638 - #33 .
INFO  15:49:37,638 - #40 pos
INFO  15:49:37,638 - #36 [
INFO  15:49:37,638 - #40 idx
INFO  15:49:37,638 - #37 ]
INFO  15:49:37,638 - #28 =
INFO  15:49:37,638 - #40 a
INFO  15:49:37,639 - #31 ;
INFO  15:49:37,639 - #39 }
INFO  15:49:37,639 - #4 void
INFO  15:49:37,639 - #40 putn
INFO  15:49:37,639 - #34 (
INFO  15:49:37,639 - #40 int
INFO  15:49:37,639 - #40 a
INFO  15:49:37,639 - #32 ,
INFO  15:49:37,639 - #40 int
INFO  15:49:37,639 - #40 idx
INFO  15:49:37,639 - #35 )
INFO  15:49:37,639 - #38 {
INFO  15:49:37,639 - #40 this
INFO  15:49:37,639 - #33 .
INFO  15:49:37,639 - #40 neg
INFO  15:49:37,639 - #36 [
INFO  15:49:37,640 - #40 idx
INFO  15:49:37,640 - #37 ]
INFO  15:49:37,640 - #28 =
INFO  15:49:37,640 - #40 a
INFO  15:49:37,640 - #31 ;
INFO  15:49:37,640 - #39 }
INFO  15:49:37,640 - #40 int
INFO  15:49:37,640 - #40 getp
INFO  15:49:37,640 - #34 (
INFO  15:49:37,640 - #40 int
INFO  15:49:37,640 - #40 idx
INFO  15:49:37,640 - #35 )
INFO  15:49:37,640 - #38 {
INFO  15:49:37,640 - #3 return
INFO  15:49:37,640 - #40 pos
INFO  15:49:37,640 - #36 [
INFO  15:49:37,640 - #40 idx
INFO  15:49:37,640 - #37 ]
INFO  15:49:37,640 - #31 ;
INFO  15:49:37,640 - #39 }
INFO  15:49:37,640 - #40 int
INFO  15:49:37,640 - #40 getn
INFO  15:49:37,641 - #34 (
INFO  15:49:37,641 - #40 int
INFO  15:49:37,641 - #40 idx
INFO  15:49:37,641 - #35 )
INFO  15:49:37,641 - #38 {
INFO  15:49:37,641 - #3 return
INFO  15:49:37,641 - #40 neg
INFO  15:49:37,641 - #36 [
INFO  15:49:37,641 - #40 idx
INFO  15:49:37,641 - #37 ]
INFO  15:49:37,641 - #31 ;
INFO  15:49:37,641 - #39 }
INFO  15:49:37,641 - #39 }
INFO  15:49:37,641 - #39 }
INFO  15:49:37,641 - #40 Table
INFO  15:49:37,641 - #40 val
INFO  15:49:37,641 - #31 ;
INFO  15:49:37,641 - #38 {
INFO  15:49:37,642 - #4 void
INFO  15:49:37,642 - #40 main
INFO  15:49:37,642 - #34 (
INFO  15:49:37,642 - #35 )
INFO  15:49:37,642 - #40 int
INFO  15:49:37,642 - #40 x
INFO  15:49:37,642 - #32 ,
INFO  15:49:37,642 - #40 i
INFO  15:49:37,642 - #31 ;
INFO  15:49:37,642 - #38 {
INFO  15:49:37,642 - #40 val
INFO  15:49:37,642 - #28 =
INFO  15:49:37,642 - #9 new
INFO  15:49:37,643 - #40 Table
INFO  15:49:37,643 - #31 ;
INFO  15:49:37,643 - #40 val
INFO  15:49:37,643 - #33 .
INFO  15:49:37,643 - #40 pos
INFO  15:49:37,643 - #28 =
INFO  15:49:37,643 - #9 new
INFO  15:49:37,643 - #40 int
INFO  15:49:37,643 - #36 [
INFO  15:49:37,643 - #40 size
INFO  15:49:37,643 - #37 ]
INFO  15:49:37,643 - #31 ;
INFO  15:49:37,643 - #40 val
INFO  15:49:37,643 - #33 .
INFO  15:49:37,643 - #40 neg
INFO  15:49:37,643 - #28 =
INFO  15:49:37,644 - #9 new
INFO  15:49:37,644 - #40 int
INFO  15:49:37,644 - #36 [
INFO  15:49:37,644 - #40 size
INFO  15:49:37,644 - #37 ]
INFO  15:49:37,646 - #31 ;
INFO  15:49:37,646 - #40 i
INFO  15:49:37,646 - #28 =
INFO  15:49:37,646 - #42 0
INFO  15:49:37,646 - #31 ;
INFO  15:49:37,646 - #11 do
INFO  15:49:37,646 - #38 {
INFO  15:49:37,646 - #40 val
INFO  15:49:37,646 - #33 .
INFO  15:49:37,646 - #40 putp
INFO  15:49:37,646 - #34 (
INFO  15:49:37,646 - #42 0
INFO  15:49:37,646 - #32 ,
INFO  15:49:37,646 - #40 i
INFO  15:49:37,646 - #35 )
INFO  15:49:37,646 - #31 ;
INFO  15:49:37,646 - #40 val
INFO  15:49:37,646 - #33 .
INFO  15:49:37,648 - #40 putn
INFO  15:49:37,648 - #34 (
INFO  15:49:37,648 - #42 0
INFO  15:49:37,648 - #32 ,
INFO  15:49:37,648 - #40 i
INFO  15:49:37,648 - #35 )
INFO  15:49:37,648 - #31 ;
INFO  15:49:37,648 - #40 i
INFO  15:49:37,648 - #29 ++
INFO  15:49:37,648 - #31 ;
INFO  15:49:37,649 - #39 }
INFO  15:49:37,649 - #12 while
INFO  15:49:37,649 - #34 (
INFO  15:49:37,649 - #40 i
INFO  15:49:37,649 - #24 <
INFO  15:49:37,649 - #40 size
INFO  15:49:37,649 - #35 )
INFO  15:49:37,649 - #31 ;
INFO  15:49:37,649 - #10 read
INFO  15:49:37,649 - #34 (
INFO  15:49:37,649 - #40 x
INFO  15:49:37,649 - #35 )
INFO  15:49:37,649 - #31 ;
INFO  15:49:37,649 - #11 do
INFO  15:49:37,649 - #38 {
INFO  15:49:37,649 - #5 if
INFO  15:49:37,649 - #34 (
INFO  15:49:37,650 - #40 x
INFO  15:49:37,650 - #23 >=
INFO  15:49:37,650 - #40 size
INFO  15:49:37,650 - #35 )
INFO  15:49:37,650 - #7 break
INFO  15:49:37,650 - #31 ;
INFO  15:49:37,650 - #5 if
INFO  15:49:37,650 - #34 (
INFO  15:49:37,650 - #42 0
INFO  15:49:37,650 - #25 <=
INFO  15:49:37,650 - #40 x
INFO  15:49:37,650 - #26 &&
INFO  15:49:37,650 - #40 x
INFO  15:49:37,650 - #24 <
INFO  15:49:37,650 - #40 size
INFO  15:49:37,650 - #35 )
INFO  15:49:37,650 - #38 {
INFO  15:49:37,650 - #40 val
INFO  15:49:37,650 - #33 .
INFO  15:49:37,650 - #40 putp
INFO  15:49:37,650 - #34 (
INFO  15:49:37,651 - #40 val
INFO  15:49:37,651 - #33 .
INFO  15:49:37,651 - #40 getp
INFO  15:49:37,651 - #34 (
INFO  15:49:37,651 - #40 x
INFO  15:49:37,651 - #35 )
INFO  15:49:37,651 - #15 +
INFO  15:49:37,652 - #42 1
INFO  15:49:37,652 - #35 )
INFO  15:49:37,652 - #31 ;
INFO  15:49:37,652 - #39 }
INFO  15:49:37,652 - #6 else
INFO  15:49:37,652 - #5 if
INFO  15:49:37,652 - #34 (
INFO  15:49:37,652 - #16 -
INFO  15:49:37,652 - #40 size
INFO  15:49:37,652 - #24 <
INFO  15:49:37,652 - #40 x
INFO  15:49:37,652 - #26 &&
INFO  15:49:37,652 - #40 x
INFO  15:49:37,652 - #24 <
INFO  15:49:37,652 - #42 0
INFO  15:49:37,652 - #35 )
INFO  15:49:37,652 - #38 {
INFO  15:49:37,652 - #40 val
INFO  15:49:37,652 - #33 .
INFO  15:49:37,652 - #40 putn
INFO  15:49:37,652 - #34 (
INFO  15:49:37,652 - #40 val
INFO  15:49:37,652 - #33 .
INFO  15:49:37,653 - #40 getn
INFO  15:49:37,653 - #34 (
INFO  15:49:37,653 - #16 -
INFO  15:49:37,653 - #40 x
INFO  15:49:37,653 - #35 )
INFO  15:49:37,653 - #15 +
INFO  15:49:37,653 - #42 1
INFO  15:49:37,653 - #35 )
INFO  15:49:37,653 - #31 ;
INFO  15:49:37,653 - #39 }
INFO  15:49:37,653 - #10 read
INFO  15:49:37,653 - #34 (
INFO  15:49:37,653 - #40 x
INFO  15:49:37,653 - #35 )
INFO  15:49:37,653 - #31 ;
INFO  15:49:37,653 - #39 }
INFO  15:49:37,653 - #39 }
INFO  15:49:37,653 - #12 while
INFO  15:49:37,653 - #34 (
INFO  15:49:37,653 - #40 true
INFO  15:49:37,653 - #35 )
INFO  15:49:37,653 - #31 ;
INFO  15:49:37,654 - #39 }
